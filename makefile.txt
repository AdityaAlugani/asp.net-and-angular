const  char    mbsSJISKanji[29] = {0x83, 0x65, 0x83, 0x58, 0x83, 0x67, 0x82, 0xc5, 0x82, 0xb7, 
                                    0x81, 0x42, 0x96, 0xb3, 0x8e, 0x8b, 0x82, 0xb5, 0x82, 0xc4, 
                                    0x82, 0xad, 0x82, 0xbe, 0x82, 0xb3, 0x82, 0xa2, 0x00};

// Kanji test string "Testing. Please ignore" (JIS)
const  char    mbsJISKanji[35] =  {0x1B, 0x24, 0x42, 0x25, 0x46, 0x25, 0x39, 0x25, 0x48, 0x24, 
                                    0x47, 0x24, 0x39, 0x21, 0x23, 0x4C, 0x35, 0x3B, 0x6B, 0x24, 
                                    0x37, 0x24, 0x46, 0x24, 0x2F, 0x24, 0x40, 0x24, 0x35, 0x24,
                                    0x24, 0x1B, 0x28, 0x42, 0x00};

// Kanji test string "Testing. Please ignore" (UTF-8)
const char    mbsUtf8Kanji[43] = {0xe3, 0x83, 0x86, 0xe3, 0x82, 0xb9, 0xe3, 0x83, 0x88, 0xe3, 
                                    0x81, 0xa7, 0xe3, 0x81, 0x99, 0xe3, 0x80, 0x82, 0xe7, 0x84, 
                                    0xa1, 0xe8, 0xa6, 0x96, 0xe3, 0x81, 0x97, 0xe3, 0x81, 0xa6,
                                    0xe3, 0x81, 0x8f, 0xe3, 0x81, 0xa0, 0xe3, 0x81, 0x95, 0xe3,
                                    0x81, 0x84, 0x00};





/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#if !defined(XALANAUTOPTR_HEADER_GUARD_1357924680)
#define XALANAUTOPTR_HEADER_GUARD_1357924680



// Base include file.  Must be first.
#include <xalanc/PlatformSupport/PlatformSupportDefinitions.hpp>



#include <cstddef>



XALAN_CPP_NAMESPACE_BEGIN



// We're using our own auto_ptr-like class due to wide
// variations amongst the varous platforms we have to
// support
template<class Type>
class XalanAutoPtr
{
public:

    XalanAutoPtr(Type*  thePointer = 0) :
        m_pointer(thePointer)
    {
    }

    XalanAutoPtr(const XalanAutoPtr<Type>&  theSource) :
        m_pointer(const_cast<XalanAutoPtr<Type>&>(theSource).release())
    {
    }

    XalanAutoPtr<Type>&
    operator=(XalanAutoPtr<Type>&   theRHS)
    {
        if (this != &theRHS)
        {
            // This test ought not to be necessary, but
            // MSVC 6.0 calls delete, which checks for 0.
            // The problem with that is the locking is
            // extremely expensive.
            if (m_pointer != 0)
            {
                delete m_pointer;
            }

            m_pointer = theRHS.release();
        }

        return *this;
    }

    ~XalanAutoPtr()
    {
        // See note in operator=() about this...
        if (m_pointer != 0)
        {
            delete m_pointer;
        }
    }

    Type&
    operator*() const
    {
        return *m_pointer;
    }

    Type*
    operator->() const
    {
        return m_pointer;
    }

    Type*
    get() const
    {
        return m_pointer;
    }

    Type*
    release()
    {
        Type* const temp = m_pointer;

        m_pointer = 0;

        return temp;
    }

    void
    reset(Type*     thePointer = 0)
    {
        // See note in operator=() about this...
        if (m_pointer != 0)
        {
            delete m_pointer;
        }

        m_pointer = thePointer;
    }

private:

    Type*   m_pointer;
};



// A class similar to XalanAutoPtr, but for arrays.
template<class Type>
class XalanArrayAutoPtr
{
public:

    XalanArrayAutoPtr(Type*     thePointer = 0) :
        m_pointer(thePointer)
    {
    }

    XalanArrayAutoPtr(const XalanArrayAutoPtr<Type>&    theSource) :
        m_pointer(((XalanArrayAutoPtr<Type>&)theSource).release())
    {
    }

    XalanArrayAutoPtr<Type>&
    operator=(XalanArrayAutoPtr<Type>&  theRHS)
    {
        if (this != &theRHS)
        {
            // This test ought not to be necessary, but
            // MSVC 6.0 calls delete, which checks for 0.
            // The problem with that is the locking is
            // extremely expensive.
            if (m_pointer != 0)
            {
                delete [] m_pointer;
            }

            m_pointer = theRHS.release();
        }

        return *this;
    }

    ~XalanArrayAutoPtr()
    {
        // See note in operator=() about this...
        if (m_pointer != 0)
        {
            delete [] m_pointer;
        }
    }

    Type&
    operator*() const
    {
        return *m_pointer;
    }

    Type&
#if defined(XALAN_STRICT_ANSI_HEADERS)
    operator[](std::size_t  index) const
#else
    operator[](size_t   index) const
#endif
    {
        return m_pointer[index];
    }

    Type*
    get() const
    {
        return m_pointer;
    }

    Type*
    release()
    {
        Type* const temp = m_pointer;

        m_pointer = 0;

        return temp;
    }

    void
    reset(Type*     thePointer = 0)
    {
        // See note in operator=() about this...
        if (m_pointer != 0)
        {
            delete [] m_pointer;
        }

        m_pointer = thePointer;
    }

private:

    Type*   m_pointer;
};



XALAN_CPP_NAMESPACE_END



#endif  // if !defined(XALANAUTOPTR_HEADER_GUARD_1357924680)





























//==============================================================================
//              <Standard Micron Copyright Information>
//
// Copyright 1999 Micron Technology, Inc. All Rights Reserved.
// Unpublished all rights reserved under the copyright laws of
// the United States. USE OF A COPYRIGHT NOTICE IS PRECAUTIONARY
// ONLY AND DOES NOT IMPLY PUBLICATION OR DISCLOSURE.
//
// THIS SOFTWARE CONTAINS CONFIDENTIAL INFORMATION AND
// TRADE SECRETS OF MICRON TECHNOLOGY, INC. USE, DISCLOSURE,
// OR REPRODUCTION IS PROHIBITED WITHOUT THE PRIOR EXPRESS
// WRITTEN PERMISSION OF MICRON TECHNOLOGY, INC.
//==============================================================================
/*************************************************************************
**
** MTPage.cpp                                               3-Jul-1998
**
** Purpose: Object class to send text pages
**
**************************************************************************/

#if defined (_WIN32)
#pragma warning (disable : 4786)
#endif

#include "cmtpagew.h"
#include "mtmailpage.h"

extern "C"
{
#if defined (_WIN32) 
#   include <windows.h>
#   include <sys\timeb.h>
#   include <process.h> 
//#   include <mipc.h>
#   pragma warning  (disable : 4267 4244 4996 )
#endif

#if defined(cygwin)
#   include <cygwin/in.h>
#endif

#if defined(unix) || defined(__xlC__) || defined(linux) || defined(cygwin)
#   include <sys/socket.h>
#   include <netdb.h>
#   include <unistd.h>
#   include <errno.h>
#   include <sys/timeb.h>
#   include <strings.h>
#   include <arpa/inet.h>
#endif

#if  defined(__DECCXX) || defined(__DECC)
#   include <socket.h>
#   include <in.h>
#   include <netdb.h>
#   include <errno.h>
#   include <unixlib.h>
#   include <unixio.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <time.h>

}



#ifdef __VMS
#   define WSAGetLastError(p) errno
#   define WSASetLastError(p)
#elif defined(unix) || defined(__xlC__) || defined(cygwin)
#   define WSAGetLastError() errno
#   define WSASetLastError(p)
#endif



#define SNPP_PORT 444
#define SNPP_HOST "snpp"


BEGIN_NAMESPACE(mti)


class CMTSnpp
{
public:

    CMTSnpp();
    ~CMTSnpp();
    CMTSnpp(const CMTSnpp& cSnpp);

    long Connect(const STD(string) &sHost = SNPP_HOST);
    long Logi(const STD(string) &sFrom, const STD(string) &sPassword = "");
    long Call(const STD(string) &sCallerID);
    long Hold(const STD(string) &sAfter);
    long Mess(const STD(string) &sMessage);
    long Page(const STD(string) &sPager);
    long Send();
    long Rset();
    long Quit();
    long Disconnect();
    const STD(string)& GetStatusText();
    long Connected();

    /* These were private, but needed directly in the CMTPagerImp class so made public. */
    long mRecv(char *pzBuffer, const long lBufferSize);
    long mSend(const STD(string)&sBuffer);

    long StreamReadLine(STD(string)& out_xBuffer, const long& in_lTimeOut);
    long StreamWrite(const STD(string)& in_xData);
    long StreamWriteLine(const STD(string)& in_xData);

    static const long m_lINFINITE_WAIT;

private:

    void        mSetStatusText(const STD(string) &InText);

    STD(string) mStatusText;
    long   mWSAStartup;


    /* from CMTIO                                                         */
    char*               m_zBuffer;
    char                m_cEOLDelimiter;
    long                m_lBufferSize;
    fd_set              m_sRead_FDS;
    int                 m_iIOHandle;
    static const long   m_lDefBufSize;
    STD(string)         m_InvalidUsers;

	char				m_ServerIP[20];

};

const long CMTSnpp::m_lDefBufSize = 8192;
const long CMTSnpp::m_lINFINITE_WAIT = LONG_MAX;



class CMTPageImp
{
public:

    CMTPageImp();
    ~CMTPageImp();
    CMTPageImp &operator=(const CMTPageImp &Page);
    CMTPageImp(const CMTPageImp &Page);

    void SetTo(const STD(string) &InToList);
    void AppendTo(const STD(string) &InToList);
    const STD(string)& GetTo();
    const wchar_t*     GetTow();

    void SetFrom(const STD(string) &InFrom);
    const STD(string)& GetFrom();
    const wchar_t*     GetFromw();

    void SetPageMsg(const STD(string) &Inmessage);
    const STD(string)& GetPageMsg();
    const wchar_t*     GetPageMsgw();

    void SetAfter(const STD(string) &InAfter);
    const STD(string)& GetAfter();
    const wchar_t*     GetAfterw();

    void SetSystem(const STD(string) &InSystem);
    const STD(string)& GetSystem();
    const wchar_t*     GetSystemw();

    void Reset ();

    long Send();
    long Send(const STD(string) &InToList,
                   const STD(string) &InMessage = "",
                   const STD(string) &InFrom    = "",
                   const STD(string) &InAfter   = "",
                   const STD(string) &InSystem  = "");

    long Connect(const STD(string) &sHost = "snpp");
    void Disconnect(void);

    long GetStatusCode();
    const STD(string)& GetStatusText();
    const wchar_t*     GetStatusTextw();

    long Lookup(const STD(string)& InxItem, CMTPagerwVect& InOutvPagers);
    long GetServiceDataFromId(long InlPageSvcId, STD(string)& OutxPageSvcCode, STD(string)& OutxPageSvcDesc);
    long GetPagerTypeDataFromId(long InlPagerTypeId, STD(string)& OutxPagerTypeCode, STD(string)& OutxPagerTypeDesc);
    
private:

    CMTSnpp     mSnpp;

    void        Initialize(void);
    void        mSetStatusText(const STD(string) &InText);

    long            mStatusCode;
    STD(string)     mStatusText;
    wchar_t*        mwStatusText;

    STD(string)     mToList;
    STD(string)     mMessage;
    STD(string)     mFrom;
    STD(string)     mAfter;
    STD(string)     mSystem;

    wchar_t*        mwToList;
    wchar_t*        mwMessage;
    wchar_t*        mwFrom;
    wchar_t*        mwAfter;
    wchar_t*        mwSystem;

#if defined (_WIN32)
    HINSTANCE mhinstLib;
#endif
};



class CMTPagerImp
{
public:

    CMTPagerImp();
    CMTPagerImp(const STD(string)& xEXPNLine);

    CMTPagerImp& operator= (const CMTPagerImp& Pager);
    CMTPagerImp(const CMTPagerImp& Pager);

    ~CMTPagerImp();

    const wchar_t*      GetStatusCodew(void);
    const STD(string)&  GetStatusCode(void);
    const wchar_t*      GetSubscriberNamew(void);
    const STD(string)&  GetSubscriberName(void);
    const wchar_t*      GetPagerNumberw(void);
    const STD(string)&  GetPagerNumber(void);
    const wchar_t*      GetDeliveryMaskw(void);
    const STD(string)&  GetDeliveryMask(void);
    unsigned long       GetContactWorkerNo(void);
    const wchar_t*      GetAlphaNumericFlagw(void);
    const STD(string)&  GetAlphaNumericFlag(void);
    unsigned long       GetMaxMessageSize(void);
    long                GetGMTOffset(void);
    long                GetServiceId(void);
    long                GetPagerTypeId(void);
    
    void                PrintPagerData(void);

private:
    long                mStatusCode;
    STD(string)         mStatusText;
    wchar_t*            mwStatusText;

    void                mSetStatusText(const STD(string) &InText);
    void                Initialize(void);


    STD(string)         mxStatusCode;
    wchar_t*            mwStatusCode;
    STD(string)         mxSubscriberName;
    wchar_t*            mwSubscriberName;
    STD(string)         mxPagerNo;
    wchar_t*            mwPagerNo;
    STD(string)         mxPagerMask;
    wchar_t*            mwPagerMask;
    unsigned long       mulContactWorkerNo;
    STD(string)         mxAlphaNumericFlag;
    wchar_t*            mwAlphaNumericFlag;
    unsigned long       mulPagerBufferSize;
    unsigned long       mulMaxSvcPageSize;
    long                mlGMTOffset;
    long                mlServiceId;
    long                mlPagerTypeId;
};


//
// Helper routines...
//
//wchar_t* cmtpagew_wcscpy_w_new
#ifndef SAFE_DELETE
#   define SAFE_DELETE(pPtr)    ( pPtr ? delete pPtr, pPtr = NULL : 0 )
#endif



void CMTPagerImp::Initialize(void)
/***************************************************************************
** Purpose: Class Constructor
**
** Returns: Nothing
**
** History: 23-Jul-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    mwStatusCode        = NULL;
    mxStatusCode        = "";
    mwSubscriberName    = NULL;
    mxSubscriberName    = "";
    mwPagerNo           = NULL;
    mxPagerNo           = "";
    mwPagerMask         = NULL;
    mxPagerMask         = "";
    mulContactWorkerNo  = 0;
    mwAlphaNumericFlag  = NULL;
    mxAlphaNumericFlag  = "";
    mulPagerBufferSize  = 0;
    mulMaxSvcPageSize   = 0;
    mlGMTOffset         = 0;
    mlServiceId         = 0;
    mlPagerTypeId       = 0;
}



CMTPagerImp::CMTPagerImp()
/***************************************************************************
** Purpose: Class Constructor
**
** Returns: Nothing
**
** History: 23-Jul-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    Initialize();
}



CMTPagerImp::CMTPagerImp(const STD(string)& xEXPNLine)
/***************************************************************************
** Purpose: Class Constructor
**
** Returns: Nothing
**
** History: 23-Jul-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    STD(string)     xLine = xEXPNLine;
    STD(string)     xToken;
    

    Initialize();

    if( !xLine.empty() )
    {
		// 214-PGR-I-SUCCESS,JBIRD,8000001,   ALWAYS,    2, 30038,6422,21801,21801,650255,A,500,1000,-360
        // 214-PGR-I-SUCCESS,JBIRD,2088669350,ALWAYS,15034,100059,6422,21801,21801,896780,A,160, 136, -360
        // 0                 1     2          3      4     5      6    7     8     9      1011  12   13

        STD(basic_string) <char>::size_type nPos = (STD(string)::npos + 1);
        
        for (int iIndx = 0; iIndx <= 13 && nPos != STD(string)::npos; iIndx++)
        {
            /* Look for next occurrence of the separator */
            STD(basic_string) <char>::size_type nPos = xLine.find(",");

            if ( nPos != STD(string)::npos || iIndx == 13 ) /* found it (The last field {13} has no comma)*/
            {
                xToken = xLine.substr(0, nPos);  /* copy out the token just found       */
                xLine.erase(0, nPos + 1);        /* erase the parameter from the string */

                switch ( iIndx )
                {
                    case 0:
                        xToken.erase(xToken.begin(), xToken.begin()+4);
                        mxStatusCode = xToken;
                        break;
                    case 1:
                        mxSubscriberName = xToken;
                        break;
                    case 2:
                        mxPagerNo = xToken;
                        break;
                    case 3:
                        mxPagerMask = xToken;
                        break;
                    case 4:
                        mlPagerTypeId = atol(xToken.c_str());
                        break;
                    case 5:
                        mlServiceId = atol(xToken.c_str());
                        break;
                    case 6:
                        mulContactWorkerNo = atol(xToken.c_str());
                        break;
                    case 7:
                    case 8:
                    case 9:
                        break;
                    case 10:
                        mxAlphaNumericFlag = xToken;
                        break;
                    case 11:
                        mulPagerBufferSize = atol(xToken.c_str());
                        break;
                    case 12:
                        mulMaxSvcPageSize = atol(xToken.c_str());
                        break;
                    case 13:
                        mlGMTOffset = atol(xToken.c_str());
                        break;
                }
                    
            }
            else /* no separator found */
            {
                //Initialize();
                break;
            }
        }
    }
}



CMTPagerImp::~CMTPagerImp()
/***************************************************************************
** Purpose: Class Destructor
**
** Returns: Nothing
**
** History: 23-Jul-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    SAFE_DELETE(mwStatusCode);
    SAFE_DELETE(mwSubscriberName);
    SAFE_DELETE(mwPagerNo);
    SAFE_DELETE(mwPagerMask);
    SAFE_DELETE(mwAlphaNumericFlag);
}



CMTPagerImp& CMTPagerImp::operator=(const CMTPagerImp &cPager)
/***************************************************************************
** Purpose: '=' operator
**
** Returns: Reference to new object
**
** History: 23-Jul-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    if ( this == &cPager ) goto RET;

    mxStatusCode        = cPager.mxStatusCode;
    mxSubscriberName    = cPager.mxSubscriberName;
    mxPagerNo           = cPager.mxPagerNo;
    mxPagerMask         = cPager.mxPagerMask;
    mulContactWorkerNo  = cPager.mulContactWorkerNo;
    mxAlphaNumericFlag  = cPager.mxAlphaNumericFlag;
    mulPagerBufferSize  = cPager.mulPagerBufferSize;
    mulMaxSvcPageSize   = cPager.mulMaxSvcPageSize;
    mlGMTOffset         = cPager.mlGMTOffset;
    mlServiceId         = cPager.mlServiceId;
    mlPagerTypeId       = cPager.mlPagerTypeId;

RET:
    return *this;
}



CMTPagerImp::CMTPagerImp(const CMTPagerImp& cPager)
/***************************************************************************
** Purpose: Copy constructor
**
** Returns: Nothing
**
** History: 23-Jul-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    Initialize();

    mxStatusCode        = cPager.mxStatusCode;
    mxSubscriberName    = cPager.mxSubscriberName;
    mxPagerNo           = cPager.mxPagerNo;
    mxPagerMask         = cPager.mxPagerMask;
    mulContactWorkerNo  = cPager.mulContactWorkerNo;
    mxAlphaNumericFlag  = cPager.mxAlphaNumericFlag;
    mulPagerBufferSize  = cPager.mulPagerBufferSize;
    mulMaxSvcPageSize   = cPager.mulMaxSvcPageSize;
    mlGMTOffset         = cPager.mlGMTOffset;
    mlServiceId         = cPager.mlServiceId;
    mlPagerTypeId       = cPager.mlPagerTypeId;
}



void CMTPagerImp::mSetStatusText(const STD(string) &InText)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 23-Jul-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    mStatusText.erase();
    mStatusText = InText;
}



const wchar_t* CMTPagerImp::GetStatusCodew(void)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 5-Aug-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    SAFE_DELETE(mwStatusCode);
    
    hrMbsToWcs(&mwStatusCode, mxStatusCode.c_str());

    return mwStatusCode;
}



const STD(string)& CMTPagerImp::GetStatusCode(void)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 5-Aug-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    return mxStatusCode;
}



const wchar_t* CMTPagerImp::GetSubscriberNamew(void)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 5-Aug-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    SAFE_DELETE(mwSubscriberName);
    
    hrMbsToWcs(&mwSubscriberName, mxSubscriberName.c_str());

    return mwSubscriberName;
}



const STD(string)& CMTPagerImp::GetSubscriberName(void)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 5-Aug-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    return mxSubscriberName;
}



const wchar_t* CMTPagerImp::GetPagerNumberw(void)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 5-Aug-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    SAFE_DELETE(mwPagerNo);
    
    hrMbsToWcs(&mwPagerNo, mxPagerNo.c_str());

    return mwPagerNo;
}



const STD(string)& CMTPagerImp::GetPagerNumber(void)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 5-Aug-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    return mxPagerNo;
}



const wchar_t* CMTPagerImp::GetDeliveryMaskw(void)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 5-Aug-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    SAFE_DELETE(mwPagerMask);
    
    hrMbsToWcs(&mwPagerMask, mxPagerMask.c_str());

    return mwPagerMask;
}



const STD(string)& CMTPagerImp::GetDeliveryMask(void)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 5-Aug-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    return mxPagerMask;
}



unsigned long CMTPagerImp::GetContactWorkerNo(void)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 5-Aug-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    return mulContactWorkerNo;
}



const wchar_t* CMTPagerImp::GetAlphaNumericFlagw(void)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 5-Aug-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    SAFE_DELETE(mwAlphaNumericFlag);
    
    hrMbsToWcs(&mwAlphaNumericFlag, mxAlphaNumericFlag.c_str());

    return mwAlphaNumericFlag;
}



const STD(string)& CMTPagerImp::GetAlphaNumericFlag(void)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 5-Aug-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    return mxAlphaNumericFlag;
}



unsigned long CMTPagerImp::GetMaxMessageSize(void)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 5-Aug-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    return (mulPagerBufferSize < mulMaxSvcPageSize ? mulPagerBufferSize : mulMaxSvcPageSize);
}



long CMTPagerImp::GetGMTOffset(void)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 5-Aug-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    return mlGMTOffset;
}



long CMTPagerImp::GetServiceId(void)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 5-Aug-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    return mlServiceId;
}



long CMTPagerImp::GetPagerTypeId(void)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 5-Aug-2003 John Bird   Initial Creation
**
***************************************************************************/
{
    return mlPagerTypeId;
}



void CMTPagerImp::PrintPagerData(void)
/***************************************************************************
** Purpose:
**
** Returns:
**
** History: 5-Aug-2003 John Bird   Initial Creation
**
***************************************************************************/
{

    printf(">>> PagerData\n");
    printf("   Status Code      '%s'\n", mxStatusCode.c_str());
    printf("   SubscriberName   '%s'\n", mxSubscriberName.c_str());
    printf("   PagerNo          '%s'\n", mxPagerNo.c_str());
    printf("   PagerMask        '%s'\n", mxPagerMask.c_str());
    printf("   ContactWorkerNo   %lu\n", mulContactWorkerNo);
    printf("   AlphaNumericFlag '%s'\n", mxAlphaNumericFlag.c_str());
    printf("   PagerBufferSize   %lu\n", mulPagerBufferSize);
    printf("   MaxSvcPageSize    %lu\n", mulMaxSvcPageSize);
    printf("   GMTOffset         %d\n",  (int)mlGMTOffset);
    printf("<<< PagerData\n");

    return;
}



void CMTPageImp::Initialize(void)
/***************************************************************************
** Purpose: Class Constructor
**
** Returns: Nothing
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    mwToList    = NULL;
    mwMessage   = NULL;
    mwFrom      = NULL;
    mwAfter     = NULL;
    mwSystem    = NULL;
    mwStatusText = NULL;

#if defined (_WIN32)
    mhinstLib = NULL;
#endif
}



CMTPageImp::CMTPageImp(void)
/***************************************************************************
** Purpose: Class Constructor
**
** Returns: Nothing
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    Initialize();
}



CMTPageImp::CMTPageImp(const CMTPageImp& cPage)
/***************************************************************************
** Purpose: Copy constructor
**
** Returns: Nothing
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    Initialize();

    mToList  = cPage.mToList;
    mMessage = cPage.mMessage;
    mFrom    = cPage.mFrom;
    mAfter   = cPage.mAfter;
    mSystem  = cPage.mSystem;
}



CMTPageImp::~CMTPageImp(void)
/***************************************************************************
** Purpose: Class Destructor
**
** Returns: Nothing
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{

    if ( mSnpp.Connected() )
    {
        mSnpp.Disconnect();
    }

    if ( mwToList    != NULL ) delete mwToList;
    if ( mwMessage   != NULL ) delete mwMessage;
    if ( mwFrom      != NULL ) delete mwFrom;
    if ( mwAfter     != NULL ) delete mwAfter;
    if ( mwSystem    != NULL ) delete mwSystem;

#if defined (_WIN32)
    if ( mhinstLib != NULL) FreeLibrary(mhinstLib); 
#endif
}



CMTPageImp& CMTPageImp::operator=(const CMTPageImp &cPage)
/***************************************************************************
** Purpose: '=' operator
**
** Returns: Reference to new object
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    if ( this == &cPage ) goto RET;

    mToList  = cPage.mToList;
    mMessage = cPage.mMessage;
    mFrom    = cPage.mFrom;
    mAfter   = cPage.mAfter;
    mSystem  = cPage.mSystem;

RET:
    return *this;
}



void CMTPageImp::SetTo(const STD(string) &sToList)
/***************************************************************************
** Purpose: Sets the "mToList" member variable
**
** Returns: Nothing
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    mToList.erase();
    mToList = sToList;
}



void CMTPageImp::AppendTo(const STD(string) &sToList)
/***************************************************************************
** Purpose: Appends the value to the end of the "mToList" member variable
**
** Returns: Nothing
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    if ( mToList.length() > 0 ) mToList += ",";
    mToList += sToList;
}



const STD(string)& CMTPageImp::GetTo(void)
/***************************************************************************
** Purpose: Gets the value of the "mToList" member variable
**
** Returns: Reference to a STD(string)
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    return mToList;
}



const wchar_t* CMTPageImp::GetTow(void)
/***************************************************************************
** Purpose: Gets the value of the "mToList" member variable
**
** Returns: Reference to a STD(string)
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    SAFE_DELETE(mwToList);
    
    hrMbsToWcs(&mwToList, mToList.c_str());

    return mwToList;
}



void CMTPageImp::SetFrom(const STD(string) &sFrom)
/***************************************************************************
** Purpose: Sets the value of the "sFrom" member variable
**
** Returns: nothing
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    mFrom.erase();
    mFrom = sFrom;
}



const STD(string)& CMTPageImp::GetFrom(void)
/***************************************************************************
** Purpose: returns the value of the "mFrom" member variable
**
** Returns: reference to a STD(string)
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    return mFrom;
}



const wchar_t* CMTPageImp::GetFromw(void)
/***************************************************************************
** Purpose: returns the value of the "mFrom" member variable
**
** Returns: reference to a STD(string)
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    SAFE_DELETE(mwFrom);

    hrMbsToWcs(&mwFrom, mFrom.c_str());

    return mwFrom;
}



void CMTPageImp::SetPageMsg(const STD(string) &sMessage)
/***************************************************************************
** Purpose: Sets the value of the "sMessage" member variable
**
** Returns: nothing
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    mMessage.erase();
    mMessage = sMessage;
}



const STD(string)& CMTPageImp::GetPageMsg(void)
/***************************************************************************
** Purpose: Returns the value of the "mMessage" member variable
**
** Returns: Reference to a STD(string)
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    return mMessage;
}



const wchar_t* CMTPageImp::GetPageMsgw(void)
/***************************************************************************
** Purpose: Returns the value of the "mMessage" member variable
**
** Returns: Reference to a STD(string)
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    SAFE_DELETE(mwMessage);

    hrMbsToWcs(&mwMessage, mMessage.c_str());

    return mwMessage;
}



void CMTPageImp::SetAfter(const STD(string) &sAfter)
/***************************************************************************
** Purpose: Sets the value of the "mAfter" member variable
**
** Returns: nothing
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    mAfter.erase();
    mAfter = sAfter;
}



const STD(string)& CMTPageImp::GetAfter(void)
/***************************************************************************
** Purpose: Returns the value of the "mAfter" member vaariable
**
** Returns: reference to a STD(string)
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    return mAfter;
}



const wchar_t* CMTPageImp::GetAfterw(void)
/***************************************************************************
** Purpose: Returns the value of the "mAfter" member vaariable
**
** Returns: reference to a STD(string)
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    SAFE_DELETE(mwAfter);

    hrMbsToWcs(&mwAfter, mAfter.c_str());

    return mwAfter;
}



void CMTPageImp::SetSystem(const STD(string) &sSystem)
/***************************************************************************
** Purpose: Sets the value of the "mSystem" member variable
**
** Returns: nothing
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    mSystem.erase();
    mSystem = sSystem;
}



const STD(string)& CMTPageImp::GetSystem(void)
/***************************************************************************
** Purpose: Returns the value of the "mSystem" member variable
**
** Returns: Reference to a STD(string)
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    return mSystem;
}



const wchar_t* CMTPageImp::GetSystemw(void)
/***************************************************************************
** Purpose: Returns the value of the "mSystem" member variable
**
** Returns: Reference to a STD(string)
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    SAFE_DELETE(mwSystem);

    hrMbsToWcs(&mwSystem, mSystem.c_str());

    return mwSystem;
}



void CMTPageImp::Reset(void)
/***************************************************************************
** Purpose: Resets all of the member variables to their default values
**
** Returns: nothing
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    mToList.erase();
    mMessage.erase();
    mFrom.erase();
    mAfter.erase();
    mSystem.erase();
}



long CMTPageImp::Send(void)
/***************************************************************************
**
** CMTPageImp::Send
**
** Purpose: Sends the page using the existing member variable settings
**
** Returns:
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    long	bRetStatus = TRUE;
    STD(string) sPager;
    long    lPagerCnt = 0;
    char*   pcPtr = NULL;
    long	bAlreadyConnected = TRUE;
    long    lResult;

    mStatusCode = 0;

    //
    // Make sure we've been supplied with enough information
    //
    if ( mToList.length() == 0 )
    {
        mSetStatusText("'To List' is empty.");
        mStatusCode = 110;
        bRetStatus = FALSE;
        goto RET;
    }

    if ( mMessage.length() == 0 )
    {
        mSetStatusText("'Message' is empty.");
        mStatusCode = 112;
        bRetStatus = FALSE;
        goto RET;
    }

    //
    // If no 'from' name was provided use the currently logged in username
    //
    if ( mFrom.length() == 0 )
    {
        char    zUsername[50];

#if defined(_WIN32)
        unsigned long    lUsernameSize = sizeof(zUsername);

        GetUserNameA(zUsername, &lUsernameSize);
#else
        cuserid(zUsername);
#endif

        mFrom = zUsername;
    }

    //
    // Check to see if we're already connected. If not, connect and
    // remember to disconnect at the end.
    //
    if ( !mSnpp.Connected() )
    {
        if ( !mSnpp.Connect() )
        {
            bRetStatus = FALSE;
            goto RET;
        }

        bAlreadyConnected = FALSE;
    }

    //
    // Start the SNPP protocol
    //

    //
    // send LOGI
    //
    if ( !mSnpp.Logi(mFrom) )
    {
        mSetStatusText(mSnpp.GetStatusText());
        mStatusCode = atol(mSnpp.GetStatusText().c_str());
        bRetStatus = FALSE;
        goto RET;
    }



    //
    // send CALL   (paging system name)
    //
    if ( mSystem.length() > 0 )
    {
        if ( !mSnpp.Call(mSystem) )
        {
            mSetStatusText(mSnpp.GetStatusText());
            mStatusCode = atol(mSnpp.GetStatusText().c_str());
            bRetStatus = FALSE;
            goto RET;
        }
    }

    //
    // send HOLD
    //
    if ( mAfter.length() > 0 )
    {
        if ( !mSnpp.Hold(mAfter) )
        {
            mSetStatusText(mSnpp.GetStatusText());
            mStatusCode = atol(mSnpp.GetStatusText().c_str());
            bRetStatus = FALSE;
            goto RET;
        }
    }


    //
    // send MESS
    //
    if ( !mSnpp.Mess(mMessage) )
    {
        mSetStatusText(mSnpp.GetStatusText());
        mStatusCode = atol(mSnpp.GetStatusText().c_str());
        bRetStatus = FALSE;
        goto RET;
    }


    //
    // send PAGE(s) (pager id's)
    //


    //
    // Parse the list and send one pager id at a time
    //

    pcPtr = (char*)mToList.c_str();

    while ( *pcPtr != '\0' )
    {
        sPager.erase();
        while ( *pcPtr != ',' &&
                *pcPtr != '\0' )
        {
            sPager += *(pcPtr++);
        }

        if ( !mSnpp.Page(sPager) )
        {
            mSetStatusText(mSnpp.GetStatusText());
            mStatusCode = atol(mSnpp.GetStatusText().c_str());
            bRetStatus = FALSE;

            lResult = atoi (GetStatusText().c_str());

            if ( lResult != 550 )  // Not just 'invalid pager id'
            {
                goto RET;
            }
        }
        else
        {
            lPagerCnt++;
        }

        if ( *pcPtr == ',' ) pcPtr++;
    }

    //
    // Make sure we had at least one valid PAGE
    //
    if ( lPagerCnt == 0 )
    {
        mSnpp.Rset();
        mSetStatusText("No valid pager id's were supplied. page not sent.");
        mStatusCode = 550;
        bRetStatus = FALSE;
        goto RET;
    }


    //
    // send SEND
    //
    if ( !mSnpp.Send() )
    {
        mSetStatusText(mSnpp.GetStatusText());
        mStatusCode = atol(mSnpp.GetStatusText().c_str());
        bRetStatus = FALSE;
        goto RET;
    }

    mStatusCode = atol(mSnpp.GetStatusText().c_str());
    mSetStatusText(mSnpp.GetStatusText());

    

RET:

    //
    // If we were already connected before this routine was called leave it
    // connected.
    //
    if ( bAlreadyConnected )
    {
        mSnpp.Rset();
    }
    else
    {
        Disconnect();
    }

    Reset();

    return bRetStatus;
}



long CMTPageImp::Send(const STD(string) &InToList,
                           const STD(string) &InMessage,
                           const STD(string) &InFrom,
                           const STD(string) &InAfter,
                           const STD(string) &InSystem)
/***************************************************************************
** Purpose: Sends the page. Any values passed in will override any previously
**          set values. All values will be reset after the call.
**
** Returns: TRUE or FALSE
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    if ( InToList.length() > 0 )    SetTo(InToList);
    if ( InMessage.length() > 0 )   SetPageMsg(InMessage);
    if ( InFrom.length() > 0 )      SetFrom(InFrom);
    if ( InAfter.length() > 0 )     SetAfter(InAfter);
    if ( InSystem.length() > 0 )    SetSystem(InSystem);

    return Send();
}



long CMTPageImp::Connect(const STD(string) &sHost)
/***************************************************************************
**
** CMTPageImp::Connect
**
** Purpose: Makes a connection to the paging server
**
** Returns: TRUE or FALSE
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    long        bRetStatus = TRUE;


    if ( !mSnpp.Connect(sHost) )
    {
        mSetStatusText(mSnpp.GetStatusText());
        mStatusCode = atol(mSnpp.GetStatusText().c_str());
        bRetStatus = FALSE;
    }

    return bRetStatus;
}



void CMTPageImp::Disconnect(void)
/***************************************************************************
**
** CMTPageImp::Disconnect
**
** Purpose: Disconnect from the paging server
**
** Returns: nothing
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{

    if ( mSnpp.Connected() )
    {
        mSnpp.Quit();
        mSnpp.Disconnect();
    }
}



long CMTPageImp::GetStatusCode(void)
/***************************************************************************
**
** CMTPageImp::GetStatusCode
**
** Purpose: returns the value of the "mStatusCode" member variable. This
**          value will contain the last error code set.
**
** Returns: long (Status Code)
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    return mStatusCode;
}



const STD(string)& CMTPageImp::GetStatusText(void)
/***************************************************************************
**
** CMTPageImp::GetStatusText
**
** Purpose: Returns the value of the "mStatusText" member variable. This
**          value will be the last error STD(string) set.
**
** Returns: reference to a STD(string) (Status Text)
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    return mStatusText;
}



const wchar_t* CMTPageImp::GetStatusTextw(void)
/***************************************************************************
**
** CMTPageImp::GetStatusText
**
** Purpose: Returns the value of the "mStatusText" member variable. This
**          value will be the last error STD(string) set.
**
** Returns: reference to a STD(string) (Status Text)
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    SAFE_DELETE(mwStatusText);

    hrMbsToWcs(&mwStatusText, mStatusText.c_str());

    return mwStatusText;
}



void CMTPageImp::mSetStatusText (const STD(string) &InText)
/***************************************************************************
**
** CMTPageImp::CMTPageImp
**
** Purpose:
**
** Returns:
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    mStatusText.erase();
    mStatusText = InText;
}



long CMTPageImp::Lookup(const STD(string)& InxItem, CMTPagerwVect& InOutvPagers)
/***************************************************************************
** Purpose: 
**
** Returns: 
**
** History: 01-Jul-2003     JBIRD       Initial creation.
**
***************************************************************************/
{
    long   bRetStatus          = TRUE;
    long   bAlreadyConnected   = TRUE;
    
    STD(string) xLine               = "";
    


    //
    // Check to see if we're already connected. If not, connect and
    // remember to disconnect at the end.
    //
    if ( !mSnpp.Connected() )
    {
        if ( !mSnpp.Connect() )
        {
            bRetStatus = FALSE;
            goto RET;
        }

        bAlreadyConnected = FALSE;
    }

    if ( !mSnpp.StreamWriteLine("EXPN " + InxItem) )
    {
        char    zBuffer[255];
        
        sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
        mSetStatusText(zBuffer);
        bRetStatus = FALSE;
        goto RET;
    }


    mSnpp.StreamReadLine(xLine, 45);
    while ( xLine.length() >= 4 &&
            xLine[3] == '-' )
    {
        InOutvPagers.push_back(CMTPagerw(xLine));

        mSnpp.StreamReadLine(xLine, 45);
    }

    //
    // If we were already connected before this routine was called leave it
    // connected.
    //
    if ( bAlreadyConnected )
    {
        mSnpp.Rset();
    }
    else
    {
        mSnpp.Disconnect();
    }

RET:

    return bRetStatus;
}



long CMTPageImp::GetServiceDataFromId(long         InlPageSvcId,
                                         STD(string)& OutxPageSvcCode,
                                         STD(string)& OutxPageSvcDesc)
{
    long   bRetStatus          = TRUE;
    long   bAlreadyConnected   = TRUE;
    
    STD(string) xLine               = "";
    
    char        zCmd[81];


    //
    // Check to see if we're already connected. If not, connect and
    // remember to disconnect at the end.
    //
    if ( !mSnpp.Connected() )
    {
        if ( !mSnpp.Connect() )
        {
            bRetStatus = FALSE;
            goto RET;
        }

        bAlreadyConnected = FALSE;
    }

    sprintf(zCmd, "PSVC %d", (int)InlPageSvcId);
    if ( !mSnpp.StreamWriteLine(zCmd) )
    {
        char    zBuffer[255];
        
        sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
        mSetStatusText(zBuffer);
        bRetStatus = FALSE;
        goto RET;
    }


    mSnpp.StreamReadLine(xLine, 45);
    if ( xLine.length() >= 4 )
    {
        STD(string) xStatNum;
        
        if ( ! hrGetNextToken(xLine, xStatNum, " ") )
        {
            bRetStatus = FALSE;
            goto RET;
        }
        
        if ( "250" == xStatNum )
        {
            if ( ! hrGetNextToken(xLine, OutxPageSvcCode, ",") )
            {
                bRetStatus = FALSE;
                goto RET;
            }
        
            if ( ! hrGetNextToken(xLine, OutxPageSvcDesc, ",") )
            {
                bRetStatus = FALSE;
                goto RET;
            }
        }
        else
        {
            bRetStatus = FALSE;
        }
    }
    else
    {
        bRetStatus = FALSE;
    }


    //
    // If we were already connected before this routine was called leave it
    // connected.
    //
RET:
    if ( bAlreadyConnected )
    {
        mSnpp.Rset();
    }
    else
    {
        mSnpp.Disconnect();
    }

    return bRetStatus;
}



long CMTPageImp::GetPagerTypeDataFromId(long           InlPagerTypeId,
                                             STD(string)&   OutxPagerTypeCode,
                                             STD(string)&   OutxPagerTypeDesc)
{
    long   bRetStatus          = TRUE;
    long   bAlreadyConnected   = TRUE;
    
    STD(string) xLine               = "";


    char        zCmd[81];



    //
    // Check to see if we're already connected. If not, connect and
    // remember to disconnect at the end.
    //
    if ( !mSnpp.Connected() )
    {
        if ( !mSnpp.Connect() )
        {
            bRetStatus = FALSE;
            goto RET;
        }

        bAlreadyConnected = FALSE;
    }

    
    sprintf(zCmd, "PTYP %d", (int)InlPagerTypeId);
    if ( !mSnpp.StreamWriteLine(zCmd) )
    {
        char    zBuffer[255];
        
        sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
        mSetStatusText(zBuffer);
        bRetStatus = FALSE;
        goto RET;
    }


    mSnpp.StreamReadLine(xLine, 45);
    if ( xLine.length() >= 4 )
    {
        STD(string) xStatNum;
        
        if ( ! hrGetNextToken(xLine, xStatNum, " ") )
        {
            bRetStatus = FALSE;
            goto RET;
        }
        
        if ( "250" == xStatNum )
        {
            if ( ! hrGetNextToken(xLine, OutxPagerTypeCode, ",") )
            {
                bRetStatus = FALSE;
                goto RET;
            }
        
            if ( ! hrGetNextToken(xLine, OutxPagerTypeDesc, ",") )
            {
                bRetStatus = FALSE;
                goto RET;
            }
        }
        else
        {
            bRetStatus = FALSE;
        }
    }
    else
    {
        bRetStatus = FALSE;
    }

    //
    // If we were already connected before this routine was called leave it
    // connected.
    //
RET:
    if ( bAlreadyConnected )
    {
        mSnpp.Rset();
    }
    else
    {
        mSnpp.Disconnect();
    }

    return bRetStatus;
}


//////////////////////////////////////////////////////////////////////////////
//
//  C M T S n p p   C l a s s   D e f i n i t i o n
//
/////////////////////////////////////////////////////////////////////////////


CMTSnpp::CMTSnpp(void)
{
    m_iIOHandle = 0;        // not yet connected
    mWSAStartup = FALSE;    // not called WSAStartup yet (WIN32)


    m_lBufferSize = m_lDefBufSize;

    m_zBuffer = new char[m_lBufferSize];
    memset(m_zBuffer, 0, m_lBufferSize);

    m_InvalidUsers = "";
}



CMTSnpp::~CMTSnpp(void)
{
    if ( m_iIOHandle != 0 )   // need to disconnect socket
    {
#  if defined(_WIN32)
        closesocket(m_iIOHandle);
#  else
        close(m_iIOHandle);
#  endif
        m_iIOHandle = 0;
    }

#  if defined (_WIN32)
    if ( mWSAStartup )
    {
        WSACleanup();
    }
#  endif


    if ( m_zBuffer != NULL ) //if it is the letter class
    {
        //deallocate memory for letter class only
        delete[] m_zBuffer;
        m_zBuffer = NULL;
    }

}



CMTSnpp::CMTSnpp(const CMTSnpp &cSnpp)
{
}



long CMTSnpp::Connect(const STD(string) &sHost)
{
    long        lStatus;
    long        bRetStatus = FALSE;
    char        zBuffer[1000];
    long        idx;
    long        lResult;
    char        zSnppServer[64] = "";

    struct hostent*     psHostEnt = NULL;
    struct sockaddr_in  sSockAddr;
    int                 iError;

    m_InvalidUsers = "";

	char    zSnppServerList[1000] = "";
    char    *ptr = NULL;


#if defined(_WIN32)
    short       nVersionRequested;
    WSADATA     WsaData;


    nVersionRequested = MAKEWORD(1,1);
    lStatus = WSAStartup(nVersionRequested, &WsaData);

    if ( lStatus != 0 )
    {
        mSetStatusText("Could not find a usable winsock.dll");
        bRetStatus = FALSE;
        goto RET;
    }

    mWSAStartup = TRUE;
#endif


    // If the default of "snpp" was used build a list of backup servers to attempt the 
    // connection on. Start first with the local domain then move on to other domains
    // to see if a connection can be made over the WAN.

    if ( sHost.length() > 0 && strcmp(sHost.c_str(), "snpp") == 0 )
    {
        char        zLocalDomainName[64];
        gethostname (zLocalDomainName, sizeof(zLocalDomainName));

        // parse the domain name out of the local host name
        if ( (ptr = strchr (zLocalDomainName, '.')) != NULL )
        {
            strcpy (zLocalDomainName, ptr+1);
        }
        else
        {
            zLocalDomainName[0] = '\0';
        }

	    // lower case the domain name
	    ptr = zLocalDomainName;
	    while ( *ptr != '\0' )
	    {
		    if ( *ptr >= 'A' && *ptr <= 'Z' ) *ptr += 32;
		    ptr++;
	    }

        strcpy(zSnppServerList, "snpp"); // attempt the local domain first

        //if ( strlen(zLocalDomainName) == 0 ) strcpy (zLocalDomainName, "micron.com");
        
        if ( strcmp (zLocalDomainName, "micron.com") != 0 )  
            strcat(zSnppServerList, ",snpp.micron.com");

        if ( strcmp (zLocalDomainName, "sing.micron.com") != 0 )
            strcat(zSnppServerList, ",snpp.sing.micron.com");

        if ( strcmp (zLocalDomainName, "lehi.micron.com") != 0 )
            strcat(zSnppServerList, ",snpp.lehi.micron.com");

        if ( strcmp (zLocalDomainName, "mava.micron.com") != 0 )
            strcat(zSnppServerList, ",snpp.mava.micron.com");
    }
    else
    {
        strcpy(zSnppServerList,sHost.c_str());
    }



    // interate the server list and keep trying to send the message to each host until 
    // one accepts a connection and responds with the welcome message
    ptr = zSnppServerList;
    while ( strlen(ptr) > 0 )
    {
        // Get the next host name in the list
        unsigned long lHostLen = strcspn(ptr, ",;"); 

        if ( lHostLen > sizeof(zSnppServer)) // make sure the result fits
            lHostLen = sizeof(zSnppServer);

        strncpy (zSnppServer, ptr, lHostLen);
        zSnppServer[lHostLen] = '\0';

        ptr += lHostLen;            // move to the delimiter
        if ( *ptr != '\0' ) ptr++;  // move past the delimiter if not the end of the string


        //
        // Lookup SNPP server IP address(es) for this host name
        //

#if defined(__VMS) || defined(sun)
        struct hostent  sHostEntity;
        char            zHostEntBuf[2048];

        psHostEnt = gethostbyname_r(zSnppServer,
                                    &sHostEntity,
                                    zHostEntBuf, sizeof(zHostEntBuf),
                                    &iError);
#elif defined(linux) 
        struct hostent  sHostEntity;
        char            zHostEntBuf[2048];
        int             iStatus;


        iStatus = gethostbyname_r(zSnppServer,
                                  &sHostEntity,
                                  zHostEntBuf, sizeof(zHostEntBuf),
                                  &psHostEnt,
                                  &iError);

        if ( iStatus != 0 )
        {
            psHostEnt = NULL;
        }
#elif defined(__xlC__)
        struct hostent          Htent;
        struct hostent_data     Ht_data;

        iError = gethostbyname_r(zSnppServer, &Htent, &Ht_data);

        if ( iError != 0 )
        {
            psHostEnt = NULL;
        }
        else
        {
            psHostEnt = &Htent;
        }
#elif defined(_WIN32) || defined(cygwin)

        psHostEnt = gethostbyname(zSnppServer);
        iError = WSAGetLastError();
#else
#   error "The CMTpagew.cpp module has not been coded to compile on this platform yet."
#endif

        if ( psHostEnt != NULL ) // DNS lookup succeeded
        {
            //
            // Connect the socket to the SNPP server. If the DNS lookup returned more than one
            // address keep trying until one succeeds.
            //
            lStatus = -1;
            for ( idx = 0; psHostEnt->h_addr_list[idx] != 0 && lStatus == -1; idx++ )
            {
                //
                // Open a socket
                //
                if ( (m_iIOHandle = socket (AF_INET, SOCK_STREAM, IPPROTO_TCP)) != -1 )
                {
                    sSockAddr.sin_family = psHostEnt->h_addrtype;
                    sSockAddr.sin_port = htons (SNPP_PORT);
                    sSockAddr.sin_addr = *((struct in_addr *)psHostEnt->h_addr_list[idx]);

                    lStatus = connect(m_iIOHandle,
                                    (struct sockaddr*)&sSockAddr,
                                    sizeof(sSockAddr));

                    if ( lStatus == -1 )
                    {
#if defined (_WIN32)
                        closesocket(m_iIOHandle);
#else
                        close(m_iIOHandle);
#endif
                        m_iIOHandle = 0;
                    }
                }
                else
                {
                    sprintf(zBuffer, "Error on TCP socket open - %d", WSAGetLastError());
                    mSetStatusText(zBuffer);
                }
            }

            if ( lStatus != -1 ) // TCP connection successful
            {

#if defined(_WIN32)
    strncpy (m_ServerIP, inet_ntoa(sSockAddr.sin_addr), sizeof(m_ServerIP)); // format the IP address to an ascii string
    m_ServerIP[sizeof(m_ServerIP)-1] = '\0';
#endif

                // Receive the initial welcome message

                mRecv(zBuffer, sizeof(zBuffer));

                if ( (lResult = atoi(zBuffer)) == 220 )
                {
                    bRetStatus = TRUE;
                    break;
                }
                else
                {
                    if ( lResult == 0 )
                    {
                        sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
                        mSetStatusText(zBuffer);
                    }
                }
            }
        }
    }

RET:
    return bRetStatus;
}



long CMTSnpp::Logi(const STD(string) &sFrom,
                        const STD(string) &sPassword)
{
    long   bRetStatus = TRUE;
    STD(string) sCommand = "LOGI ";
    char      zBuffer[255];
    long      lResult;



    // Get the image name of the calling program
    if ( strlen(hrGetExecName()) )
    {
        sCommand = "EXEC ";
        sCommand += hrGetExecName();
        sCommand += "\r\n";

        if ( !mSend(sCommand) )
        {
            sprintf(zBuffer, "Error on TCP send - %d", WSAGetLastError());
            mSetStatusText(zBuffer);
            bRetStatus = FALSE;
            goto RET;
        }

        mRecv(zBuffer, sizeof(zBuffer));

        if ( (lResult = atoi(zBuffer)) != 250 )
        {
            if ( lResult == 0 )
            {
                sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
            }

            mSetStatusText(zBuffer);
            bRetStatus = FALSE;
            goto RET;
        }
    }
    

    sCommand = "LOGI ";
    sCommand += sFrom;

    if ( sPassword.length() > 0 )
    {
        sCommand += " ";
        sCommand += sPassword;
    }

    sCommand += "\r\n";

    if ( !mSend(sCommand) )
    {
        sprintf(zBuffer, "Error on TCP send - %d", WSAGetLastError());
        mSetStatusText(zBuffer);
        bRetStatus = FALSE;
        goto RET;
    }

    mRecv(zBuffer, sizeof(zBuffer));

    if ( (lResult = atoi(zBuffer)) != 250 )
    {
        if ( lResult == 0 )
        {
            sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
        }

        mSetStatusText(zBuffer);
        bRetStatus = FALSE;
    }

RET:
    return bRetStatus;
}



long CMTSnpp::Call(const STD(string) &sCallerID)
{
    long   bRetStatus = TRUE;
    long      lResult;
    STD(string) sCommand = "CALL ";
    char      zBuffer[255];

    sCommand += sCallerID;

    sCommand += "\r\n";

    if ( !mSend(sCommand) )
    {
        sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
        mSetStatusText(zBuffer);
        bRetStatus = FALSE;
        goto RET;
    }


    mRecv(zBuffer, sizeof(zBuffer));

    if ( (lResult = atoi (zBuffer)) != 250 )
    {
        if ( lResult == 0 )
        {
            sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
        }

        mSetStatusText(zBuffer);
        bRetStatus = FALSE;
    }

RET:
    return bRetStatus;
}



long CMTSnpp::Hold(const STD(string) &sAfter)
{
    long   bRetStatus = TRUE;
    long      lResult;
    STD(string) sCommand = "HOLD ";
    char      zBuffer [255];
    char      zAfter[17];


    strncpy(zAfter, sAfter.c_str(), sizeof(zAfter));

    zAfter[sizeof(zAfter)-1] = '\0';

    if ( strlen(zAfter) == 8 )  // we were only given the date. Assume midnight
    {
        strcat(zAfter, "00000000");
    }

    zAfter[16] = '\0';           // SNPP will accept 16 or 12 characters

    sCommand += zAfter;
    sCommand += "\r\n";

    if ( !mSend(sCommand) )
    {
        sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
        mSetStatusText (zBuffer);
        bRetStatus = FALSE;
        goto RET;
    }


    mRecv(zBuffer, sizeof(zBuffer));

    if ( (lResult = atoi(zBuffer)) != 250 )
    {
        if ( lResult == 0 )
        {
            sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
        }

        mSetStatusText(zBuffer);
        bRetStatus = FALSE;
    }

RET:
    return bRetStatus;
}



long CMTSnpp::Mess(const STD(string) &sMessage)
{
    long   bRetStatus = TRUE;
    long      lResult;
    STD(string) sCommand = "MESS ";
    char      zBuffer [2000];
    char      *pcPtr = NULL;

    strncpy(zBuffer, sMessage.c_str(), sizeof(zBuffer));
    zBuffer[sizeof(zBuffer)-1] = '\0';


    //
    // Make sure there are no embedded newline or carraige control characters
    //
    pcPtr = zBuffer;
    while ( pcPtr != NULL && *pcPtr != '\0' )
    {
        // if a \r\n or \n\r pair exists change it to a single backslash
        if ( (*pcPtr == '\r' && *(pcPtr+1) == '\n') ||
             (*pcPtr == '\n' && *(pcPtr+1) == '\r') )
        {
            *pcPtr = '\\';
            strcpy (pcPtr+1, pcPtr+2);
        }
        else if ( *pcPtr == '\r' || *pcPtr == '\n' ) // change single \r or \n to a backslash
        {
            *pcPtr = '\\';
        }
        if ( *pcPtr != '\0' ) pcPtr++;
    }

    // jpf removed
    //while ( (pcPtr = strchr(zBuffer, '\r')) ||
    //        (pcPtr = strchr(zBuffer, '\n')) )
    //{
    //    *pcPtr = '\\';
    //}

    sCommand += zBuffer;
    sCommand += "\r\n";


    if ( !mSend(sCommand) )
    {
        sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
        mSetStatusText(zBuffer);
        bRetStatus = FALSE;
        goto RET;
    }

    mRecv(zBuffer, sizeof(zBuffer));

    if ( (lResult = atoi (zBuffer)) != 250 )
    {
        if ( lResult == 0 )
        {
            sprintf (zBuffer, "Error on TCP recv - %d", WSAGetLastError());
        }

        mSetStatusText (zBuffer);
        bRetStatus = FALSE;
    }

RET:
    return bRetStatus;
}



long CMTSnpp::Page(const STD(string) &sPager)
{
    long   bRetStatus = TRUE;
    long      lResult;
    STD(string) sCommand = "PAGE ";
    char      zBuffer [255];

    sCommand += sPager;

    sCommand += "\r\n";

    if ( !mSend(sCommand) )
    {
        sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
        mSetStatusText(zBuffer);
        bRetStatus = FALSE;
        goto RET;
    }


    mRecv(zBuffer, sizeof(zBuffer));

    if ( (lResult = atoi(zBuffer)) != 250 )
    {
        if ( lResult == 0 )
        {
            sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
        }

        if ( m_InvalidUsers.size() > 0 ) m_InvalidUsers += ", ";
        m_InvalidUsers += sPager;

        mSetStatusText(zBuffer);
        bRetStatus = FALSE;
    }

RET:
    return bRetStatus;
}



long CMTSnpp::Send(void)
{
    long   bRetStatus = TRUE;
    long      lResult;
    char      zBuffer [255];

    if ( !mSend("SEND\r\n") )
    {
        sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());

        strcat (zBuffer, " (");
		strcat (zBuffer, m_ServerIP);
		strcat (zBuffer, " )");

        mSetStatusText(zBuffer);
        bRetStatus = FALSE;
        goto RET;
    }

    mRecv(zBuffer, sizeof(zBuffer));

    if ( (lResult = atoi(zBuffer)) != 250 )
    {
        if ( lResult == 0 )
        {
            sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
        }

        strcat (zBuffer, " (");
		strcat (zBuffer, m_ServerIP);
		strcat (zBuffer, " )");

        mSetStatusText(zBuffer);
        bRetStatus = FALSE;
        goto RET;
    }

    if ( m_InvalidUsers.size() > 0 )
    {
        STD(string) Buffer = "550 - Message sent, recipient list containes some invalid pager names: ";
        Buffer += m_InvalidUsers;

        Buffer += " (";
		Buffer += m_ServerIP;
		Buffer += " )";

        mSetStatusText(Buffer);
        bRetStatus = FALSE;
    }
    else
    {
		strcat (zBuffer, " (");
		strcat (zBuffer, m_ServerIP);
		strcat (zBuffer, " )");

        mSetStatusText(zBuffer);
    }

RET:
    return bRetStatus;
}



long CMTSnpp::Rset(void)
{
    long   bRetStatus = TRUE;
    long      lResult;
    char      zBuffer [255];

    if ( !mSend("RESE\r\n") )
    {
        sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
        mSetStatusText(zBuffer);
        bRetStatus = FALSE;
        goto RET;
    }

    mRecv(zBuffer, sizeof(zBuffer));

    if ( (lResult = atoi(zBuffer)) != 250 )
    {
        if ( lResult == 0 )
        {
            sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
        }

        mSetStatusText(zBuffer);
        bRetStatus = FALSE;
    }

    m_InvalidUsers = "";

RET:
    return bRetStatus;
}



long CMTSnpp::Quit(void)
{
    long   bRetStatus = TRUE;
    char      zBuffer [255];

    if ( !mSend("QUIT\r\n") )
    {
        sprintf(zBuffer, "Error on TCP recv - %d", WSAGetLastError());
        mSetStatusText(zBuffer);
        bRetStatus = FALSE;
        goto RET;
    }

    mRecv(zBuffer, sizeof(zBuffer));

RET:
    return bRetStatus;
}



long CMTSnpp::Disconnect(void)
{
    if ( m_iIOHandle > 0 )
    {
#if defined(_WIN32)
        closesocket(m_iIOHandle);
#else
        close(m_iIOHandle);
#endif
        m_iIOHandle = 0;
    }

    return TRUE;
}



void CMTSnpp::mSetStatusText(const STD(string) &sText)
/***************************************************************************
**
** CMTSnpp::mSetSttausText
**
** Purpose:
**
** Returns:
**
** History: 3-Jul-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    mStatusText.erase();
    mStatusText = sText;
}



const STD(string)& CMTSnpp::GetStatusText(void)
{
    return mStatusText;
}



long CMTSnpp::Connected(void)
{
    return (m_iIOHandle != 0);
}



long CMTSnpp::mRecv(char*        pzBuffer,
                         const long   lBufferSize)
/****************************************************************************************
** Purpose: Receive a line of text from the TCP/IP socket. Since TCP is stream
**          oriented we may not get an entire response with one read. This routine
**          keeps reading until the carriage return is found.
**
** Returns: Number of bytes read
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
{
    long          lStatus;
    long          lMsgLen = 0;
    long       bEol = FALSE;
    struct timeval  sTimeout = {0,0};
    fd_set          sRmask;
    long          lNumBytes;
    char          *pzPtr = NULL;


    while ( !bEol &&
            lMsgLen < lBufferSize-1 )
    {

        sTimeout.tv_sec = 60;

        FD_ZERO(&sRmask);
        FD_SET(m_iIOHandle, &sRmask);

        lStatus = select((m_iIOHandle+1), &sRmask, 0, 0, &sTimeout);

        if ( lStatus <= 0 )
        {
            WSASetLastError (WSAETIMEDOUT);
            pzBuffer[0] = '\0';
            lMsgLen = -1;
            goto RET;
        }

        lNumBytes = recv(m_iIOHandle, &pzBuffer[lMsgLen], lBufferSize-lMsgLen-1, 0);

        if ( lNumBytes <= 0 )
        {
            pzBuffer[0] = '\0';
            lMsgLen = -1;
            goto RET;
        }

        lMsgLen += lNumBytes;
        pzBuffer[lMsgLen] = '\0';

        //
        // check to see if we got the entire line
        //
        if ( (pzPtr = strchr (pzBuffer, '\r')) != NULL )
        {
            bEol = TRUE;
            *pzPtr = '\0';
        }
    }

RET:
    return strlen(pzBuffer);
}



long CMTSnpp::mSend(const STD(string) &sBuffer)
/***************************************************************************
**
** CMTSnpp::mSend
**
** Purpose:
**
** Returns:
**
** History: 11-Jun-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    return send(m_iIOHandle, sBuffer.c_str(), sBuffer.length(), 0);
}






//////////////////////////////////////////////////////////////////////////////
//
// CMTPagew  wrapper class
//
// The wrapper class member functions simply call the the coresponding functions
// in the implementation class using the pointer to the implementation class.
// This allows for changes to be made to the implementation class without
// effecting the wrapper class that's exported to a DLL or to the VMS RTL. If
// a change were to be made to the exposed class all apps using the class
// would require a re-compile to work correctly.
//
//////////////////////////////////////////////////////////////////////////////


CMTPagew::CMTPagew(void)
{
    mImp = new CMTPageImp;
}



CMTPagew::CMTPagew(const STD(string)& InToList,
                   const STD(string)& InMessage,
                   const STD(string)& InFrom,
                   const STD(string)& InAfter,
                   const STD(string)& InSystem) 
{
    STD(string) ToList;
    STD(string) Message;
    STD(string) From;
    STD(string) After;
    STD(string) System;


    //
    // Make sure the that string passed in is in the UTF8 codepage
    //
    hrMbsToUtf8(ToList,  InToList);
    hrMbsToUtf8(Message, InMessage);
    hrMbsToUtf8(From,    InFrom);
    hrMbsToUtf8(After,   InAfter);
    hrMbsToUtf8(System,  InSystem);    
    
    mImp = new CMTPageImp;

    mImp->Send(ToList,
               Message,
               From,
               After,
               System);
}



CMTPagew::CMTPagew(const wchar_t* InToList,
                   const wchar_t* InMessage,
                   const wchar_t* InFrom,
                   const wchar_t* InAfter,
                   const wchar_t* InSystem)
{
    STD(string) ToList;
    STD(string) Message;
    STD(string) From;
    STD(string) After;
    STD(string) System;



    //
    // The the wide character array passed in to a UTF8 string
    //
    hrWcsToUtf8(ToList,  InToList);
    hrWcsToUtf8(Message, InMessage);
    hrWcsToUtf8(From,    InFrom);
    hrWcsToUtf8(After,   InAfter);
    hrWcsToUtf8(System,  InSystem);    
    
    mImp = new CMTPageImp;

    mImp->Send(ToList,
               Message,
               From,
               After,
               System);
}



CMTPagew::~CMTPagew(void)
{
    delete mImp;
}



CMTPagew &CMTPagew::operator=(const CMTPagew &Page)
{
    if ( this == &Page ) goto RET;

    mImp = new CMTPageImp(*Page.mImp);

  RET:
    return *this;
}



CMTPagew::CMTPagew(const CMTPagew& Page)
{
    mImp = new CMTPageImp(*Page.mImp);
}



void CMTPagew::SetTo(const STD(string)& InToList)
{
    STD(string) ToList;

    hrMbsToUtf8(ToList, InToList);

    mImp->SetTo(ToList);
}



void CMTPagew::SetTo(const wchar_t* InToList)
{
    STD(string) ToList;

    hrWcsToUtf8(ToList, InToList);

    mImp->SetTo(ToList);
}



void CMTPagew::AppendTo(const STD(string)& InVal)
{
    STD(string) sVal;

    hrMbsToUtf8(sVal, InVal);

    mImp->AppendTo(sVal);
}



void CMTPagew::AppendTo(const wchar_t* InVal)
{
    STD(string) sVal;

    hrWcsToUtf8(sVal, InVal);

    mImp->AppendTo(sVal);
}



const wchar_t* CMTPagew::GetTo(void)
{
    return mImp->GetTow();
}



const STD(string)& CMTPagew::sGetTo(void)
{
    return mImp->GetTo();
}



void CMTPagew::SetFrom(const STD(string)& InVal)
{
    STD(string) sVal;

    hrMbsToUtf8(sVal, InVal);

    mImp->SetFrom(sVal);
}



void CMTPagew::SetFrom(const wchar_t* InVal)
{
    STD(string) sVal;

    hrWcsToUtf8(sVal, InVal);

    mImp->SetFrom(sVal);
}



const wchar_t* CMTPagew::GetFrom(void)
{
    return mImp->GetFromw();
}



const STD(string)& CMTPagew::sGetFrom(void)
{
    return mImp->GetFrom();
}



void CMTPagew::SetMessage(const STD(string)& InVal)
{
    STD(string) sVal;

    hrMbsToUtf8(sVal, InVal);

    mImp->SetPageMsg(sVal);
}



void CMTPagew::SetMessage(const wchar_t* InVal)
{
    STD(string) sVal;

    hrWcsToUtf8(sVal, InVal);

    mImp->SetPageMsg(sVal);
}



void CMTPagew::SetPageMsg(const STD(string)& InVal)
{
    STD(string) sVal;

    hrMbsToUtf8(sVal, InVal);

    mImp->SetPageMsg(sVal);
}



void CMTPagew::SetPageMsg(const wchar_t* InVal)
{
    STD(string) sVal;

    hrWcsToUtf8(sVal, InVal);

    mImp->SetPageMsg(sVal);
}



const wchar_t* CMTPagew::GetMessageA(void)
{
    return mImp->GetPageMsgw();
}



const STD(string)& CMTPagew::sGetMessage(void)
{
    return mImp->GetPageMsg();
}



const wchar_t* CMTPagew::GetPageMsg(void)
{
    return mImp->GetPageMsgw();
}



const STD(string)& CMTPagew::sGetPageMsg(void)
{
    return mImp->GetPageMsg();
}



void CMTPagew::SetAfter(const STD(string)& InVal)
{
    STD(string) sVal;

    hrMbsToUtf8(sVal, InVal);

    mImp->SetAfter(sVal);
}



void CMTPagew::SetAfter(const wchar_t* InVal)
{
    STD(string) sVal;

    hrWcsToUtf8(sVal, InVal);

    mImp->SetAfter(sVal);
}



const wchar_t* CMTPagew::GetAfter(void)
{
    return mImp->GetAfterw();
}



const STD(string)& CMTPagew::sGetAfter(void)
{
    return mImp->GetAfter();
}



void CMTPagew::SetSystem(const STD(string)& InVal)
{
    STD(string) sVal;

    hrMbsToUtf8(sVal, InVal);

    mImp->SetSystem(sVal);
}



void CMTPagew::SetSystem(const wchar_t* InVal)
{
    STD(string) sVal;

    hrWcsToUtf8(sVal, InVal);

    mImp->SetSystem(sVal);
}



const wchar_t* CMTPagew::GetSystem(void)
{
    return mImp->GetSystemw();
}



const STD(string)& CMTPagew::sGetSystem(void)
{
    return mImp->GetSystem();
}



void CMTPagew::Reset(void)
{
    mImp->Reset();
}



long CMTPagew::Send(void)
{
    return mImp->Send();
}



long CMTPagew::Send(const STD(string)& InToList,
                         const STD(string)& InMessage,
                         const STD(string)& InFrom,
                         const STD(string)& InAfter,
                         const STD(string)& InSystem)
{
    STD(string) ToList;
    STD(string) Message;
    STD(string) From;
    STD(string) After;
    STD(string) System;



    //
    // Make sure the that string passed in is in the UTF8 codepage
    //
    hrMbsToUtf8(ToList,  InToList);
    hrMbsToUtf8(Message, InMessage);
    hrMbsToUtf8(From,    InFrom);
    hrMbsToUtf8(After,   InAfter);
    hrMbsToUtf8(System,  InSystem);    
    
    return mImp->Send(ToList,
                      Message,
                      From,
                      After,
                      System);
}



long CMTPagew::Send(const wchar_t* InToList,
                         const wchar_t* InMessage,
                         const wchar_t* InFrom,
                         const wchar_t* InAfter,
                         const wchar_t* InSystem)
{
    STD(string) ToList;
    STD(string) Message;
    STD(string) From;
    STD(string) After;
    STD(string) System;



    //
    // The the wide character array passed in to a UTF8 string
    //
    hrWcsToUtf8(ToList,  InToList);
    hrWcsToUtf8(Message, InMessage);
    hrWcsToUtf8(From,    InFrom);
    hrWcsToUtf8(After,   InAfter);
    hrWcsToUtf8(System,  InSystem);    
    
    return mImp->Send(ToList,
                      Message,
                      From,
                      After,
                      System);
}



long CMTPagew::GetStatusCode(void)
{
    return mImp->GetStatusCode();
}



const wchar_t* CMTPagew::GetStatusText(void)
{
    return mImp->GetStatusTextw();
}



const STD(string)& CMTPagew::sGetStatusText(void)
{
    return mImp->GetStatusText();
}



long CMTPagew::Connect(const STD(string)& InVal)
{
    STD(string) sVal;

    hrMbsToUtf8(sVal, InVal);

    return mImp->Connect(sVal);
}



long CMTPagew::Connect(const wchar_t* InVal)
{
    STD(string) sVal;

    hrWcsToUtf8(sVal, InVal);

    return mImp->Connect(sVal);
}



void CMTPagew::Disconnect(void)
{
    mImp->Disconnect();
}



long CMTPagew::Lookup(const STD(string)& InxItem, CMTPagerwVect& InOutvPagers)
{
    STD(string) xItem;

    hrMbsToUtf8(xItem, InxItem);

    return mImp->Lookup(xItem, InOutvPagers);
}



long CMTPagew::Lookup(const wchar_t* InwsItem, CMTPagerwVect& InOutvPagers)
{
    STD(string) xItem;

    hrWcsToUtf8(xItem, InwsItem);

    return mImp->Lookup(xItem, InOutvPagers);
}



long CMTPagew::GetServiceDataFromId(long     InPageSvcId,
                                         wchar_t* OutPageSvcCode,
                                         long     InPageSvcCodeSiz,
                                         wchar_t* OutPageSvcDesc,
                                         long     InPageSvcDescSiz)
{
    STD(string) xPageSvcCode;
    STD(string) xPageSvcDesc;
    
    long   bRetStat = mImp->GetServiceDataFromId(InPageSvcId, xPageSvcCode, xPageSvcDesc);

    wchar_t*    wPageSvcCode;
    wchar_t*    wPageSvcDesc;
    
    hrMbsToWcs(&wPageSvcCode, xPageSvcCode.c_str());
    wcsncpy(OutPageSvcCode, wPageSvcCode, InPageSvcCodeSiz);
    SAFE_DELETE(wPageSvcCode);
    
    hrMbsToWcs(&wPageSvcDesc, xPageSvcDesc.c_str());
    wcsncpy(OutPageSvcDesc, wPageSvcDesc, InPageSvcDescSiz);
    SAFE_DELETE(wPageSvcDesc);

    return bRetStat;
}



long CMTPagew::GetServiceDataFromId(long         InPageSvcId,
                                         STD(string)& OutPageSvcCode,
                                         STD(string)& OutPageSvcDesc)
{
    return mImp->GetServiceDataFromId(InPageSvcId, OutPageSvcCode, OutPageSvcDesc);
}



long CMTPagew::GetPagerTypeDataFromId(long       InPagerTypeId,
                                           wchar_t*   OutPagerTypeCode,
                                           long       InPagerTypeCodeSiz,
                                           wchar_t*   OutPagerTypeDesc,
                                           long       InPagerTypeDescSiz)
{
    STD(string) xPagerTypeCode;
    STD(string) xPagerTypeDesc;
    
    long   bRetStat = mImp->GetPagerTypeDataFromId(InPagerTypeId, xPagerTypeCode, xPagerTypeDesc);

    wchar_t*    wPagerTypeCode;
    wchar_t*    wPagerTypeDesc;
    
    hrMbsToWcs(&wPagerTypeCode, xPagerTypeCode.c_str());
    wcsncpy(OutPagerTypeCode, wPagerTypeCode, InPagerTypeCodeSiz);
    SAFE_DELETE(wPagerTypeCode);
    
    hrMbsToWcs(&wPagerTypeDesc, xPagerTypeDesc.c_str());
    wcsncpy(OutPagerTypeDesc, wPagerTypeDesc, InPagerTypeDescSiz);
    SAFE_DELETE(wPagerTypeDesc);

    return bRetStat;
}



long CMTPagew::GetPagerTypeDataFromId(long           InPagerTypeId,
                                           STD(string)&   OutPagerTypeCode,
                                           STD(string)&   OutPagerTypeDesc)
{
    return mImp->GetPagerTypeDataFromId(InPagerTypeId, OutPagerTypeCode, OutPagerTypeDesc);
}




//////////////////////////////////////////////////////////////////////////////
//
// CMTPagerw  wrapper class
//
// The wrapper class member functions simply call the the coresponding functions
// in the implementation class using the pointer to the implementation class.
// This allows for changes to be made to the implementation class without
// effecting the wrapper class that's exported to a DLL or to the VMS RTL. If
// a change were to be made to the exposed class all apps using the class
// would require a re-compile to work correctly.
//
//////////////////////////////////////////////////////////////////////////////


CMTPagerw::CMTPagerw(void)
{
    mImp = new CMTPagerImp;
}



CMTPagerw::CMTPagerw(const STD(string)& xData)
{
    mImp = new CMTPagerImp(xData);
}



CMTPagerw::~CMTPagerw(void)
{
    delete mImp;
}



CMTPagerw& CMTPagerw::operator=(const CMTPagerw &Pager)
{
    if ( this == &Pager ) goto RET;

    mImp = new CMTPagerImp(*Pager.mImp);

  RET:
    return *this;
}



CMTPagerw::CMTPagerw(const CMTPagerw& Pager)
{
    mImp = new CMTPagerImp(*Pager.mImp);
}



const wchar_t*  CMTPagerw::GetStatusCode(void)
{
    return mImp->GetStatusCodew();
}



const STD(string)& CMTPagerw::sGetStatusCode(void)
{
    return mImp->GetStatusCode();
}



const wchar_t* CMTPagerw::GetSubscriberName(void)
{
    return mImp->GetSubscriberNamew();
}



const STD(string)& CMTPagerw::sGetSubscriberName(void)
{
    return mImp->GetSubscriberName();
}



const wchar_t* CMTPagerw::GetPagerNumber(void)
{
    return mImp->GetPagerNumberw();
}



const STD(string)& CMTPagerw::sGetPagerNumber(void)
{
    return mImp->GetPagerNumber();
}



const wchar_t* CMTPagerw::GetDeliveryMask(void)
{
    return mImp->GetDeliveryMaskw();
}



const STD(string)& CMTPagerw::sGetDeliveryMask(void)
{
    return mImp->GetDeliveryMask();
}



unsigned long CMTPagerw::GetContactWorkerNo(void)
{
    return mImp->GetContactWorkerNo();
}



const wchar_t* CMTPagerw::GetAlphaNumericFlag(void)
{
    return mImp->GetAlphaNumericFlagw();
}



const STD(string)& CMTPagerw::sGetAlphaNumericFlag(void)
{
    return mImp->GetAlphaNumericFlag();
}



unsigned long CMTPagerw::GetMaxMessageSize(void)
{
    return mImp->GetMaxMessageSize();
}



long CMTPagerw::GetGMTOffset(void)
{
    return mImp->GetGMTOffset();
}



long CMTPagerw::GetServiceId(void)
{
    return mImp->GetServiceId();
}



long CMTPagerw::GetPagerTypeId(void)
{
    return mImp->GetPagerTypeId();
}



void CMTPagerw::PrintPagerData(void)
{
    mImp->PrintPagerData();
}

#ifdef _WIN32
#pragma message( "  ***  Make sure that the most current CMTIO Stream functionality is here.  (Currently: 16-May-2003 11:37)  ***" )
#endif


long CMTSnpp::StreamReadLine(STD(string)& out_xBuffer, const long& in_lTimeOut)
/*****************************************************************************
** NOTE:    This function was copied from the MTIO.CPP module of the 
**          mtpagelib project.  Unfortuneately the dependencies are too 
**          great at this time to just call the code from the dll.
**
**          The MTIO.CPP module should be checked from time to time to see
**          if this code should be updated as well.
**
** CHANGES REQUIRED:
**          - Delete all Scope and TRACE lines
**          - Delete all the try/catch code
**          - Change all the throw code to return -2; unless there is a more
**            appropriate error_code.
**          - Remove the conditional containing the  if ( "TCP" == m_xLetterClassType )
**            so that it only leaves the line for the TCP code.
**          - Change all string declarations to STD(string)
**
** DATE OF MTIO.CPP MODULE AT THE TIME THIS CODE WAS COPIES WAS:
**
**              16-May-2003 11:37
**
******************************************************************************/
{

//    long            lBuffLen = 0;
    unsigned long   lElapsedTime = 0;
    int             nErrorCode;
    STD(string)     xErrText;
    struct timeval* p_sTimeOut = NULL;
    struct timeval  sTimeOut = {0, 0};
    time_t          sStartTime, sCurrentTime;

    out_xBuffer.erase();

    if ( in_lTimeOut < 0 )
    {
        return -2;
    }
    else if ( in_lTimeOut == m_lINFINITE_WAIT )
    {
        p_sTimeOut = NULL;     
    }
    else if ( in_lTimeOut >= 0 )
    {
        sTimeOut.tv_sec = in_lTimeOut;
        p_sTimeOut = &sTimeOut;
    }
       
    bool bTimedOut = false;
    time ( &sStartTime );


    // If there is a \n at the beginning of the buffer, throw it away.
    if ( '\r' == m_cEOLDelimiter && '\n' == m_zBuffer[0] )
    {
        strcpy(m_zBuffer, m_zBuffer+1);
    }

    if ( '\n' == m_cEOLDelimiter && '\r' == m_zBuffer[0] )
    {
        strcpy(m_zBuffer, m_zBuffer+1);
    }

    // while we haven't seen an CR and we haven't timed out, read
    while ( !strstr(m_zBuffer,"\r") && !strstr(m_zBuffer,"\n") && !bTimedOut )
    {
        //Subtract 1 to allow for a NULL terminator at the end
        long lBytes2Read = m_lBufferSize - (strlen(m_zBuffer)) - 1;

        if ( lBytes2Read < 1 )
        {
            break;
        }

        FD_ZERO(&m_sRead_FDS);
        FD_SET(m_iIOHandle, &m_sRead_FDS);

        int iResult = select((m_iIOHandle+1), &m_sRead_FDS, NULL, NULL, p_sTimeOut);

        if ( iResult == -1 )
        {
#if defined (_WIN32)
            nErrorCode = WSAGetLastError();
            xErrText = "I/O has been terminated.";
#else
            nErrorCode  = errno;
            xErrText = strerror(nErrorCode);
#endif

            return nErrorCode;
        }

        if ( iResult >= 1 ) //from select, could be closed connection 
        {
            long lOldLength = strlen(m_zBuffer);
            long lRecvResult = 0;

            // Check that the bit is really set for this socket
            if ( FD_ISSET(m_iIOHandle, &m_sRead_FDS) )
            {
                lRecvResult = recv(m_iIOHandle, (m_zBuffer + lOldLength), lBytes2Read, 0);

                if ( lRecvResult <= 0 )
                {
                    // 0 is disconnected, -1 is error,
                    if ( lRecvResult == 0 )
                    {
                        nErrorCode  = 0;
                        xErrText = "Connection was gracefully closed by the remote end";
                    }
                    else
                    {
#if defined (_WIN32)
                        nErrorCode = WSAGetLastError();
                        xErrText = "I/O has been terminated.";
#else
                        nErrorCode  = errno;
                        xErrText = strerror(nErrorCode);
#endif
                    }

                    return nErrorCode;
                } 
            }
                
            // null terminate m_zBuffer
            m_zBuffer[lOldLength + lRecvResult] = '\0';

            if ( '\r' == m_cEOLDelimiter && '\n' == m_zBuffer[0] )
            {
                strcpy(m_zBuffer, m_zBuffer+1);
            }

            if ( '\n' == m_cEOLDelimiter && '\r' == m_zBuffer[0] )
            {
                strcpy(m_zBuffer, m_zBuffer+1);
            }
        }  // end of if select returned 1


        //Update the timer

        // If we have a non-zero time out value passed in, calculate the 
        // elapsed time; otherwise, we are waiting indefinitely for a line
        if ( p_sTimeOut != NULL )   
        {
            time(&sCurrentTime);

            lElapsedTime = (unsigned long) sCurrentTime - sStartTime;                

            if ( (long)lElapsedTime >= in_lTimeOut )
            {
                bTimedOut = true;
            }
            else
            {
                p_sTimeOut->tv_sec = in_lTimeOut - lElapsedTime;
            }
        }
             
    }  // end of while ( !strstr(...
    // I either have a line, or I have timed out.
        

    char *pcEOL;
    char *pcCR = strstr(m_zBuffer, "\r");
    char *pcLF = strstr(m_zBuffer, "\n");


    if ( pcCR && pcLF )
    {
        //Use the EOL char which came first - CR or LF
        pcEOL = ( pcCR < pcLF ) ? pcCR : pcLF;
    }
    else if ( pcCR || pcLF ) 
    {
        //Use whichever EOL char was found (i.e. not NULL)
        pcEOL = ( pcCR != NULL ) ? pcCR : pcLF;
    }
    else
    {
        pcEOL = NULL;
    }

    // DEBUG
    //TRACEF_TRACE((">>After read, contents of m_zBuffer.\n"));
    //DTRACEF_HEXDUMP(TRACE_TRC, m_zBuffer, strlen(m_zBuffer));
    if ( pcEOL )
    {
        m_cEOLDelimiter = *pcEOL;

        // By making the value pointed to by pcEOL to NULL,
        // we can copy the value till that NULL into zBuffer
        *pcEOL = '\0';

        // DEBUG
        //TRACEF_TRACE((">>After replacing \n\r with \0, contents of m_zBuffer.\n"));
        //DTRACEF_HEXDUMP(TRACE_TRC, m_zBuffer, strlen(m_zBuffer));

        // only copy up to the \0
        out_xBuffer = m_zBuffer;

        // if there is any value beyond \0, store it in m_zBuffer
        if ( strlen((pcEOL+1)) > 0 )
        {
            strcpy(m_zBuffer, (pcEOL + 1)); 
        }
        else
        {
            m_zBuffer[0] = '\0';
        }
            
        return out_xBuffer.length(); // successfully read
    }

    if ( !bTimedOut)
    {
        return -2;
    }

    return -1; // timed out
}



long CMTSnpp::StreamWrite(const STD(string)& in_xData)
/*****************************************************************************
** NOTE:    This function was copied from the MTIO.CPP module of the 
**          mtpagelib project.  Unfortuneately the dependencies are too 
**          great at this time to just call the code from the dll.
**
**          The MTIO.CPP module should be checked from time to time to see
**          if this code should be updated as well.
**
** CHANGES REQUIRED:
**          - Delete all Scope and TRACE lines
**          - Delete all the try/catch code
**          - Change all the throw code to return -2; unless there is a more
**            appropriate error_code.
**          - Remove the conditional containing the  if ( "TCP" == m_xLetterClassType )
**            so that it only leaves the line for the TCP code.
**          - Change all string declarations to STD(string)
**
** DATE OF MTIO.CPP MODULE AT THE TIME THIS CODE WAS COPIES WAS:
**
**              16-May-2003 11:37
**
******************************************************************************/
{
    
    int iBytesSent = 0;
    int iBytesToSend = in_xData.length();

    strcpy(m_zBuffer, in_xData.c_str());

    while ( iBytesSent < iBytesToSend )
    {
        int         nErrorCode;
        STD(string) xErrText;
        int         iSendResult;
        short       nSelectResult;
        fd_set      sWrite_FDS;

        FD_ZERO(&sWrite_FDS);
        FD_SET(m_iIOHandle, &sWrite_FDS);

        nSelectResult = select((m_iIOHandle+1), NULL, &sWrite_FDS, NULL, 0);
            
        if ( -1 == nSelectResult )
        {
#         if defined (_WIN32)
            nErrorCode = WSAGetLastError();
            xErrText = "I/O has been terminated.";
#         else
            nErrorCode  = errno;
            xErrText = strerror(nErrorCode);
#         endif

            return nErrorCode;
        }
        else if ( 1 <= nSelectResult )
        {
            if ( FD_ISSET(m_iIOHandle, &sWrite_FDS) )
            {
                iSendResult = send(m_iIOHandle, (m_zBuffer + iBytesSent), (iBytesToSend - iBytesSent), 0);

                if ( iSendResult > 0 )
                {
                    iBytesSent += iSendResult;
                }
                else if ( iSendResult == 0 )
                {
                    break;
                }
                else if ( iSendResult == -1 )    // from send
                {
#                 if defined (_WIN32)
                    nErrorCode = WSAGetLastError();
                    xErrText = "I/O has been terminated.";
#                 else
                    nErrorCode  = errno;
                    xErrText = strerror(nErrorCode);
#                 endif

                    return nErrorCode;
                }
            }    
        }

	    memset(m_zBuffer, 0, m_lBufferSize);
    }

    return 1;
}



long CMTSnpp::StreamWriteLine(const STD(string) &in_xData)
/*****************************************************************************
** NOTE:    This function was copied from the MTIO.CPP module of the 
**          mtpagelib project.  Unfortuneately the dependencies are too 
**          great at this time to just call the code from the dll.
**
**          The MTIO.CPP module should be checked from time to time to see
**          if this code should be updated as well.
**
** CHANGES REQUIRED:
**          - Delete all Scope and TRACE lines
**          - Delete all the try/catch code
**          - Added a return
**
** DATE OF MTIO.CPP MODULE AT THE TIME THIS CODE WAS COPIES WAS:
**
**              16-May-2003 11:37
**
******************************************************************************/
{

    return StreamWrite( (in_xData + "\r\n") );
}


END_NAMESPACE
































//==============================================================================
//              <Standard Micron Copyright Information>
//
// Copyright 1999 Micron Technology, Inc. All Rights Reserved.
// Unpublished all rights reserved under the copyright laws of
// the United States. USE OF A COPYRIGHT NOTICE IS PRECAUTIONARY
// ONLY AND DOES NOT IMPLY PUBLICATION OR DISCLOSURE.
//
// THIS SOFTWARE CONTAINS CONFIDENTIAL INFORMATION AND
// TRADE SECRETS OF MICRON TECHNOLOGY, INC. USE, DISCLOSURE,
// OR REPRODUCTION IS PROHIBITED WITHOUT THE PRIOR EXPRESS
// WRITTEN PERMISSION OF MICRON TECHNOLOGY, INC.
//==============================================================================

//==============================================================================
//
// CMTMailw.cpp                                               1-MAY-1998
//
// Purpose: Class sends an email message
//
//==============================================================================
static char gRevisionString[] = "Version 1.0.0.37";

#include "cmtmailw.h"
#include "mtmailpage.h"

#include <string>

extern "C"
{
#if defined (_WIN32)

#   include <windows.h>
#   include <sys\timeb.h>
#   include <process.h>

#pragma warning  (disable : 4267 4244 4996 )
#endif

#if defined (__VMS)
#   include <socket.h>
#   include <in.h>
#   include <netdb.h>
#   include <errno.h>
#   include <unixlib.h>
#   include <unistd.h>
#   include <unixio.h>
#   include <descrip.h>
#   include <jpidef.h>
#   include <lib$routines.h>
#   include <reentrant_netdb.h>
#endif

#if defined (unix) || defined(__xlC__)
#   include <sys/socket.h>
#   include <netdb.h>
#   include <unistd.h>
#   include <errno.h>
#   include <sys/timeb.h>
#   include <strings.h>
#   include <wchar.h>
#   include <arpa/inet.h>
//#   include <reentrant_netdb.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <stddef.h>
#include <locale.h>
#include <string.h>
#include <time.h>
}


#if defined (__VMS)
#   define WSAGetLastError(p) errno
#   define WSASetLastError(p)
#elif defined (unix) || defined(__xlC__)
#   define WSAGetLastError() errno
#   define WSASetLastError(p)
#   define WSAETIMEDOUT ETIMEDOUT
#endif


USING_NAMESPACE(std)
USING_NAMESPACE(mti)

// CMTMailImp Implementation class. This class gets called by the wrapper
// class CMTMail which is what applications will call.
//
// The wrapper class member functions just call the the coresponding functions
// in the implementation class using the pointer to the implementation class.
// This allows for changes to be made to the implementation class without
// effecting the wrapper class that's exported to a DLL or the VMS RTL. If
// a change were to be made to the exposed class all apps using the class
// would require a re-compile to work correctly.

BEGIN_NAMESPACE(mti)

class CMTMailImp
{
public:

    CMTMailImp ();
    ~CMTMailImp ();
    CMTMailImp (const CMTMailImp &MailImp);
    CMTMailImp &operator= (const CMTMailImp &MailImp);

    void SetFrom (const wchar_t *InAddress);
    void SetFrom (const char *InAddress, const char *InLocale = "");
    const wchar_t* GetFrom();
    const string& GetFromString();

    void SetTo   (const wchar_t *InAddress);
    void SetTo   (const char *InAddress, const char *InLocale = "");
    void AppendTo   (const wchar_t *InAddress);
    void AppendTo   (const char *InAddress, const char *InLocale = "");
    const wchar_t* GetTo();
    const string& GetToString();

    void SetCC   (const wchar_t *InAddress);
    void SetCC   (const char *InAddress, const char *InLocale = "");
    void AppendCC   (const wchar_t *InAddress);
    void AppendCC   (const char *InAddress, const char *InLocale = "");
    const wchar_t* GetCC();
    const string& GetCCString ();

    void SetBCC  (const wchar_t *InAddress);
    void SetBCC  (const char *InAddress, const char *InLocale = "");
    void AppendBCC   (const wchar_t *InAddress);
    void AppendBCC   (const char *InAddress, const char *InLocale = "");
    const wchar_t* GetBCC();
    const string& GetBCCString();

    void SetSubject (const wchar_t *InSubject);
    void SetSubject (const char *InSubject, const char *InLocale = "");
    const wchar_t* GetSubject();
    const string& GetSubjectString();

    void SetText    (const wchar_t *InText);
    void SetText    (const char *InText, const char *InLocale = "");
    void AppendText (const wchar_t *InText);
    void AppendText (const char *InText, const char *InLocale = "");
    const wchar_t* GetText();
    const string& GetTextString();

    const long GetTextLength (void);


    void SetTextFile (const wchar_t *InFilename);
    void SetTextFile (const char *InFilename, const char *InLocale = "");
    const wchar_t* GetTextFile();
    const string& GetTextFileString();

    void SetAttachment  (const wchar_t *InFilename);
    void SetAttachment  (const char *InFilename, const char *InLocale = "");
    const wchar_t* GetAttachment();
    const string& GetAttachmentString();


    void SetCalendar  (const wchar_t *InCalendar);
    void SetCalendar  (const char *InCalendar, const char *InLocale = "");

    void SetCalendar (const wchar_t *InMethod,
                      const wchar_t *InUID,
                      const wchar_t *InStartTime,
                      const long    InDuration,
                      const long    InReminderMinutes,
                      const wchar_t *InLocation,
                      const long    InRSVP,
                      const wchar_t *InFreq,
                      const long     InCount,
                      const long     InInterval,
                      const wchar_t  *InByDay);


    const wchar_t* GetCalendar();
    const string& GetCalendarString();

    void BuildiCalendar();



    void Reset (void);

    long Send (const wchar_t *InTo = L"",
               const wchar_t *InFrom = L"",
               const wchar_t *InText = L"",
               const wchar_t *InSubject = L"",
               const wchar_t *InCC = L"",
               const wchar_t *InBCC = L"",
               const wchar_t *InAttachment = L"",
               const wchar_t *InTextFile = L"");

    long Send (const char *InTo,
               const char *InFrom = "",
               const char *InText = "",
               const char *InSubject = "",
               const char *InCC = "",
               const char *InBCC = "",
               const char *InAttachment = "",
               const char *InTextFile = "",
               const char *InLocale = "");

    long GetStatusCode (void) const;
    const wchar_t* GetStatusText (void);
    const string& GetStatusTextString(void);
    
    void SetTextHTML (const long InHTML);
    const long GetTextHTML();

    void SetServer (const wchar_t *InHostName);
    void SetServer (const char *InHostName, const char *InLocale = "");

    void SetConfidential (const long InConfidential);
    const long GetConfidential();

    void SetPrivate (const long InPrivate);
    const long GetPrivate();

    void SetCharset (const wchar_t *InCharset);
    void SetCharset (const char *InCharset);
    const wchar_t* GetCharset();

    long Connect (const wchar_t *InServer);
    long Disconnect();


    const string& GetApplicationNameString();
    const string& GetClarifyQueueString ();

private:
    
    long ConnectSmtp (const char *pzSmtpServer);
    long ConnectSmtp (const struct in_addr &IPAddr);
    long SendSmtp ();
    long CloseSmtp (void);
    long RecvTcp (char        *pzBuffer,
                  const long  lBufferSize);
    long SendTcp (const char *sBuffer);
    void SendSubjectHeader();

    long SendFrom ();
    long SendData (const long bText8Bit);
    long SendTextLine ( const char *sLine );
    long SendText ();
    long SendTextFile ();
    long SendAttachment ();
    long SendCalendar ();
    long SendRcpt ( const wchar_t *pwAddr );
    long SendEOM (void);

    long Base64 ( FILE *fpFile );
    long Base64Line ( char *pcBase64, 
                      const unsigned char *pcLine, 
                      const long lLineLen);
    long Base64 ( const char *pcText );
    char Base64Encode (const char inch);
    
    long SendRcptList (const wchar_t *pwAddrList);
    long SendRcptListHeader ( const char *pzLabel,
                              const wchar_t *pwRcptList);
    void SendContentType(const wchar_t *pwValue);
    void SendContentDisposition(const wchar_t *pwValue);

    void SetStatusText (const wchar_t *InStatusText);
    void SetStatusText (const char *InStatusText);    
    
    void hrSet (wchar_t **Ptr, const wchar_t *newVal);
    void hrSet (wchar_t **Ptr, const char *newVal, const char *InLocale = "");
    void hrAppend (wchar_t **Ptr, const wchar_t *newVal);
    void hrAppend (wchar_t **Ptr, const char *newVal, const char *InLocale = "");
    void hrRTrim (wchar_t *Ptr);
    void hrParseList (wchar_t **List, const wchar_t *newVal);
    void hrParseList (wchar_t **List, const char *newVal, const char *InLocale = "");
    long hrParseDistList (wchar_t **List, const wchar_t *wDistName);
    long hrIs8Bit(const wchar_t *pwText, const wchar_t *pwTextFile);

    long GetSmtpServers(char *pzSmtpServerList, 
                        const long lSmtpServerListSize, 
                        const wchar_t *pwSmtpServer);
	long GetHostName();

    long GetHostbyname (struct in_addr  *IPAddrs,
                        const long lIPAddrsSize,
                        long &lIPAddrsNum,
                        const char *pzHostName);


    wchar_t     *mFrom;
    wchar_t     *mToList;
    wchar_t     *mCCList;
    wchar_t     *mBCCList;
    wchar_t     *mSubject;
    wchar_t     *mText;
    wchar_t     *mTextFile;
    wchar_t     *mAttachment;
    
    long        mHTML;
    long        mConfidential;
    long        mPrivate;
    wchar_t     *mSmtpServer;
    wchar_t     *mInvalidRecipients;
    
    int         mStatusCode;
    wchar_t     *mStatusText;
    string      *mTempString;
    
    char        mLocalHostName[64];
    char        mLocalDomainName[64];
    char        mDefaultDomainName[64];
    char        mBoundaryStr[100];
    char        mUsername[51];
    char        mCharset[20];

    long        mSock;
    long        mbMultiPart;

    char        mServerIP[20];


    wchar_t     *mCalendar;
    wchar_t     *mCalendarMethod;
    wchar_t     *mCalendarUID;
    wchar_t     *mCalendarStartTime;
    long        mCalendarDuration;
    long        mCalendarReminderMinutes;
    wchar_t     *mCalendarLocation;
    long        mCalendarRSVP;
    wchar_t     *mCalendarFreq;
    long        mCalendarCount;
    long        mCalendarInterval;
    wchar_t     *mCalendarByDay;
};

CMTMailImp::CMTMailImp ()
/***************************************************************************
**
** CMTMailImp::CMTMailImp
**
** Purpose: Class constructor
**
** Returns: Nothing
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    mFrom = NULL;
    mToList = NULL;
    mCCList = NULL;
    mBCCList = NULL;
    mSubject = NULL;
    mText = NULL;
    mTextFile = NULL;
    mAttachment = NULL;
    mStatusText = NULL;
    mTempString = NULL;
    mSmtpServer = NULL;
    mInvalidRecipients = NULL;
    mTempString = NULL;

    mCalendar = NULL;
    mCalendarMethod = NULL;
    mCalendarUID = NULL;
    mCalendarStartTime = NULL;
    mCalendarLocation = NULL;
    mCalendarDuration = 0;
    mCalendarReminderMinutes = 0;
    mCalendarRSVP = false;
    mCalendarFreq = NULL;
    mCalendarCount = 0;
    mCalendarInterval = 0;
    mCalendarByDay = 0;


    




    mHTML = false;
    mConfidential = false;
    mPrivate = false;

    mBoundaryStr[0] = '\0';
    mbMultiPart = false;
    
    mDefaultDomainName[0] = '\0';
    mLocalDomainName[0] = '\0';
    mUsername[0] = '\0';
    mLocalHostName[0] = '\0';
    mServerIP[0] = '\0';

    mSock = 0;
    mStatusCode = 0;
    SetStatusText (L"Not Connected (Initial state)");
    mbMultiPart = false;
    mHTML = false;
    mConfidential = false;
    mPrivate = false;

    hrSet (&mFrom, L"");
    hrSet (&mToList, L"");
    hrSet (&mCCList, L"");
    hrSet (&mBCCList, L"");
    hrSet (&mSubject, L"");
    hrSet (&mText, L"");
    hrSet (&mTextFile, L"");
    hrSet (&mAttachment, L"");
    hrSet (&mStatusText, L"");
    strcpy (mCharset, "utf-8");

    hrSet (&mCalendar, L"");
    hrSet (&mCalendarMethod, L"");
    hrSet (&mCalendarUID, L"");
    hrSet (&mCalendarStartTime, L"");
    hrSet (&mCalendarLocation, L"");
    mCalendarDuration = 0;
    mCalendarReminderMinutes = 0;
    mCalendarRSVP = false;
    hrSet (&mCalendarFreq, L"");
    mCalendarCount = 0;
    mCalendarInterval = 0;
    hrSet (&mCalendarByDay, L"");



#if defined(_WIN32)
    WSADATA     WsaData;
    if ( WSAStartup (MAKEWORD(1,1),&WsaData) != 0 ) 
    {    
        char    zBuffer[255];
        mStatusCode = WSAGetLastError();
        sprintf (zBuffer, "Error calling 'WSAStartup'  <%d>", mStatusCode);
        SetStatusText (zBuffer);
    }
#endif

#if defined (_WIN32)

    unsigned long    lUsernameSize = sizeof(mUsername);
    GetUserNameA (mUsername, &lUsernameSize);

#elif defined(__VMS) || defined (unix) || defined(__xlC__)

    cuserid (mUsername);
    
#endif

    // lowercase the name
    for ( long i = 0; i < (long)strlen(mUsername); i++ )
    {
        if ( mUsername[i] >= 'A' && mUsername[i] <= 'Z' )	mUsername[i] += 32;
    }    
}

CMTMailImp::~CMTMailImp ()
{
    if ( mSock != 0 )   CloseSmtp();

    if ( mFrom != NULL )            delete mFrom;
    if ( mToList != NULL )          delete mToList;
    if ( mCCList != NULL )          delete mCCList;
    if ( mBCCList != NULL )         delete mBCCList;
    if ( mSubject != NULL )         delete mSubject;
    if ( mText != NULL )            delete mText;
    if ( mTextFile != NULL )        delete mTextFile;
    if ( mAttachment != NULL )      delete mAttachment;
    if ( mStatusText != NULL )      delete mStatusText;
    if ( mTempString != NULL )      delete mTempString;
    if ( mSmtpServer != NULL )      delete mSmtpServer;
    if ( mInvalidRecipients != NULL ) delete mInvalidRecipients;

    if ( mCalendar != NULL )        delete mCalendar;
    if ( mCalendarMethod != NULL )  delete mCalendarMethod;
    if ( mCalendarUID != NULL )  delete mCalendarUID;
    if ( mCalendarStartTime != NULL )  delete mCalendarStartTime;
    if ( mCalendarLocation != NULL )  delete mCalendarLocation;
    if ( mCalendarFreq != NULL )  delete mCalendarFreq;
    if ( mCalendarByDay != NULL )  delete mCalendarByDay;

    



#if defined (_WIN32)
    WSACleanup();
#endif
}



CMTMailImp::CMTMailImp (const CMTMailImp &MailImp)
/***************************************************************************
**
** CMTMailImp::CMTMailImp
**
** Purpose: Class copy constructor
**
** Returns: Nothing
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
***************************************************************************/
{
    mFrom = NULL;
    mToList = NULL;
    mCCList = NULL;
    mBCCList = NULL;
    mSubject = NULL;
    mText = NULL;
    mTextFile = NULL;
    mAttachment = NULL;
    mStatusText = NULL;
    mTempString = NULL;
    mSmtpServer = NULL;
    mInvalidRecipients = NULL;
    mTempString = NULL;

    mCalendar = NULL;
    mCalendarMethod = NULL;
    mCalendarUID = NULL;
    mCalendarStartTime = NULL;
    mCalendarLocation = NULL;
    mCalendarFreq = NULL;
    mCalendarByDay = NULL;



    hrSet (&mFrom, MailImp.mFrom);
    hrSet (&mToList, MailImp.mToList);
    hrSet (&mCCList, MailImp.mCCList);
    hrSet (&mBCCList, MailImp.mBCCList);
    hrSet (&mSubject, MailImp.mSubject);
    hrSet (&mText, MailImp.mText);
    hrSet (&mTextFile, MailImp.mTextFile);
    hrSet (&mAttachment, MailImp.mAttachment);
    hrSet (&mSmtpServer, MailImp.mSmtpServer);
    hrSet (&mInvalidRecipients, MailImp.mInvalidRecipients);

    hrSet (&mCalendar, MailImp.mCalendar);
    hrSet (&mCalendarMethod, MailImp.mCalendarMethod);
    hrSet (&mCalendarUID, MailImp.mCalendarUID);
    hrSet (&mCalendarStartTime, MailImp.mCalendarStartTime);
    hrSet (&mCalendarLocation, MailImp.mCalendarLocation);
    mCalendarDuration = MailImp.mCalendarDuration;
    mCalendarReminderMinutes = MailImp.mCalendarReminderMinutes;
    mCalendarRSVP = MailImp.mCalendarRSVP;
    hrSet (&mCalendarFreq, MailImp.mCalendarFreq);
    mCalendarCount = MailImp.mCalendarCount;
    mCalendarInterval = MailImp.mCalendarInterval;
    hrSet (&mCalendarByDay, MailImp.mCalendarByDay);
    
    mHTML = MailImp.mHTML;
    mConfidential = MailImp.mConfidential;
    mPrivate = MailImp.mPrivate;
    mbMultiPart = MailImp.mbMultiPart;
    mSock = MailImp.mSock;

    strncpy (mLocalHostName, MailImp.mLocalHostName, sizeof(mLocalHostName));
    strncpy (mLocalDomainName, MailImp.mLocalDomainName, sizeof(mLocalDomainName));
    strncpy (mDefaultDomainName, MailImp.mDefaultDomainName, sizeof(mDefaultDomainName));
    strncpy (mBoundaryStr, MailImp.mBoundaryStr, sizeof(mBoundaryStr));
    strncpy (mUsername, MailImp.mUsername, sizeof(mUsername));
    strncpy (mCharset, MailImp.mCharset,sizeof(mCharset));
    strncpy (mServerIP, MailImp.mServerIP,sizeof(mServerIP));

#if defined(_WIN32)
    WSADATA     WsaData;
    if ( WSAStartup (MAKEWORD(1,1),&WsaData) != 0 ) 
    {    
        char    zBuffer[255];
        mStatusCode = WSAGetLastError();
        sprintf (zBuffer, "Error calling 'WSAStartup'  <%d>", mStatusCode);
        SetStatusText (zBuffer);
    }
#endif
}


/***************************************************************************
**
** CMTMailImp::operator=
**
** Purpose: operator= member function
**
** Returns: Reference to the new object
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
***************************************************************************/
CMTMailImp& CMTMailImp::operator= (const CMTMailImp &MailImp)
{
    if ( this == &MailImp ) goto RET;

    hrSet (&mFrom, MailImp.mFrom);
    hrSet (&mToList, MailImp.mToList);
    hrSet (&mCCList, MailImp.mCCList);
    hrSet (&mBCCList, MailImp.mBCCList);
    hrSet (&mSubject, MailImp.mSubject);
    hrSet (&mText, MailImp.mText);
    hrSet (&mTextFile, MailImp.mTextFile);
    hrSet (&mAttachment, MailImp.mAttachment);
    hrSet (&mSmtpServer, MailImp.mSmtpServer);
    hrSet (&mInvalidRecipients, MailImp.mInvalidRecipients);

    strncpy (mCharset, MailImp.mCharset, sizeof(mCharset));
    strncpy (mLocalHostName, MailImp.mLocalHostName, sizeof(mLocalHostName));
    strncpy (mLocalDomainName, MailImp.mLocalDomainName, sizeof(mLocalDomainName));
    strncpy (mBoundaryStr, MailImp.mBoundaryStr, sizeof(mBoundaryStr));
    strncpy (mUsername, MailImp.mUsername, sizeof(mUsername));
    strncpy (mDefaultDomainName, MailImp.mDefaultDomainName, sizeof(mDefaultDomainName));
    strncpy (mServerIP, MailImp.mServerIP, sizeof(mServerIP));

    mHTML = MailImp.mHTML;
    mConfidential = MailImp.mConfidential;
    mPrivate = MailImp.mPrivate;
    mbMultiPart = MailImp.mbMultiPart;
    mSock = MailImp.mSock;

    hrSet (&mCalendar, MailImp.mCalendar);
    hrSet (&mCalendarMethod, MailImp.mCalendarMethod);
    hrSet (&mCalendarUID, MailImp.mCalendarUID);
    hrSet (&mCalendarStartTime, MailImp.mCalendarStartTime);
    hrSet (&mCalendarLocation, MailImp.mCalendarLocation);
    mCalendarDuration = MailImp.mCalendarDuration;
    mCalendarReminderMinutes = MailImp.mCalendarReminderMinutes;
    mCalendarRSVP = MailImp.mCalendarRSVP;
    hrSet (&mCalendarFreq, MailImp.mCalendarFreq);
    mCalendarCount = MailImp.mCalendarCount;
    mCalendarInterval = MailImp.mCalendarInterval;
    hrSet (&mCalendarByDay, MailImp.mCalendarByDay);


    


RET:
    return *this;
}



/***************************************************************************
**
** CMTMailImp::SetFrom
**
** Purpose: Sets the 'From' member variable
**
** Returns: Nothing
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
***************************************************************************/
void CMTMailImp::SetFrom (const wchar_t *newVal)
{
    hrSet (&mFrom, newVal);
    hrRTrim (mFrom);
}

void CMTMailImp::SetFrom (const char *newVal, const char *InLocale)
{
    hrSet (&mFrom, newVal, InLocale);
    hrRTrim (mFrom);
}

/***************************************************************************
**
** CMTMailImp::GetFrom
**
** Purpose: Get the value from the 'From' member variable
**
** Returns: Reference to the 'string' containing the value
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
const wchar_t* CMTMailImp::GetFrom ()
{
    return mFrom;
}
const string& CMTMailImp::GetFromString ()
{
    if ( mTempString != NULL )
    {
        delete mTempString;
        mTempString = NULL;
    }

    hrWcsToString (&mTempString, mFrom);

    return *mTempString;
}


/***************************************************************************
**
** CMTMailImp::SetTo
**
** Purpose: Sets the 'To' member variable
**
** Returns: Nothing
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
void CMTMailImp::SetTo (const wchar_t *newVal)
{
    hrSet (&mToList, newVal);
}
void CMTMailImp::SetTo (const char *newVal, const char *InLocale)
{
    hrSet (&mToList, newVal, InLocale);
}

/***************************************************************************
**
** CMTMailImp::AppendTo
**
** Purpose: Appends to the 'To' member variable
**
** Returns: Nothing
**
** History: 30-Jun-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
void CMTMailImp::AppendTo (const wchar_t *newVal)
{
    if ( mToList != NULL && wcslen(mToList) > 0 ) hrAppend(&mToList, L",");

    hrAppend (&mToList, newVal);
}
void CMTMailImp::AppendTo (const char *newVal, const char *InLocale)
{
    if ( mToList != NULL && wcslen(mToList) > 0 ) hrAppend(&mToList, L",");

    hrAppend (&mToList, newVal, InLocale);
}


/***************************************************************************
**
** CMTMailImp::GetTo
**
** Purpose: Get the value from the 'To' member variable
**
** Returns: Reference to the 'String' containing the value
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
const wchar_t* CMTMailImp::GetTo ()
{
    return mToList;
}
const string& CMTMailImp::GetToString ()
{
    if ( mTempString != NULL )
    {
        delete mTempString;
        mTempString = NULL;
    }

    hrWcsToString (&mTempString, mToList);

    return *mTempString;
}


/***************************************************************************
**
** CMTMailImp::SetCC
**
** Purpose: Sets the 'CC' member variable
**
** Returns: Nothing
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
void CMTMailImp::SetCC (const wchar_t *newVal)
{
    hrSet (&mCCList, newVal);
}

void CMTMailImp::SetCC (const char *newVal, const char *InLocale)
{
    hrSet (&mCCList, newVal, InLocale);
}


/***************************************************************************
**
** CMTMailImp::AppendCC
**
** Purpose: Appends to the 'CC' member variable
**
** Returns: Nothing
**
** History: 30-Jun-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
void CMTMailImp::AppendCC (const wchar_t *newVal)
{
    if ( mCCList != NULL && wcslen(mCCList) > 0 ) hrAppend(&mCCList, L",");

    hrAppend (&mCCList, newVal);
}
void CMTMailImp::AppendCC (const char *newVal, const char *InLocale)
{
    if ( mCCList != NULL && wcslen(mCCList) > 0 ) hrAppend(&mCCList, L",");

    hrAppend (&mCCList, newVal, InLocale);
}


/***************************************************************************
**
** CMTMailImp::GetCC
**
** Purpose: Get the value from the 'CC' member variable
**
** Returns: Reference to the 'String' containing the value
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
const wchar_t* CMTMailImp::GetCC ()
{
    return mCCList;
}
const string& CMTMailImp::GetCCString ()
{
     if ( mTempString != NULL )
     {
         delete mTempString;
         mTempString = NULL;
     }
 
     hrWcsToString (&mTempString, mCCList);
 
     return *mTempString;
}


/***************************************************************************
**
** CMTMailImp::SetBCC
**
** Purpose: Sets the 'BCC' member variable
**
** Returns: Nothing
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
void CMTMailImp::SetBCC (const wchar_t *newVal)
{
    if ( mBCCList != NULL && wcslen(mBCCList) > 0 ) hrAppend(&mBCCList, L",");

    hrSet (&mBCCList, newVal);
}
void CMTMailImp::SetBCC (const char *newVal, const char *InLocale)
{
    if ( mBCCList != NULL && wcslen(mBCCList) > 0 ) hrAppend(&mBCCList, L",");

    hrSet (&mBCCList, newVal, InLocale);
}


/***************************************************************************
**
** CMTMailImp::AppendBCC
**
** Purpose: Appends to the 'BCC' member variable
**
** Returns: Nothing
**
** History: 30-Jun-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
void CMTMailImp::AppendBCC (const wchar_t *newVal)
{
    if ( mBCCList != NULL && wcslen(mBCCList) > 0 ) hrAppend(&mBCCList, L",");

    hrAppend (&mBCCList, newVal);
}
void CMTMailImp::AppendBCC (const char *newVal, const char *InLocale)
{
    if ( mBCCList != NULL && wcslen(mBCCList) > 0 ) hrAppend(&mBCCList, L",");

    hrAppend (&mBCCList, newVal, InLocale);
}


/***************************************************************************
**
** CMTMailImp::GetBCC
**
** Purpose: Get the value from the 'BCC' member variable
**
** Returns: Reference to the 'String' containing the value
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
const wchar_t* CMTMailImp::GetBCC ()
{
    return mBCCList;
}
const string& CMTMailImp::GetBCCString ()
{
    if ( mTempString != NULL )
    {
        delete mTempString;
        mTempString = NULL;
    }

    hrWcsToString (&mTempString, mBCCList);

    return *mTempString;
}


/***************************************************************************
**
** CMTMailImp::SetSubject
**
** Purpose: Sets the 'Subject' member variable
**
** Returns: Nothing
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
void CMTMailImp::SetSubject (const wchar_t *newVal)
{
    hrSet (&mSubject, newVal);
    hrRTrim (mSubject);

    // Make sure the subject is only one line of text
    if ( mSubject != NULL )
    {
        wchar_t     *ptr = NULL;
        if ( (ptr = wcschr(mSubject, L'\r')) != NULL )    *ptr = L'\0';
        if ( (ptr = wcschr(mSubject, L'\n')) != NULL )    *ptr = L'\0';
    }
}

void CMTMailImp::SetSubject (const char *newVal, const char *InLocale)
{
    hrSet (&mSubject, newVal, InLocale);
    hrRTrim (mSubject);

    // Make sure the subject is only one line of text
    if ( mSubject != NULL )
    {
        wchar_t     *ptr = NULL;
        if ( (ptr = wcschr(mSubject, L'\r')) != NULL )    *ptr = L'\0';
        if ( (ptr = wcschr(mSubject, L'\n')) != NULL )    *ptr = L'\0';
    }
}


/***************************************************************************
**
** CMTMailImp::GetSubject
**
** Purpose: Get the value from the 'Subject' member variable
**
** Returns: Reference to the 'String' containing the value
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
const wchar_t* CMTMailImp::GetSubject (void)
{
    return mSubject;
}
const string& CMTMailImp::GetSubjectString ()
{
    if ( mTempString != NULL )
    {
        delete mTempString;
        mTempString = NULL;
    }

    hrWcsToString (&mTempString, mSubject);

    return *mTempString;
}


/***************************************************************************
**
** CMTMailImp::SetText
**
** Purpose: Sets the 'Text' member variable
**
** Returns: Nothing
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
void CMTMailImp::SetText (const wchar_t *newVal)
{
    hrSet (&mText, newVal);
}
void CMTMailImp::SetText (const char *newVal, const char *InLocale)
{
    hrSet (&mText, newVal, InLocale);
}


/***************************************************************************
**
** CMTMailImp::AppendText
**
** Purpose: Appends text to the end of the 'Text' member variable
**
** Returns: Nothing
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
void CMTMailImp::AppendText (const wchar_t *newVal)
{
    // Check the last character in the existing text buffer. If it doesn't
    // end with a newline, add one.
    
    if ( mText != NULL &&
         wcslen(mText) > 0 &&
         mText[wcslen(mText)-1] != L'\n' &&
         mText[wcslen(mText)-1] != L'\r' )
    {
        hrAppend (&mText, L"\n");
    }

    hrAppend (&mText, newVal);
}
void CMTMailImp::AppendText (const char *newVal, const char *InLocale)
{
    // Check the last character in the existing text buffer. If it doesn't
    // end with a newline, add one.
    
    if ( mText != NULL &&
         wcslen(mText) > 0 &&
         mText[wcslen(mText)-1] != L'\n' &&
         mText[wcslen(mText)-1] != L'\r')
    {
        hrAppend (&mText, L"\n");
    }

    hrAppend (&mText, newVal, InLocale);
}


/***************************************************************************
**
** CMTMailImp::GetText
**
** Purpose: Get the value from the 'Text' member variable
**
** Returns: Reference to the 'String' containing the value
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
const wchar_t* CMTMailImp::GetText (void)
{
    return mText;
}
const string& CMTMailImp::GetTextString ()
{
    if ( mTempString != NULL )
    {
        delete mTempString;
        mTempString = NULL;
    }

    hrWcsToString (&mTempString, mText);

    return *mTempString;
}


/***************************************************************************
**
** CMTMailImp::GetTextLength
**
** Purpose: Get the current length of the 'Text' member variable
**
** Returns: Length
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
const long CMTMailImp::GetTextLength (void)
{
    return wcslen(mText);
}


/***************************************************************************
**
** CMTMailImp::SetTextFile
**
** Purpose: Sets the 'TextFile' member variable
**
** Returns: Nothing
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
void CMTMailImp::SetTextFile (const wchar_t *newVal)
{
    hrSet (&mTextFile, newVal);
}
void CMTMailImp::SetTextFile (const char *newVal, const char *InLocale)
{
    hrSet (&mTextFile, newVal, InLocale);
}


/***************************************************************************
**
** CMTMailImp::GetTextFile
**
** Purpose: Get the value from the 'TextFile' member variable
**
** Returns: Reference to the 'String' containing the value
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
const wchar_t* CMTMailImp::GetTextFile (void)
{
    return mTextFile;
}
const string& CMTMailImp::GetTextFileString ()
{
    if ( mTempString != NULL )
    {
        delete mTempString;
        mTempString = NULL;
    }

    hrWcsToString (&mTempString, mTextFile);

    return *mTempString;
}


/***************************************************************************
**
** CMTMailImp::SetAttachment
**
** Purpose: Sets the 'Attachment' member variable
**
** Returns: Nothing
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
void CMTMailImp::SetAttachment (const wchar_t *newVal)
{
    hrSet (&mAttachment, newVal);
}
void CMTMailImp::SetAttachment (const char *newVal, const char *InLocale)
{
    hrSet (&mAttachment, newVal, InLocale);
}


/***************************************************************************
**
** CMTMailImp::GetAttachment
**
** Purpose: Get the value from the 'Attachment' member variable
**
** Returns: Reference to the 'String' containing the value
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
const wchar_t* CMTMailImp::GetAttachment (void)
{
    return mAttachment;
}
const string& CMTMailImp::GetAttachmentString ()
{
    if ( mTempString != NULL )
    {
        delete mTempString;
        mTempString = NULL;
    }

    hrWcsToString (&mTempString, mAttachment);

    return *mTempString;
}



/***************************************************************************
**
** CMTMailImp::SetCalendar
**
** Purpose: Sets the 'Calendar' member variable
**
** Returns: Nothing
**
** History: 16-Mar-2004 John Ferguson   Initial Creation
**
**
***************************************************************************/
void CMTMailImp::SetCalendar (const wchar_t *newVal)
{
    hrSet (&mCalendar, newVal);
}
void CMTMailImp::SetCalendar (const char *newVal, const char *InLocale)
{
    hrSet (&mCalendar, newVal, InLocale);
}

void CMTMailImp::SetCalendar (const wchar_t *InMethod,
                              const wchar_t *InUID,
                              const wchar_t *InStartTime,
                              const long    InDuration,
                              const long    InReminderMinutes,
                              const wchar_t *InLocation,
                              const long    InRSVP,
                              const wchar_t *InFreq,
                              const long    InCount,
                              const long    InInterval,
                              const wchar_t *InByDay)
{
    hrSet (&mCalendarMethod, InMethod);
    hrSet (&mCalendarUID, InUID);
    hrSet (&mCalendarStartTime, InStartTime);
    mCalendarDuration = InDuration;
    mCalendarReminderMinutes = InReminderMinutes;
    hrSet (&mCalendarLocation, InLocation);
    mCalendarRSVP = InRSVP;

    hrSet (&mCalendarFreq, InFreq);
    mCalendarCount = InCount;
    mCalendarInterval = InInterval;
    hrSet (&mCalendarByDay, InByDay);
}


/***************************************************************************
**
** CMTMailImp::GetCalendar
**
** Purpose: Get the value from the 'Calendar' member variable
**
** Returns: Reference to the 'String' containing the value
**
** History: 16-Mar-2004 John Ferguson   Initial Creation
**
**
***************************************************************************/
const wchar_t* CMTMailImp::GetCalendar (void)
{
    // The API built iCalendar string will normally not be built until the Send 
    // method is called. If the calendar items have been passed in go ahead and
    // build it now so we can pass it back to the caller
    if ( ( mCalendar == NULL || wcslen(mCalendar) == 0 ) &&
          mCalendarMethod != NULL && wcslen(mCalendarMethod) )
    {
        this->BuildiCalendar();
    }

    return mCalendar;
}
const string& CMTMailImp::GetCalendarString ()
{
    // The API built iCalendar string will normally not be built until the Send 
    // method is called. If the calendar items have been passed in go ahead and
    // build it now so we can pass it back to the caller
    if ( ( mCalendar == NULL || wcslen(mCalendar) == 0 ) &&
          mCalendarMethod != NULL && wcslen(mCalendarMethod) )
    {
        this->BuildiCalendar();
    }

    if ( mTempString != NULL )
    {
        delete mTempString;
        mTempString = NULL;
    }

    hrWcsToString (&mTempString, mCalendar);

    return *mTempString;
}



const string& CMTMailImp::GetApplicationNameString ()
{
    return *mTempString;
}
const string& CMTMailImp::GetClarifyQueueString ()
{
    return *mTempString;
}


/***************************************************************************
**
** CMTMailImp::SetServer
**
** Purpose: Sets the 'SmtpServer' member variable
**
** Returns: Nothing
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
void CMTMailImp::SetServer (const wchar_t *newVal)
{
    hrSet (&mSmtpServer, newVal);
    hrRTrim (mSmtpServer);
}
void CMTMailImp::SetServer (const char *newVal, const char *InLocale)
{
    hrSet (&mSmtpServer, newVal, InLocale);
    hrRTrim (mSmtpServer);
}

/***************************************************************************
**
** CMTMailImp::SetCharset
**
** Purpose: Sets the 'Charset' member variable. This will be used to determine
**          what character set the email will be formatted in. The default is
**          utf-8.
**
** Returns: Nothing
**
** History: 16-DEC-2002 John Ferguson   Initial Creation
**
**
***************************************************************************/
void CMTMailImp::SetCharset (const wchar_t *newVal)
{
    if ( wcscmp(newVal, L"utf-8") == 0 ||
         wcscmp(newVal, L"iso-2022-jp") == 0 )
    {
        hrWcsToMbs(mCharset, sizeof(mCharset), newVal);
    }

}
void CMTMailImp::SetCharset (const char *newVal)
{
    if ( strcmp(newVal, "utf-8") == 0 ||
         strcmp(newVal, "iso-2022-jp") == 0 )
    {
        strncpy (mCharset, newVal, sizeof(mCharset));
        mCharset[sizeof(mCharset)-1] = '\0';
    }
}

/***************************************************************************
**
** CMTMailImp::Reset
**
** Purpose: Reset all of the member variables to their default values
**
** Returns: Nothing
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
void CMTMailImp::Reset (void)
{
    if ( mFrom != NULL ) mFrom[0] = L'\0';
    if ( mToList != NULL ) mToList[0] = L'\0';
    if ( mCCList != NULL ) mCCList[0] = L'\0';
    if ( mBCCList != NULL ) mBCCList[0] = L'\0';
    if ( mSubject != NULL ) mSubject[0] = L'\0';
    if ( mText != NULL ) mText[0] = L'\0';
    if ( mTextFile != NULL ) mTextFile[0] = L'\0';
    if ( mAttachment != NULL ) mAttachment[0] = L'\0';
    
    strcpy (mCharset, "utf-8");
    mHTML = false;
    mConfidential = false;
    mPrivate = false;
    mbMultiPart = false;
    if ( mSmtpServer != NULL ) mSmtpServer[0] = L'\0';

    if ( mCalendar != NULL ) mCalendar[0] = L'\0';
    if ( mCalendarMethod != NULL ) mCalendarMethod[0] = L'\0';
    if ( mCalendarUID != NULL ) mCalendarUID[0] = L'\0';
    if ( mCalendarStartTime != NULL ) mCalendarStartTime[0] = L'\0';
    if ( mCalendarLocation != NULL ) mCalendarLocation[0] = L'\0';
    mCalendarDuration = 0;
    mCalendarReminderMinutes = 0;
    mCalendarRSVP = false;
    if ( mCalendarFreq != NULL ) mCalendarFreq[0] = L'\0';
    mCalendarCount = 0;
    mCalendarInterval = 0;
    if ( mCalendarByDay != NULL ) mCalendarByDay[0] = L'\0';

    
    
}



/***************************************************************************
**
** CMTMailImp::GetStatusCode
**
** Purpose: Get the last status code that was set in the Class
**
** Returns: (long) status code
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
long CMTMailImp::GetStatusCode (void) const
{
    return mStatusCode;
}


/***************************************************************************
**
** CMTMailImp::GetStatusText
**
** Purpose: Get the last status text that was set in the Class
**
** Returns: Reference to the 'String' containing the value
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
const wchar_t* CMTMailImp::GetStatusText (void)
{
    return mStatusText;
}
const string& CMTMailImp::GetStatusTextString ()
{
    if ( mTempString != NULL )
    {
        delete mTempString;
        mTempString = NULL;
    }

    hrWcsToString (&mTempString, mStatusText);

    return *mTempString;
}


void CMTMailImp::SetStatusText (const wchar_t *InStatusText)
{
    hrSet (&mStatusText, InStatusText);
}
void CMTMailImp::SetStatusText (const char *InStatusText)
{
    hrSet (&mStatusText, InStatusText);
}




void CMTMailImp::SetTextHTML (const long newVal)
{
    mHTML = newVal;
}
const long CMTMailImp::GetTextHTML()
{
    return mHTML;
}

void CMTMailImp::SetConfidential (const long newVal)
{
    mConfidential = newVal;
}
const long CMTMailImp::GetConfidential()
{
    return mConfidential;
}

void CMTMailImp::SetPrivate (const long newVal)
{
    mPrivate = newVal;
}
const long CMTMailImp::GetPrivate()
{
    return mPrivate;
}

/***************************************************************************
**
** CMTMailImp::Connect
**
** Purpose: Connect to the SMTP server
**          Any parameters passed will override the value in that variable.
**
** Returns: (long) true or false
**
** History: 18-Mar-2003 John Ferguson   Initial Creation
**
**
***************************************************************************/
long CMTMailImp::Connect(const wchar_t *InServer)
{
    long        lRetStatus = true;
    char        zSmtpServer[128];
    char        *ptr = NULL;
    unsigned long lHostLen;

    char        zSmtpServerList[1000];


    // Get the host name of the local host
    if ( !GetHostName() )
    {
        lRetStatus = false;
        goto RET;
    }

    // If caller passed in a server name use that instead of the default
    if ( InServer != NULL && wcslen(InServer) > 0 )
        SetServer (InServer);

    // generate a list of SMTP servers to connect to
    GetSmtpServers(zSmtpServerList, sizeof(zSmtpServerList), mSmtpServer);
   

    // try to keep sending the message to each host until one accepts it
    ptr = zSmtpServerList;

    while ( strlen(ptr) > 0 )
    {
        // Get the next host name in the list
        lHostLen = strcspn(ptr, ",;"); 

        if ( lHostLen > sizeof(zSmtpServer)) // make sure the result fits
            lHostLen = sizeof(zSmtpServer);

        strncpy (zSmtpServer, ptr, lHostLen);
        zSmtpServer[lHostLen] = '\0';        


        // Connect to the SMTP server
        if ( (lRetStatus = ConnectSmtp(zSmtpServer)) ) break; // Successfully connected

        ptr += lHostLen;            // move to the delimiter
        if ( *ptr != '\0' ) ptr++;  // move past the delimiter if not the end of the string
    }

RET:
    return lRetStatus;
}

/***************************************************************************
**
** CMTMailImp::Disconnect
**
** Purpose: Disconnect the connection ro the SMTP server
**
** Returns: (long) true or false
**
** History: 18-Mar-2003 John Ferguson   Initial Creation
**
**
***************************************************************************/
long CMTMailImp::Disconnect()
{
    long    lRetStatus = true;

    CloseSmtp();    // Close the connection

    return lRetStatus;
}


/***************************************************************************
**
** CMTMailImp::Send
**
** Purpose: Send the mail message using the values in the member variables.
**          Any parameters passed will override the value in that variable.
**
** Returns: (long) true or false
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
***************************************************************************/
long CMTMailImp::Send (const wchar_t *InTo,
                       const wchar_t *InFrom,
                       const wchar_t *InText,
                       const wchar_t *InSubject,
                       const wchar_t *InCC,
                       const wchar_t *InBCC,
                       const wchar_t *InAttachments,
                       const wchar_t *InTextFile)
{
    long        lRetStatus = false;

    char        zSmtpServerList[1000];
    char        zSmtpServer[128];
    char        *ptr = NULL;
    

    

    // Set any values that were passed in.

    if ( InTo != NULL && wcslen(InTo) > 0 )                     SetTo (InTo);
    if ( InFrom != NULL && wcslen(InFrom) > 0 )                 SetFrom (InFrom );
    if ( InText != NULL && wcslen(InText) > 0 )                 SetText (InText);
    if ( InSubject != NULL && wcslen(InSubject) > 0 )           SetSubject (InSubject);
    if ( InCC != NULL && wcslen(InCC) > 0 )                     SetCC (InCC);
    if ( InBCC != NULL && wcslen(InBCC) > 0 )                   SetBCC (InBCC);
    if ( InAttachments != NULL && wcslen(InAttachments) > 0 )   SetAttachment (InAttachments);
    if ( InTextFile != NULL && wcslen(InTextFile) > 0 )         SetTextFile (InTextFile);

    if ( mCalendarMethod != NULL && wcslen(mCalendarMethod) > 0 )
    {
        this->BuildiCalendar();
    }


    

// On VMS check for a logical called "TEST_ENVIRONMENT". If it exists, only
// deliver mail to the person running the program.

#ifdef __VMS
	{
		char 	*pTest = getenv("TEST_ENVIRONMENT");
		if ( pTest != NULL )
		{
			SetTo (mUsername); // pwTempToList = mUsername;
			SetCC (L""); // pwTempCCList = NULL;
			SetBCC (L""); // pwTempBCCList = NULL;
		}
	}
#endif

    // See if the connection has already been established. If so send the email and leave
    // the connection open
    if ( mSock != 0 )
    {
        lRetStatus = SendSmtp();
        goto RET;
    }


    // Get the host name of the local host
    if ( !GetHostName() )
    {
        lRetStatus = false;
        goto RET;
    }

    // generate a list of SMTP servers to connect to if none were provided (based on subdomain)
    GetSmtpServers(zSmtpServerList, sizeof(zSmtpServerList), mSmtpServer);
   
    // keep sending the message to each host until one accepts it
    ptr = zSmtpServerList;

    while ( strlen(ptr) > 0 )
    {
        struct in_addr  IPAddrs[20];
        long        lIPAddrsNum = 0;
        long        idx;

        unsigned long lHostLen;

        // Get the next host name in the list
        lHostLen = strcspn(ptr, ",;"); 

        if ( lHostLen > sizeof(zSmtpServer)) // make sure the result fits
            lHostLen = sizeof(zSmtpServer);

        strncpy (zSmtpServer, ptr, lHostLen);
        zSmtpServer[lHostLen] = '\0'; 

        // get the IP address(es) for this hostname
        if ( GetHostbyname(IPAddrs, 20, lIPAddrsNum, zSmtpServer) )
        {
            // try sending to each IP address
            for ( idx = 0; idx < lIPAddrsNum; idx++ )
            {
                SetStatusText ("");

                // Connect to the SMTP server
                if ( (lRetStatus = ConnectSmtp(IPAddrs[idx])) )
                {
                    // Successfully connected. Send the email.
                    lRetStatus = SendSmtp();

                    CloseSmtp(); // make sure the connection is closed

                    if ( lRetStatus ) goto RET; // success or fail and don't try again
                }
            }
        }

        ptr += lHostLen;            // move to the delimiter
        if ( *ptr != '\0' ) ptr++;  // move past the delimiter if not the end of the string
    }

RET:
    // If there were no error returned see if there were any invalid addresses
    if ( lRetStatus &&
         mInvalidRecipients != NULL &&
         wcslen(mInvalidRecipients) > 0 )
    {
        // Append the invalid users to end of the current message.
        mStatusCode = 550;
        hrAppend (&mStatusText, L" 550 User(s) unknown: ");
        hrAppend (&mStatusText, mInvalidRecipients);

        lRetStatus = false;
    }

    return lRetStatus;
}


long CMTMailImp::Send (const char *InTo,
                       const char *InFrom,
                       const char *InText,
                       const char *InSubject,
                       const char *InCC,
                       const char *InBCC,
                       const char *InAttachments,
                       const char *InTextFile, 
                       const char *InLocale)
{
    long        lStatus;

    wchar_t     *wpTo = NULL;
    hrMbsToWcs (&wpTo, InTo, InLocale);
    hrRTrim (wpTo);

    wchar_t     *wpFrom = NULL;
    hrMbsToWcs (&wpFrom, InFrom, InLocale);
    hrRTrim(wpFrom);

    wchar_t     *wpText = NULL;
    hrMbsToWcs (&wpText, InText, InLocale);
    hrRTrim(wpText);

    wchar_t     *wpSubject = NULL;
    hrMbsToWcs (&wpSubject, InSubject, InLocale);
    hrRTrim(wpSubject);

    wchar_t     *wpCC = NULL;
    hrMbsToWcs (&wpCC, InCC, InLocale);
    hrRTrim(wpCC);

    wchar_t     *wpBCC = NULL;
    hrMbsToWcs (&wpBCC, InBCC, InLocale);
    hrRTrim(wpBCC);

    wchar_t     *wpAttachments = NULL;
    hrMbsToWcs (&wpAttachments, InAttachments, InLocale);
    hrRTrim(wpAttachments);

    wchar_t     *wpTextFile = NULL;
    hrMbsToWcs (&wpTextFile, InTextFile, InLocale);
    hrRTrim(wpTextFile);


    lStatus = this->Send (wpTo,
                          wpFrom,
                          wpText,
                          wpSubject,
                          wpCC,
                          wpBCC,
                          wpAttachments,
                          wpTextFile);

    if ( wpTo != NULL ) delete wpTo;
    if ( wpFrom != NULL ) delete wpFrom;
    if ( wpText != NULL ) delete wpText;
    if ( wpSubject != NULL ) delete wpSubject;
    if ( wpCC != NULL ) delete wpCC;
    if ( wpBCC != NULL ) delete wpBCC;
    if ( wpAttachments != NULL ) delete wpAttachments;
    if ( wpTextFile != NULL ) delete wpTextFile;

    return lStatus;
}
/****************************************************************************************
**
** CMTMailImp::GetHostName
**
** Purpose: Get the host name of the local host
**
** Returns: Boolean true or false.
**
** History: 1-Nov-2002 John Ferguson   Initial Creation
**          11-Apr-2016 John Ferguson  Modify to look up domain name if it's not returned wit the initial gethostname
**
**
*****************************************************************************************/
long CMTMailImp::GetHostName()
{
    long            bRetStatus = true;


    // Get the host name of the local machine

    char    *ptr = NULL;
    
    long lStatus = gethostname (mLocalHostName, sizeof(mLocalHostName));

    if ( lStatus == -1 )
    {
        char    zBuffer[255];
        mStatusCode = WSAGetLastError();
        sprintf (zBuffer, "Error calling 'gethostname'  <%d>", mStatusCode);
        SetStatusText (zBuffer);
        goto RET;
    }

    // parse the domain name out of the local host name
    //
    // If the domain was not included as part of the host name then perform another lookup of the hostname we have
    // to get the domain name.
    //
    if ( (ptr = strchr (mLocalHostName, '.')) == NULL )
    {
        struct hostent  *psHostEnt = NULL;
        int             iError = 0;

#if defined(sun)
    struct hostent  sHostEntity;
    char            zHostEntBuf[2048];

    psHostEnt = gethostbyname_r(mLocalHostName,
                                &sHostEntity,
                                zHostEntBuf, sizeof(zHostEntBuf),
                                &iError);
#elif defined(linux)
    struct hostent  sHostEntity;
    char            zHostEntBuf[2048];
    int             iStatus;


    iStatus = gethostbyname_r(mLocalHostName,
                              &sHostEntity,
                              zHostEntBuf, sizeof(zHostEntBuf),
                              &psHostEnt,
                              &iError);

    if ( iStatus != 0 )
    {
        psHostEnt = NULL;
    }
#elif defined(__xlC__)
    struct hostent          Htent;
    struct hostent_data     Ht_data;

    iError = gethostbyname_r(mLocalHostName, &Htent, &Ht_data);

    if ( iError != 0 )
    {
        psHostEnt = NULL;
    }
    else
    {
        psHostEnt = &Htent;
    }
#elif defined(_WIN32)
    psHostEnt = gethostbyname(mLocalHostName);
#else
#   error "The CMTMAILW.CPP module has not been coded to compile on this platform yet."
#endif


        if ( psHostEnt != NULL )
        {
            strcpy (mLocalHostName, psHostEnt->h_name);
        }
    }

    // lower case the hostname name
	ptr = mLocalHostName;
	while ( *ptr != '\0' )
	{
		if ( *ptr >= 'A' && *ptr <= 'Z' ) *ptr += 32;
		ptr++;
	}


    // parse out the domain name
    if ( (ptr = strchr (mLocalHostName, '.')) != NULL )
    {
        strcpy (mLocalDomainName, ptr+1);
    }

    // If the full domain name was not returned default the domain name 
    if ( strlen(mLocalDomainName) == 0 ) 
    {
        strcpy (mLocalDomainName, "micron.com");
    }


	// Store the domain name to use as the default domain name for recipients
    strncpy (mDefaultDomainName, mLocalDomainName, sizeof(mDefaultDomainName));


	// if the domain name is a sub-domain of micron.com then
	// we only want to store the main domain name

	if ( strstr(mDefaultDomainName, "micron.com") != NULL ) 
    {
        strcpy (mDefaultDomainName, "micron.com");
    }
RET:
    return bRetStatus;
}

/****************************************************************************************
**
** CMTMailImp::GetSmtpServers
**
** Purpose: Generate a list of SMTP servers to attempt connection to
**
** Returns: Boolean true or false.
**
** History: 1-Nov-2002 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::GetSmtpServers(char *pzSmtpServerList, 
                                const long lSmtpServerListSize, 
                                const wchar_t *pwSmtpServer)
{
    long        bRetStatus = true;
    char	    *pMailHost = NULL;


    // If we were given a list of host names use those names, otherwise built a default list
   
    if ( pwSmtpServer != NULL && wcslen(pwSmtpServer) > 0 )
    {
        wcstombs (pzSmtpServerList, pwSmtpServer, lSmtpServerListSize);
    }
    else if ( (pMailHost = getenv("MAILHOST")) != 0 ) // See if the environment variable MAILHOST exists.
    {
        strncpy(pzSmtpServerList, pMailHost, lSmtpServerListSize);
        pzSmtpServerList[lSmtpServerListSize-1] = '\0';
    }
    else
    {
        strcpy(pzSmtpServerList, "relay");  // use gateway in the local domain if one exists


        // If the local domain is something other than "micron.com" ( a sub-domain) then 
        // add "relay.micron.com" for redundancy

        if ( strcmp (mLocalDomainName, "micron.com") != 0 )  
            strcat(pzSmtpServerList, ",relay.micron.com");

        if ( strcmp (mLocalDomainName, "sing.micron.com") != 0 )
            strcat(pzSmtpServerList, ",relay.sing.micron.com");
    }

    return bRetStatus;
}

long CMTMailImp::GetHostbyname (struct in_addr  *IPAddrs,
                                const long lIPAddrsSize,
                                long &lIPAddrsNum,
                                const char *pzHostName)
{
    long            bRetStatus = true;

    struct hostent  *psHostEnt = NULL;
    int             iError = 0;
    long            i;

#if defined(__VMS) || defined(sun)
    struct hostent  sHostEntity;
    char            zHostEntBuf[2048];

    psHostEnt = gethostbyname_r(pzHostName,
                                &sHostEntity,
                                zHostEntBuf, sizeof(zHostEntBuf),
                                &iError);
#elif defined(linux)
    struct hostent  sHostEntity;
    char            zHostEntBuf[2048];
    int             iStatus;


    iStatus = gethostbyname_r(pzHostName,
                              &sHostEntity,
                              zHostEntBuf, sizeof(zHostEntBuf),
                              &psHostEnt,
                              &iError);

    if ( iStatus != 0 )
    {
        psHostEnt = NULL;
    }
#elif defined(__xlC__)
    struct hostent          Htent;
    struct hostent_data     Ht_data;

    iError = gethostbyname_r(pzHostName, &Htent, &Ht_data);

    if ( iError != 0 )
    {
        psHostEnt = NULL;
    }
    else
    {
        psHostEnt = &Htent;
    }
#elif defined(_WIN32)
    psHostEnt = gethostbyname(pzHostName);
#else
#   error "The CMTMAIL.CPP module has not been coded to compile on this platform yet."
#endif


    // did we find a DNS entry?
    if ( psHostEnt  == NULL )
    {
        char    zBuffer[255];

#if defined (unix) || defined(__xlC__) || defined(__VMS)
            sprintf(zBuffer, "Error calling gethostbyname  <%d>  host <%s>", iError, pzHostName);
            mStatusCode = iError;
#else
            sprintf(zBuffer, "Error calling gethostbyname  <%d>  host <%s>", WSAGetLastError(), pzHostName);
            mStatusCode = WSAGetLastError();
#endif

        SetStatusText (zBuffer);
        bRetStatus = false;
        goto RET;
    }

    // save all the IP addresses for this name
    for ( i = 0; psHostEnt->h_addr_list[i] != 0 && lIPAddrsNum < 20; i++ )
    {
        IPAddrs[lIPAddrsNum++] = *((struct in_addr*)psHostEnt->h_addr_list[i]);
    }


RET:
    return bRetStatus;
}

/****************************************************************************************
**
** CMTMailImp::ConnectSmtp
**
** Purpose: To Connect to the SMTP host
**
** Returns: Boolean true or false.
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::ConnectSmtp (const char *pzSmtpServer)
{
    long            bRetStatus = true;

    struct hostent      *psHostEnt = NULL;
    long            i;

    struct in_addr  IPAddrs[10];
    long        lIPAddrsNum = 0;
    
    int     iError = 0;

#if defined(__VMS) || defined(sun)
    struct hostent  sHostEntity;
    char            zHostEntBuf[2048];

    psHostEnt = gethostbyname_r(pzSmtpServer,
                                &sHostEntity,
                                zHostEntBuf, sizeof(zHostEntBuf),
                                &iError);
#elif defined(linux)
    struct hostent  sHostEntity;
    char            zHostEntBuf[2048];
    int             iStatus;


    iStatus = gethostbyname_r(pzSmtpServer,
                              &sHostEntity,
                              zHostEntBuf, sizeof(zHostEntBuf),
                              &psHostEnt,
                              &iError);

    if ( iStatus != 0 )
    {
        psHostEnt = NULL;
    }
#elif defined(__xlC__)
    struct hostent          Htent;
    struct hostent_data     Ht_data;

    iError = gethostbyname_r(pzSmtpServer, &Htent, &Ht_data);

    if ( iError != 0 )
    {
        psHostEnt = NULL;
    }
    else
    {
        psHostEnt = &Htent;
    }
#elif defined(_WIN32)
    psHostEnt = gethostbyname(pzSmtpServer);
#else
#   error "The CMTMAIL.CPP module has not been coded to compile on this platform yet."
#endif




    // did we find a DNS entry?
    if ( psHostEnt  == NULL )
    {
        char    zBuffer[255];

#if defined (unix) || defined(__xlC__) || defined(__VMS)
            sprintf(zBuffer, "Error calling gethostbyname  <%d>  host <%s>", iError, pzSmtpServer);
            mStatusCode = iError;
#else
            sprintf(zBuffer, "Error calling gethostbyname  <%d>  host <%s>", WSAGetLastError(), pzSmtpServer);
            mStatusCode = WSAGetLastError();
#endif

        SetStatusText (zBuffer);
        bRetStatus = false;
        goto RET;
    }


    // save all the IP addresses for this name
    for ( i = 0; psHostEnt->h_addr_list[i] != 0 && lIPAddrsNum < 20; i++ )
    {
        IPAddrs[lIPAddrsNum++] = *((struct in_addr*)psHostEnt->h_addr_list[i]);
    }


    // Try connection to the SMTP server(s) 
    for ( i = 0; i < lIPAddrsNum; i++ )
    {
        if ( (bRetStatus = ConnectSmtp(IPAddrs[i])) ) break;  // on success exit loop
    }

RET:
    return bRetStatus;
}



long CMTMailImp::ConnectSmtp (const struct in_addr &IPAddr)
{
    long        lStatus;
    long        bRetStatus = true;
    char        zBuffer[255];
    long        lBytes;



    struct sockaddr_in  sSockAddr;

#if defined(_WIN32)
    strncpy (mServerIP, inet_ntoa(IPAddr), sizeof(mServerIP)); // format the IP address to an ascii string
    mServerIP[sizeof(mServerIP)-1] = '\0';
#endif


    
    // make sure there isn't a socket already open
    if ( mSock != 0 ) CloseSmtp();
    
    // Open a new socket
    if ( (mSock = socket (AF_INET, SOCK_STREAM, IPPROTO_TCP)) == -1 )
    {
        char     zBuffer[255];
        mStatusCode = WSAGetLastError();
        sprintf (zBuffer, "Error calling 'socket'  <%d>", mStatusCode);
        SetStatusText (zBuffer);

        bRetStatus = false;
        mSock = 0;
        goto RET;
    }
    
    // Connect to the socket
    
    sSockAddr.sin_family = 2; // psHostEnt->h_addrtype;
    sSockAddr.sin_port = htons (25);
    sSockAddr.sin_addr = IPAddr;
    lStatus = connect (mSock,
                       (struct sockaddr*)&sSockAddr,
                       sizeof(sSockAddr));

    if ( lStatus == -1 )
    {
        char     zBuffer[255];
        mStatusCode = WSAGetLastError();
        sprintf (zBuffer, "Error calling 'connect' <%d>", mStatusCode);
        SetStatusText (zBuffer);

        CloseSmtp();    // make sure the socket gets closed

        bRetStatus = false;
        goto RET;
    }


    
    // Receive the initial welcome message
    lBytes = RecvTcp (zBuffer, sizeof(zBuffer));

    if ( lBytes == 0 )
    {
        char     zBuffer[255];
        mStatusCode = WSAGetLastError();
        sprintf (zBuffer, "Error receiving welcome message on TCP Recv <%d> [%s]", mStatusCode, mServerIP);
        SetStatusText (zBuffer);

        CloseSmtp();    // make sure socket gets closed
        bRetStatus = false;
        goto RET;
    }

    mStatusCode = atoi (zBuffer);
    SetStatusText (zBuffer);

    if ( mStatusCode != 220 )
    {
        CloseSmtp();    // make sure socket gets closed
        bRetStatus = false;
        goto RET;
    }

    
    // Send HELO
    sprintf (zBuffer, "HELO %s\r\n", mLocalHostName);
    SendTcp (zBuffer);
    lBytes = RecvTcp (zBuffer, sizeof(zBuffer));

    if ( lBytes == 0 )
    {
        char     zBuffer[255];
        mStatusCode = WSAGetLastError();
        sprintf (zBuffer, "Error receiving HELO response on TCP Recv <%d> [%s]", mStatusCode, mServerIP);
        SetStatusText (zBuffer);

        CloseSmtp();    // make sure socket gets closed
        bRetStatus = false;
        goto RET;
    }

    mStatusCode = atoi (zBuffer);
    SetStatusText (zBuffer);

    if ( mStatusCode != 250 )
    {
        CloseSmtp();    // make sure the socket gets closed
        bRetStatus = false;
        goto RET;
    }

RET:
    return  bRetStatus;
}
/****************************************************************************************
**
** CMTMailImp::SendSmtp
**
** Purpose: Sends an email using the SMTP protocol
**
** Returns: Boolean true or false.
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::SendSmtp()
{
    long            lRetStatus = 1;
    long            bText8Bit = false;
    wchar_t         *pwTempAddrList = NULL;
    long            lStatus = false;

    // Initialize member variables

    mBoundaryStr[0] = '\0';
    if ( mInvalidRecipients != NULL ) mInvalidRecipients[0] = L'\0';

    mbMultiPart = false;


    // If both text and and an attachment was given then multipart
    if ( ( (mText != NULL && wcslen(mText) > 0) || (mTextFile != NULL && wcslen(mTextFile) > 0) ) &&
         ( (mAttachment != NULL && wcslen(mAttachment) > 0) || (mCalendar != NULL && wcslen(mCalendar) > 0) )  )
    {
        mbMultiPart = true;
    }
          
    // If if more than one attachment is to be sent.
    if ( mAttachment != NULL && 
            ( wcschr(mAttachment, L',') != NULL ||
              wcschr(mAttachment, L';') != NULL ) )
    {
        mbMultiPart = true;
    }

    // check if there are any 8-bit characters in the text message so we know what charset to use

    bText8Bit = hrIs8Bit(mText, mTextFile);
    
    // Set the FROM name and send it to the SMTP server
    
    if ( !SendFrom() )
    {
        lRetStatus = 0;
        goto RET;
    }
   

    // clean up the lists and load any dist lists

    hrSet (&pwTempAddrList, L"");
    hrParseList (&pwTempAddrList, mToList);
    hrSet (&mToList, pwTempAddrList);

    hrSet (&pwTempAddrList, L"");
    hrParseList (&pwTempAddrList, mCCList);
    hrSet (&mCCList, pwTempAddrList);

    hrSet (&pwTempAddrList, L"");
    hrParseList (&pwTempAddrList, mBCCList);
    hrSet (&mBCCList, pwTempAddrList);


    // Send each of the recipient lists
    lStatus =  SendRcptList(mToList);
    lStatus |= SendRcptList(mCCList);
    lStatus |= SendRcptList(mBCCList);


    // Make sure there was at least one valid recipient
    if ( !lStatus )
    {
        // There were no valid addresses
        char    zError[255];
        sprintf (zError, "503 No valid recipients [%s]", mServerIP); 
        SetStatusText (zError);
        mStatusCode = 503;
        lRetStatus = -1; // Failed but don't try another server
        goto RET;
    }

    // Tell the SMTP server we're starting to send data and generate the SMTP headers
    if ( !SendData(bText8Bit) )
    {
        lRetStatus = 0;
        goto RET;
    }

    // Add the Text to the message
    if ( !SendText() )
    {
       lRetStatus = 0;
       goto RET;
    }
    
    // Add the Text File to the message (if any)
    
    if ( !SendTextFile () )
    {
        lRetStatus = 0;
        goto RET;
    }

    // add each of the attachments to the message

    if ( !SendAttachment() )
    {
        lRetStatus = 0;
        goto RET;
    }

    if ( !SendCalendar() )
    {
        lRetStatus = 0;
        goto RET;
    }
    
    // Tell the SMTP server to finish sending the message
    
    if ( !SendEOM() )
    {
        lRetStatus = 0;
        goto RET;
    }

RET:    
    if ( pwTempAddrList != NULL ) delete pwTempAddrList;

    return lRetStatus;
}

/****************************************************************************************
**
** CMTMailImp::CloseSmtp
**
** Purpose: Close the SMTP connection. Send the QUIT command to tell the
**          server we're disconnecting
**
** Returns: Boolean true or false.
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::CloseSmtp (void)
{
    if ( mSock != 0 )
    {
        SendTcp("QUIT\n");
#if defined (_WIN32)
        closesocket (mSock);
#else
        close (mSock);
#endif
        mSock = 0;
    }
    return true;
}
/****************************************************************************************
**
** CMTMailImp::RecvTcp
**
** Purpose: Receive a line of text from the TCP/IP socket. Since TCP is stream
**          oriented we may not get an entire response with one read. This routine
**          keeps reading until the carriage return is found.
**
** Returns: Number of bytes read
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::RecvTcp (char        *pzBuffer,
                          const long  lBufferSize)
{
    long            lStatus;
    long            lMsgLen = 0;
    long            bEol = false;
    struct timeval  sTimeout = {0,0};
    fd_set          sRmask;
    long            lNumBytes;
    char            *pzPtr = NULL;

    const long      TIMEOUT = 60;
    const long      MAX_LOOPS = 1000;

    time_t          lTime = time(NULL);
    long            lLoopCnt = 0;
    

    while ( !bEol &&
            lMsgLen < lBufferSize-1 &&
            time(NULL)-lTime <= TIMEOUT &&      // check the timer on each loop just in case
            lLoopCnt < MAX_LOOPS )              // detect an infinite loop situation before timeout 
    {                                           //   the loop count should rarely be more than 1
        lLoopCnt++;

        sTimeout.tv_sec = TIMEOUT;

        FD_ZERO (&sRmask);
        FD_SET (mSock, &sRmask);

        // wait for data sent to us
        lStatus = select (mSock+1, &sRmask, 0, 0, &sTimeout);

        if ( lStatus <= 0 )
        {
            WSASetLastError (WSAETIMEDOUT);
            pzBuffer[0] = '\0';
            lMsgLen = -1;
            goto RET;
        }

        // read the data sent to us
        lNumBytes = recv (mSock, &pzBuffer[lMsgLen], lBufferSize-lMsgLen-1, 0);

        if ( lNumBytes == -1 )
        {
            pzBuffer[0] = '\0';
            lMsgLen = -1;
            goto RET;
        }

        // Add this data to what we've received so far
        lMsgLen += lNumBytes;
        pzBuffer[lMsgLen] = '\0';

        
        // check to see if we got the entire line, if not read some more
        if ( (pzPtr = strchr (pzBuffer, '\r')) != NULL )
        {
            bEol = true;
            *pzPtr = '\0';
        }
    }

    // check to see if we timed out 
    if ( (!bEol && time(NULL)-lTime > TIMEOUT) ||
         lLoopCnt > MAX_LOOPS )
    {
        WSASetLastError (WSAETIMEDOUT);
        pzBuffer[0] = '\0';
        lMsgLen = -1;
        goto RET;
    }

RET:
    return strlen(pzBuffer);
}
long CMTMailImp::SendTcp (const char *sBuffer)
{
    return send(mSock, sBuffer, strlen(sBuffer), 0);
}
/****************************************************************************************
**
** CMTMailImp::SubjectHeader
**
** Purpose: Build and send the "Subject" line of the message header
**
** Returns: Nothing
**
** History: 18-Feb-2002 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
void CMTMailImp::SendSubjectHeader()
{
    char    zLine[1001] = "Subject: ";
    long    bIs8Bit = false;
    char    zTemp[980];

    // check if there are any non-ASCII characters (unicode), if so we'll need to convert to UTF-8
    long len = wcslen(mSubject);
    for ( long idx = 0; idx <= len; idx++ )
    {
        if ( mSubject[idx] >= 0x80 ) 
        {
            bIs8Bit = true;
            break;
        }
    }

    if ( !bIs8Bit ) // No 8 bit characters (all ASCII)
    {
        // convert the line to a multibyte string and send it
        hrWcsToMbs (zTemp, sizeof(zTemp), mSubject);

        strncpy (&zLine[9], zTemp, sizeof(zLine)-11);
        zLine[sizeof(zLine)-12] = '\0';
        strcat (zLine, "\r\n");
        SendTcp (zLine);
    }
    else
    {
        char        *ptr = NULL;
        char        *pzSubject = NULL;

        // first Convert the subject to the specified charset
        hrWcsToCharset (&pzSubject, mSubject, mCharset);

        // The utf-8 version of the subject line will need to be converted to
        // base 64. If the subject is too long it will need to be broken apart 
        // into seperate lines. Each line can only be 76 characters so we need 
        // to limit each line to 39 utf-8 characters to allow for the base64 
        // expansion and for the rest of the header characters.

        ptr = pzSubject;

        while ( strlen(ptr) > 0 )
        {
            if ( mCharset == NULL || 
                 strlen(mCharset) == 0 ||
                 strcmp(mCharset, "utf-8") == 0 )
            {
                strcat (zLine, "=?utf-8?B?"); // specify the subject will be utf-8 base64 encoded
            }
            else if ( mCharset != NULL && strcmp(mCharset, "iso-2022-jp") == 0 )
            {
                strcat (zLine, "=?iso-2022-jp?B?"); // jpf - need to get correct format
            }



            if ( strlen(ptr) > 39 )
            {
                Base64Line (&zLine[strlen(zLine)], (unsigned char*)ptr, 39);
                ptr += 39;
            }
            else
            {
                Base64Line (&zLine[strlen(zLine)], (unsigned char*)ptr, strlen(ptr));
                ptr += strlen(ptr);
            }

            strcat (zLine, "?=\r\n");
            SendTcp (zLine);

            strcpy (zLine, " "); // for a continuation line (if needed)
        }

        if ( pzSubject != NULL ) delete pzSubject;
    }
}
/****************************************************************************************
**
** CMTMailImp::RcptListHeader
**
** Purpose: Build and send the "To" or "CC" line of the message header
**
** Returns: Boolean true or false.
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::SendRcptListHeader ( const char *pzLabel,
                                      const wchar_t *pwRcptList)
{
    long        bRetStatus = true;
    char        zLine[100];
    wchar_t     wAddr[512];
    char        zAddr[512];
    unsigned long lAddrLen;
    const wchar_t  *pwPtr = NULL;

    if ( pzLabel == NULL || strlen(pzLabel) == 0 ) goto RET;
    if ( pwRcptList == NULL ) goto RET;

    strcpy(zLine, pzLabel); // Add the label to the first line
    
    // Parse out each address and build an 80 character line. The first line
    // will append the provided label to the beginning. The rest of the lines
    // will begin with a space.

    pwPtr = pwRcptList;

    while ( pwPtr != NULL && *pwPtr != L'\0' )
    {
        // scan for next comma

        lAddrLen = wcscspn(pwPtr, L",");

        if ( lAddrLen > sizeof(wAddr)/sizeof(wchar_t) ) 
            lAddrLen = sizeof(wAddr)/sizeof(wchar_t);


        // copy the address

        wcsncpy (wAddr, pwPtr, lAddrLen);
        wAddr[lAddrLen] = L'\0';

        
        pwPtr += lAddrLen;       // move the pointer to the comma 

        if ( *pwPtr == L',' )        // if this is not the end of the list then add a comma to the address
        {
            wcscat (wAddr, L","); 
            pwPtr++;                // move past the comma
        }

        
        // If we've run out of room on this line or we hit the end of
        // the list, send the line.
        
        if ( strlen(zLine)+wcslen(wAddr) >= 80 )
        {
            strcat (zLine, "\r\n");
            SendTcp (zLine);

            strcpy (zLine, " ");  // add a space to the beginning of the line to denote a continuation
        }

        hrWcsToMbs(zAddr, sizeof(zAddr), wAddr);
        strcat (zLine, zAddr);
    }

    strcat (zLine, "\r\n");
    SendTcp (zLine);

RET:
    return bRetStatus;
}


/****************************************************************************************
**
**CMTMailImp::From
**
** Purpose: Send the FROM parameter to the SMTP server
**
** Returns: Boolean true or false.
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::SendFrom ()
{
    long        bRetStatus = true;
    char        zBuffer[255];
    char        zFrom[255];
    char        *ptr = NULL;
    long        lBytes;
  
    
    // If 'from' was not provided default to logged in user
    
    if ( mFrom == NULL || wcslen(mFrom) == 0 )
    {
        hrSet (&mFrom, mUsername);
        hrAppend (&mFrom, "@");
        hrAppend (&mFrom, mDefaultDomainName);
    }

    // Build a "from" name we can use on the SMTP "MAIL FROM:" command (must be single-byte)
    hrWcsToMbs (zFrom, sizeof(zFrom), mFrom);

    // If the "from" address was sent in the form "First Last <username@micron.com>"
    // parse out the actual SMTP address

    if ( (ptr = strchr(zFrom, '<')) != NULL )
    {
        strcpy (zFrom, ptr+1);

        if ( (ptr = strchr(zFrom, '>')) != NULL ) *ptr = '\0';
    }

    // remove any carriage control characters

    if ( (ptr = strchr(zFrom, '\n')) != NULL )   *ptr = '\0';
    if ( (ptr = strchr(zFrom, '\r')) != NULL )   *ptr = '\0';

    // remove any trailing whitespace

    while ( strlen(zFrom) > 0  && 
            ( zFrom[strlen(zFrom)-1] == L' ' ||
              zFrom[strlen(zFrom)-1] == L'\t') )     
    {
        zFrom[strlen(zFrom)-1] = L'\0';
    }

    // add the default domain name if it's missing

    if ( strchr(zFrom, '@') == NULL &&
         strlen(mDefaultDomainName) > 0 )
    {
        strcat (zFrom, "@");
        strcat (zFrom, mDefaultDomainName);
    }
    
    // Send the FROM name
    
    sprintf (zBuffer, "MAIL FROM: %s\r\n", zFrom);
    SendTcp (zBuffer);
    lBytes = RecvTcp (zBuffer, sizeof(zBuffer));

    if ( lBytes == 0 )
    {
        char     zBuffer[255];
        sprintf (zBuffer, "Error receiving 'MAIL FROM' response on TCP Recv <%d> [%s]", WSAGetLastError(), mServerIP);
        SetStatusText (zBuffer);
        bRetStatus = false;
    }

    SetStatusText (zBuffer);
    mStatusCode = atoi (zBuffer);

    if ( mStatusCode < 100 ||
         mStatusCode >= 400 )
    {
        bRetStatus = false;
        goto RET;
    }

RET:
    return bRetStatus;
}
/****************************************************************************************
**
** CMTMailImp::Data
**
** Purpose: Send the DATA command to the SMTP server. Build and send the SMTP
**          message header.
**
** Returns: Boolean true or false.
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::SendData (const long bText8Bit)
{
    long        bRetStatus = true;
    char        zBuffer[255];
    char        zDateTime[20];
    char        zMillitm[4];
    char        zSmtpDateTime[50];
    char        zTimeZone[20];
    char        zTemp[512];

    struct      tm res;
    struct      tm *tmval = NULL;

    long        lBytes;

    memset(&res, 0, sizeof(res));



#if defined (_WIN32)
    struct _timeb   sTime;

    const char *days[7] = {"Sun","Mon","Tue","Wed","Thu","Fri","Sat"};
    const char *months[12] = {"Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"};
#else
    struct timeb    sTime;
#endif
    

    // Send the DATA command to the SMTP server which tells it we're
    // starting to send the actual message.
    
    SendTcp ("DATA\r\n");
    lBytes = RecvTcp (zBuffer, sizeof(zBuffer));

    if ( lBytes == 0 )
    {
        char    zBuffer[255];
        mStatusCode = WSAGetLastError();
        sprintf (zBuffer, "Error sending 'DATA'  <%d> [%s]", mStatusCode, mServerIP);
        SetStatusText (zBuffer);
    }

    SetStatusText (zBuffer);
    mStatusCode = atoi (zBuffer);

    if ( mStatusCode != 354 )
    {
        bRetStatus = false;
        goto RET;
    }

    
    // Get the current time
#if defined (_WIN32)
    _ftime(&sTime);
#else
    ftime(&sTime);
#endif


    // get the tm structure for the local time
#if defined(__VMS) || defined(unix)
    tmval = localtime_r(&(sTime.time), &res);
#else
    tmval = localtime(&(sTime.time));
#endif

    // format the time stamp for the SMTP Date header line

    // Get the time zone offset from GMT to add to the "Date" line
#if defined (_WIN32)

	

    sprintf (zSmtpDateTime, "%s, %d %s %d %02d:%02d:%02d ", days[tmval->tm_wday], tmval->tm_mday, 
        months[tmval->tm_mon], tmval->tm_year+1900, 
        tmval->tm_hour, tmval->tm_min, tmval->tm_sec);

    sprintf (zTimeZone, "%+2.2d00", -(sTime.timezone/60)+sTime.dstflag);
    
#elif defined (unix) || defined(__xlC__)

    strftime (zSmtpDateTime,
              sizeof(zSmtpDateTime),
              "%a, %d %b %Y %H:%M:%S ",
              tmval);
    
    sprintf (zTimeZone, "%+2.2d00", -(sTime.timezone/60)+tmval->tm_isdst);
    
#elif defined(__VMS)
    {
        char *pzTZ = getenv ("TCPWARE_TIMEZONE");
        strncpy (zTimeZone, pzTZ, 5);
        zTimeZone[5] = '\0';
    }
#endif


    strncat (zSmtpDateTime, zTimeZone, sizeof(zSmtpDateTime)-strlen(zSmtpDateTime));
    zSmtpDateTime[sizeof(zSmtpDateTime)-1] = '\0';


    // build time stamp to use on Message-ID
#if defined (_WIN32)
    sprintf (zDateTime, "%d%02d%02d%02d%02d%02d", tmval->tm_year+1900, tmval->tm_mon+1, tmval->tm_mday,
        tmval->tm_hour, tmval->tm_min, tmval->tm_sec);
#else
    strftime (zDateTime,
              sizeof(zDateTime),
              "%Y%m%d%H%M%S",
              tmval);
#endif
    


    // Get milli-seconds to add to the time stamp to ensure a unique message-ID
    sprintf (zMillitm, "%03d", sTime.millitm);  
    strcat (zDateTime, zMillitm);

    
    // Build the boundry string to be used for mime headers
    strcpy (mBoundaryStr, "--Boundary-");
    strcat (mBoundaryStr, zDateTime);
    strcat (mBoundaryStr, "--");

    
    // Build SMTP the header (order here is important for some gateways and clients)

    hrWcsToMbs(zTemp, sizeof(zTemp), mFrom);

    // add the default domain name if it's missing

    if ( strchr(zTemp, '@') == NULL &&
         strlen(mDefaultDomainName) > 0 )
    {
        strcat (zTemp, "@");
        strcat (zTemp, mDefaultDomainName);
    }

    sprintf (zBuffer, "From: %s\r\n", zTemp);
    SendTcp (zBuffer);


#if defined (_WIN32)
    sprintf (zBuffer, "Message-ID: <%s.%x@%s>\r\n", zDateTime, GetCurrentThreadId(), mLocalHostName);
    SendTcp (zBuffer);
#else
    sprintf (zBuffer, "Message-ID: <%s.%x@%s>\r\n", zDateTime, getpid(), mLocalHostName);
    SendTcp (zBuffer);
#endif


    sprintf (zBuffer, "X-Sender: %s@%s\r\n", mUsername, mLocalHostName);
    SendTcp (zBuffer);

    // Get the executable name of the calling program 
    if ( strlen(hrGetExecName()) > 0 )
    {
        sprintf (zBuffer, "X-Application: %s\r\n", hrGetExecName());
        SendTcp (zBuffer);
    }


    



    sprintf (zBuffer, "Date: %s\r\n", zSmtpDateTime);
    SendTcp (zBuffer);

    SendSubjectHeader ();

    if ( mToList != NULL && wcslen(mToList) > 0 )
  	{
	    SendRcptListHeader ("To: ", mToList); 
    }

    if ( mCCList != NULL && wcslen(mCCList) > 0 )
  	{
    	SendRcptListHeader ("CC: ", mCCList);
   	}

    SendTcp ("MIME-Version: 1.0\r\n");

#if defined (_WIN32)
    sprintf (zBuffer, "X-Mailer: MTMail DLL (WIN32) %s\r\n", gRevisionString);
#elif defined(__VMS)
    sprintf (zBuffer, "X-Mailer: MTMail RTL (VMS) %s\r\n", gRevisionString);
#elif defined (unix) || defined(__xlC__)
    sprintf (zBuffer, "X-Mailer: MTMail lib (unix) %s\r\n", gRevisionString);
#endif
    SendTcp (zBuffer);

    if ( mConfidential )
	{
		SendTcp ("Sensitivity: Company-Confidential\r\n");
	}

	if ( mPrivate )
	{
		SendTcp ("Sensitivity: Private\r\n");
	}

    // check if this will be a multipart message


    if ( mCalendar != NULL && wcslen(mCalendar) > 0 )
    {
        sprintf (zBuffer, "Content-Class: urn:content-classes:calendarmessage\r\n");
        SendTcp (zBuffer);
        sprintf (zBuffer, "Content-Type: multipart/alternative; boundary=\"%s\"\r\n", mBoundaryStr);
        SendTcp (zBuffer);
        SendTcp ("\r\n"); // end of main SMTP header
    }
    else if ( mbMultiPart )
    {
        sprintf (zBuffer, "Content-Type: multipart/mixed; boundary=\"%s\"\r\n", mBoundaryStr);
        SendTcp (zBuffer);
        SendTcp ("\r\n"); // end of main SMTP header
    }
    else if ( mAttachment == NULL || wcslen(mAttachment) == 0 ) // attachment will add this later
    {
        char    zCharSet[20] = "us-ascii";
        if ( bText8Bit ) strcpy (zCharSet, mCharset);
         
        char   zText[10] = "plain";
        if ( mHTML ) strcpy (zText, "html");

        sprintf (zBuffer, "Content-Type: text/%s; charset=\"%s\"\r\n", zText, zCharSet);
        SendTcp (zBuffer);
        SendTcp ("\r\n"); // end of main SMTP header
    }


    // write out the header lines for the message part
    if ( mbMultiPart &&
         ( (mText != NULL && wcslen(mText) > 0) || 
           (mTextFile != NULL && wcslen(mTextFile) > 0) ) )
    {
        char    zBuffer[255];
        char    zCharSet[20] = "us-ascii";
        if ( bText8Bit )  strcpy (zCharSet, mCharset);

        char    zText[10] = "plain";
        if ( mHTML ) strcpy (zText, "html");

        sprintf (zBuffer, "\r\n--%s\r\n", mBoundaryStr);
        SendTcp (zBuffer);

        sprintf (zBuffer, "Content-type: text/%s; charset=\"%s\"\r\n", zText, zCharSet);
        SendTcp (zBuffer);

        SendTcp ("\r\n");
    }

RET:
    return bRetStatus;
}
/****************************************************************************************
**
** CMTMailImp::TextLine
**
** Purpose: Send a line of the text message to the SMTP server.
**
** Returns: Boolean true or false.
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::SendTextLine ( const char *sLine )
{
    long            lStatus;
    long            bRetStatus = true;

    if ( sLine == NULL )    goto RET;
    
    // If the first character is a dot need to send an extra one
    if ( strlen(sLine) > 0 && sLine[0] == '.') lStatus = SendTcp (".");

    // Send the line of text
    lStatus = SendTcp (sLine);

    lStatus = SendTcp ("\r\n");

    if ( lStatus <= 0 )
    {
        char     zBuffer[255];
        mStatusCode = WSAGetLastError();
        sprintf (zBuffer, "Error on TCP send <%d> [%s]", mStatusCode, mServerIP);
        SetStatusText (zBuffer);

        bRetStatus = false;
        goto RET;
    }

RET:
    return bRetStatus;
}


/****************************************************************************************
**
** CMTMailImp::Text
**
** Purpose: Accepts a 'newline' delimited string and sends a line at a
**          time to ::TextLine
**
** Returns: Boolean true or false.
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::SendText ()
{
    long            bRetStatus = true;
    wchar_t         wLine[1001];
    unsigned long   lLineLen;
    wchar_t         wLastTerm = L'\0';
    char            *pzText = NULL;

    const wchar_t   *pwPtr = mText; // set pointer at beginning of text
    
    if ( mText == NULL || wcslen(mText) == 0 )    goto RET;
  
    // Parse out each line of text, convert it to utf-8 and pass it into 
    // ::TextLine

    while ( pwPtr != NULL && *pwPtr != L'\0' )
    {
        wLine[0] = L'\0';

        lLineLen = wcscspn(pwPtr, L"\n\r");

        if ( lLineLen > sizeof(wLine)/sizeof(wchar_t) ) 
            lLineLen = sizeof(wLine)/sizeof(wchar_t)-1;

        wcsncpy(wLine, pwPtr, lLineLen);
        wLine[lLineLen] = L'\0';

        pwPtr += lLineLen;  // move the pointer to the delimiter


        // Check if '\r\n' or '\n\r' was used as a line terminator.  
        // If so make sure we don't add an extra line.

        if ( wLastTerm == L'\0' ||
             wLastTerm == *pwPtr || 
             lLineLen > 0 )
        {
            // convert this line to the specified charset
            hrWcsToCharset (&pzText, wLine, mCharset);

            // send the line of text to the mail gateway

            if ( !SendTextLine (pzText) )
            {
                bRetStatus = false;
                goto RET;
            }

            delete pzText;
            pzText = NULL;

            wLastTerm = *pwPtr;  // Save the line terminator used
        }
        else    // current term must not be equal to last term and line length was zero
        {
            wLastTerm = L'\0';  // force next terminator to line break
        }

        if ( *pwPtr != L'\0' ) pwPtr++; // move past the delimiter
    }

RET:
    if ( pzText != NULL ) delete pzText;

    return bRetStatus;
}
/****************************************************************************************
**
** CMTMailImp::TextFile
**
** Purpose: Open a text file, read each line of the file and pass them into
**          ::TextLine
**
** Returns: Boolean true or false.
**
** History: 8-Apr-1998 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::SendTextFile()
{
    long            bRetStatus = true;
    FILE            *fpFile = NULL;
    
    char            ch[3] = {0,0,0};
//    long            lch = 0;
    char            *pzLine = NULL;
    
    static long BOM_UNKNOWN  = 0;
    static long BOM_EF_BB_BF = 1;
    static long BOM_FE_FF    = 2;
    static long BOM_FF_FE    = 3;

    long            lFileType = BOM_UNKNOWN;
    long            bText8Bit = false;

    if ( mTextFile == NULL || wcslen(mTextFile) == 0 ) goto RET;


#if defined(__VMS)

    // convert the filename to narrow characters
    char            zFilename[1000];
    hrWcsToMbs (zFilename, sizeof(zFilename), mTextFile);
    zFilename[sizeof(zFilename)-1] = '\0';
    fpFile = fopen (zFilename, "r");

#elif defined (unix) || defined(__xlC__)

    // convert the filename to narrow characters
    char            zFilename[1000];
    hrWcsToMbs (zFilename, sizeof(zFilename), mTextFile);
    zFilename[sizeof(zFilename)-1] = '\0';
    fpFile = fopen (zFilename, "r");

#elif defined (_WIN32)

    fpFile = _wfopen (mTextFile, L"rb");

#endif

    if ( fpFile == NULL )
    {
        mStatusCode = 8;
        SetStatusText (L"Unable to open file");

        bRetStatus = false;
        goto RET;
    }

    // read the first two bytes of the file to get a possible Byte Order Mark (BOM)

    if ( !feof(fpFile) ) ch[0] = fgetc(fpFile);
    if ( !feof(fpFile) ) ch[1] = fgetc(fpFile);

    if ( ch[0] == (char)0xfe && 
         ch[1] == (char)0xff ) // UTF-16/UCS-2, little endian
    {
        lFileType = BOM_FE_FF;
        bText8Bit = true;
    }
    else if ( ch[0] == (char)0xff && 
              ch[1] == (char)0xfe ) // UTF-16/UCS-2, big endian
    {
        lFileType = BOM_FF_FE;
        bText8Bit = true;
    }
    else // not UCS-2
    {
        // read one more byte to see if it's UTF-8
        if ( !feof(fpFile) ) ch[2] = fgetc(fpFile);

        if ( ch[0] == (char)0xef && 
             ch[1] == (char)0xbb && 
             ch[2] == (char)0xbf ) // UTF-8
        {
            lFileType = BOM_EF_BB_BF;
            bText8Bit = true;
        }
        else // must be an ASCII file
        {
            rewind (fpFile); // rewind the file back to the beginning
        }
    }


    // read the file in according to the file type from the byte order mark (if any)

    if ( lFileType == BOM_FE_FF ||      // File is USC-2
         lFileType == BOM_FF_FE )
    {
        // read each line of text and send it to the smtp gateway

        wchar_t     wLine[1001];

        while ( fgetws (wLine, sizeof(wLine)/sizeof(wchar_t), fpFile) )
        {
            // remove carriage return and/or newline
            if ( wcslen(wLine) > 0 && wLine[wcslen(wLine)-1] == L'\n' ) 
                wLine[wcslen(wLine)-1] = L'\0'; 
            if ( wcslen(wLine) > 0 && wLine[wcslen(wLine)-1] == L'\r' ) 
                wLine[wcslen(wLine)-1] = L'\0'; 

            // check if we need to reverse the byte order
            if ( lFileType == BOM_FE_FF )
            {
                long lLineLen = wcslen(wLine);
                for ( long idx = 0; idx < lLineLen; idx++ )
                {
                    char    zTmp[2];
                    char    c;
                    memcpy (zTmp, (void*)&wLine[idx], 2);

                    c = zTmp[0];
                    zTmp[0] = zTmp[1];
                    zTmp[1] = c;

                    memcpy ((void*)&wLine[idx], zTmp, 2);
                }
            }

            // convert the line to the specified charset
            hrWcsToCharset (&pzLine, wLine, mCharset);

            if ( !SendTextLine (pzLine) )
            {
                bRetStatus = false;
                goto RET;
            }
        }
    }
    else if ( lFileType == BOM_EF_BB_BF ||      // file is utf-8 or ascii
              lFileType == BOM_UNKNOWN )
    {
        char    zLine[1001];
        
        while ( fgets (zLine, sizeof(zLine), fpFile) )
        {
            // remove carriage return and/or newline
            if ( strlen(zLine) > 0 && zLine[strlen(zLine)-1] == '\n' ) 
                zLine[strlen(zLine)-1] = '\0'; // remove newline
            if ( strlen(zLine) > 0 && zLine[strlen(zLine)-1] == '\r' ) 
                zLine[strlen(zLine)-1] = '\0'; // remove newline

            // Send the line
            if ( !SendTextLine (zLine) )
            {
                bRetStatus = false;
                goto RET;
            }
        }
    }

RET:
    if ( fpFile != NULL ) fclose (fpFile);
    if ( pzLine != NULL ) delete pzLine;

    return bRetStatus;
}
/****************************************************************************************
**
** CMTMailImp::SendAttachment
**
** Purpose: Build a mime attachment header and encode the specified file
**          into base64.
**
** Returns: Boolean true or false.
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::SendAttachment()
{
    long            bRetStatus = true;
    char            zBuffer[1001];
    const wchar_t   *pwFilenamePtr = NULL;
    wchar_t         *pwTempFilename = NULL;
    long            lFilenameLen;
    wchar_t         *pwPtr = NULL;
    FILE            *fpFile = NULL;

  
    if ( mAttachment == NULL || wcslen(mAttachment) == 0 )  goto RET;

    pwFilenamePtr = mAttachment;

    while ( pwFilenamePtr != NULL && wcslen(pwFilenamePtr) > 0 )
    {
        lFilenameLen = wcscspn(pwFilenamePtr, L",;");    // find the first occurance of one of these delimiters

        pwTempFilename = new wchar_t[lFilenameLen+1];

        wcsncpy (pwTempFilename, pwFilenamePtr, lFilenameLen);
        pwTempFilename[lFilenameLen] = L'\0';

    
        // Open the file.

#if defined(__VMS)

        char            zTempFilename[1000];
        hrWcsToMbs (zTempFilename, sizeof(zTempFilename), pwTempFilename);
        zTempFilename[sizeof(zTempFilename)-1] = '\0';

        fpFile = fopen (zTempFilename, "rb", "rfm=fix", "mrs=512", "ctx=stm");

#elif defined (unix) || defined(__xlC__)

        char            zTempFilename[1000];
        hrWcsToMbs (zTempFilename, sizeof(zTempFilename), pwTempFilename);
        zTempFilename[sizeof(zTempFilename)-1] = '\0';

        fpFile = fopen (zTempFilename, "rb");

#elif defined (_WIN32)

        fpFile = _wfopen (pwTempFilename, L"rb");

#endif

        if ( fpFile == NULL )
        {
            mStatusCode = 8;
            SetStatusText (L"Unable to open file");

            bRetStatus = false;
            goto RET;
        }

    
        // Remove the path name from the filename to add to the mime header
    
#if defined (_WIN32)

        while ( (pwPtr = wcschr (pwTempFilename, L'\\')) != NULL )
        {
            wcscpy (pwTempFilename, pwPtr+1);
        }

#elif defined (unix) || defined(__xlC__)

        while ( (pwPtr = wcschr (pwTempFilename, L'/')) != NULL )
        {
            wcscpy (pwTempFilename, pwPtr+1);
        }

#elif defined(__VMS)

        while ( (pwPtr = wcschr(pwTempFilename, L']')) != NULL )
        {
            wcscpy (pwTempFilename, pwPtr+1);
        }

        if ((pwPtr = wcschr (pwTempFilename, L':')) != NULL )
        {
            wcscpy (pwTempFilename, pwPtr+1);
        }

        if ((pwPtr = wcschr (pwTempFilename, L';')) != NULL ) *pwPtr = L'\0';

#endif


    
        // Build the MIME header for this attachment
    
        if ( mbMultiPart )
        {
            sprintf (zBuffer, "\r\n--%s\r\n", mBoundaryStr);
            SendTcp (zBuffer);
        }

        SendContentType(pwTempFilename);

        sprintf (zBuffer, "Content-Transfer-Encoding: base64\r\n");
        SendTcp (zBuffer);

        SendContentDisposition(pwTempFilename);

        SendTcp ("\r\n");


        // Perform the base64 encoding on the file and include it into the message
    
        if ( !Base64 (fpFile) )
        {
            bRetStatus = false;
            goto RET;
        }

        // free the memory for the Temp filename buffer

        if ( pwTempFilename != NULL ) delete pwTempFilename;
        pwTempFilename = NULL;

        // move past the delimiter

        pwFilenamePtr += lFilenameLen;
        if ( pwFilenamePtr[0] != L'\0' ) pwFilenamePtr++;
    }

RET:
    if ( fpFile != NULL ) fclose (fpFile);
    if ( pwTempFilename != NULL ) delete pwTempFilename;

    return bRetStatus;
}
/****************************************************************************************
**
** CMTMailImp::SendCalendar
**
** Purpose: Build a mime attachment header and include the iCalendar text
**
** Returns: Boolean true or false.
**
** History: 16-Mar-2004 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::SendCalendar()
{
    long            bRetStatus = true;
    char            zBuffer[1001];
    wchar_t         wMethod[20];
    wchar_t         wLine[1001];
    unsigned long   lLineLen;
    wchar_t         wLastTerm = L'\0';
    char            *pzText = NULL;
    wchar_t         *pwPtr = NULL; 
  
    if ( mCalendar == NULL || wcslen(mCalendar) == 0 )  goto RET;


    // Parse the "METHOD" from the iCalendar text

    if ( (pwPtr = (wchar_t*)wcsstr((const wchar_t*)mCalendar, L"METHOD:")) != NULL )
    {
        wcsncpy(wMethod, &pwPtr[7], sizeof(wMethod)/sizeof(wchar_t));
        wMethod[sizeof(wMethod)/sizeof(wchar_t)-1] = L'\0';

        if ( (pwPtr = wcschr(wMethod, L'\n')) != NULL ) *pwPtr = L'\0';
        if ( (pwPtr = wcschr(wMethod, L'\r')) != NULL ) *pwPtr = L'\0';
    }


    
    // Build the MIME header for this attachment

    if ( mbMultiPart )
    {
        sprintf (zBuffer, "\r\n--%s\r\n", mBoundaryStr);
        SendTcp (zBuffer);
    }

    sprintf (zBuffer, "Content-Class: urn:content-classes:calendarmessage\r\n");
    SendTcp (zBuffer);
    sprintf (zBuffer, "Content-Type: text/calendar;\r\n");
    SendTcp (zBuffer);
    sprintf (zBuffer, "\tmethod=%ls;\r\n",wMethod);
    SendTcp (zBuffer);
    sprintf (zBuffer, "\tcharset=\"utf-8\";\r\n");
    SendTcp (zBuffer);
    sprintf (zBuffer, "\tname=\"meeting.ics\"\r\n");
    SendTcp (zBuffer);
    SendTcp ("\r\n");



    // Parse out each line of text, convert it to utf-8 and pass it into 
    // ::TextLine

    pwPtr = mCalendar; // set pointer at beginning of text

    while ( pwPtr != NULL && *pwPtr != L'\0' )
    {
        wLine[0] = L'\0';

        lLineLen = wcscspn(pwPtr, L"\n\r");

        if ( lLineLen > sizeof(wLine)/sizeof(wchar_t) ) 
            lLineLen = sizeof(wLine)/sizeof(wchar_t)-1;

        wcsncpy(wLine, pwPtr, lLineLen);
        wLine[lLineLen] = L'\0';

        pwPtr += lLineLen;  // move the pointer to the delimiter


        // Check if '\r\n' or '\n\r' was used as a line terminator.  
        // If so make sure we don't add an extra line.

        if ( wLastTerm == L'\0' ||
             wLastTerm == *pwPtr || 
             lLineLen > 0 )
        {
            // convert this line to the specified charset
            hrWcsToCharset (&pzText, wLine, "utf-8");

            // send the line of text to the mail gateway

            if ( !SendTextLine (pzText) )
            {
                bRetStatus = false;
                goto RET;
            }

            delete pzText;
            pzText = NULL;

            wLastTerm = *pwPtr;  // Save the line terminator used
        }
        else    // current term must not be equal to last term and line length was zero
        {
            wLastTerm = L'\0';  // force next terminator to line break
        }

        if ( *pwPtr != L'\0' ) pwPtr++; // move past the delimiter
    }




RET:

    return bRetStatus;
}
/****************************************************************************************
**
** CMTMailImp::Base64
**
** Purpose: Encode the specified file into base64 and send the results to
**          the SMTP server
**
** Returns: Boolean true or false.
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::Base64 ( FILE *fpFile )
{
    long            bRetStatus = true;
    char            zLine[80];
    unsigned char   zData[54];
    long            lDataLen;
    long            lBytes;

    
    // read the file in one block at a time. Each block of data will be
    // encoded into one line of base64 text.

    while ( !feof(fpFile) )
    {
        // Read in the next block of data
        
        lDataLen = 0;
        memset (zData, 0, 54);

        while ( lDataLen < 54 &&
                !feof(fpFile) )
        {
            zData[lDataLen++] = fgetc (fpFile);
        }

        if ( feof(fpFile) )
        {
            zData[--lDataLen] = '\0';
        }

        // convert the data to a base64 line

        Base64Line (zLine, zData, lDataLen);

        strcat (zLine, "\r\n");

        // send the line of data to the smtp server
        
        lBytes = SendTcp (zLine);

        if ( lBytes <= 0 )
        {
            char    zBuffer[255];
            mStatusCode = WSAGetLastError();
            sprintf (zBuffer, "Error calling send during base64 <%d> [%s]", mStatusCode, mServerIP);
            SetStatusText (zBuffer);

            bRetStatus = false;
            goto RET;
        }
    }

RET:
    return bRetStatus;
}
long CMTMailImp::Base64 ( const char *pcText )
{
    long            bRetStatus = true;
    char            zLine[80];
    unsigned char   zData[54];
    long            lDataLen;
    long            lBytes;
    const char      *pcPtr = NULL;



    pcPtr = pcText;

    while ( pcPtr != NULL && strlen(pcPtr) > 0 )
    {
        // get the next block of data
        
        lDataLen = 0;
        memset (zData, 0, 54);

        while ( lDataLen < 54 &&
                strlen(pcPtr) > 0 )
        {
            zData[lDataLen++] = *(pcPtr++);
        }

        // convert the data to a base64 line

        Base64Line (zLine, zData, lDataLen);

        strcat (zLine, "\r\n");

        // send the line of data to the smtp server

        lBytes = SendTcp (zLine);

        if ( lBytes <= 0 )
        {
            char    zBuffer[255];
            mStatusCode = WSAGetLastError();
            sprintf (zBuffer, "Error calling send <%d> [%s]", mStatusCode, mServerIP);
            SetStatusText (zBuffer);

            bRetStatus = false;
            goto RET;
        }
    }

RET:
    return bRetStatus;
}

/****************************************************************************************
**
** CMTMailImp::Base64Line
**
** Purpose: Encode the specified line of text into base64 
**
** Returns: Boolean true or false.
**
** History: 20-Aug-2001 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::Base64Line ( char *pcBase64, 
                              const unsigned char *pcLine, 
                              const long lLineLen)
{
    long            bRetStatus = true;
    char            c1, c2, c3, c4;
    long            lBase64Len = 0;

    
    // Encode this line of data into base64

    for ( long i=0; i < lLineLen; i+=3 )
    {
        
        // Three bytes of data will be encoded into four printable characters
        // by breaking the 24 bits into four 6 bits characters. The six bit
        // piece of will be mapped into a printable character.
        
        c1 =  pcLine[i] >> 2;
        c2 = ((pcLine[i] << 4) & 060) | ((pcLine[i+1] >> 4) & 017);
        c3 = ((pcLine[i+1] << 2) & 074) | ((pcLine[i+2] >> 6) & 03);
        c4 =  pcLine[i+2] & 077;

        
        // If we didn't end up with an even three bytes we need to make sure we
        // still end up with four bytes of base64 characters. The extra characters
        // will be padded with '='.
        
        if ( lLineLen-i == 1 )
        {
            c3 = -1;
            c4 = -1;
        }
        else if ( lLineLen-i == 2 )
        {
            c4 = -1;
        }

        pcBase64[lBase64Len++] = Base64Encode (c1);
        pcBase64[lBase64Len++] = Base64Encode (c2);
        pcBase64[lBase64Len++] = Base64Encode (c3);
        pcBase64[lBase64Len++] = Base64Encode (c4);
    }

    pcBase64[lBase64Len] = '\0';

    return bRetStatus;
}


/****************************************************************************************
**
** CMTMailImp::Base64Encode
**
** Purpose: Encode a single byte into it's printable character using the base64 table
**
** Returns: encoded character
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
char CMTMailImp::Base64Encode (const char inch)
{
    char    ch = inch;

    if ( ch >= 0 && ch <=25 )
    {
        ch += 65;
    }
    else if ( ch >= 26 && ch <= 51 )
    {
        ch += 71;
    }
    else if ( ch >= 52 && ch <= 61 )
    {
        ch -= 4;
    }
    else if ( ch == 62 )
    {
        ch = '+';
    }
    else if ( ch == 63 )
    {
        ch = '/';
    }
    else if ( ch == -1 )
    {
        ch = '=';
    }

    return ch;
}
/****************************************************************************************
**
** CMTMailImp::Rcpt
**
** Purpose: Send a RECIPIENT to the SMTP server. The server will indicate
**          the validity of the address on that host.
**
** Returns: Boolean true or false.
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::SendRcpt ( const wchar_t *pwAddr )
{
    long        bRetStatus = true;
    char        zBuffer[268];
    char        zAddr[255];
    char        *ptr = NULL;
    long        lBytes;

    if ( pwAddr == NULL || wcslen(pwAddr) == 0 ) goto RET;

    // convert the address to single-byte for the SMTP "RCPT TO:" command
    hrWcsToMbs (zAddr, sizeof(zAddr), pwAddr);

    // make sure there were no embeded carriage controls in the recipient list
    // If there are any then the entire list is most likely invalid but we'll
    // go ahead and send the beginning of the text so if it is invalid it'll 
    // be returned in the error text and will hopefully point out that the wrong
    // information is being passed into that parameter

    if ( (ptr = strchr(zAddr, '\r')) != NULL )    *ptr = '\0';
    if ( (ptr = strchr(zAddr, '\n')) != NULL )    *ptr = '\0';
    
    

    // if the address is in the form "First Last <username@micron.com>" parse out the address

    if ( (ptr = strchr(zAddr, '<')) != NULL )
    {
        strcpy (zAddr, ptr+1);
        if ( (ptr = strchr(zAddr, '>')) != NULL ) *ptr = '\0';
    }

    // trim any leading or trailing spaces

    while ( strlen(zAddr) > 0 && 
            zAddr[0] == ' ' )
    {
        strcpy (zAddr, &zAddr[1]);
    }
    
    while ( strlen(zAddr) > 0 && 
            zAddr[strlen(zAddr)-1] == ' ' )
    {
        zAddr[strlen(zAddr)-1] = '\0';
    }

    // Send the Recipient name and see if it's acceptable
    sprintf (zBuffer, "RCPT TO: %s\r\n", zAddr);
    SendTcp (zBuffer);
    lBytes = RecvTcp (zBuffer, sizeof(zBuffer));

    if ( lBytes == 0 )
    {
        char     zBuffer[255];
        mStatusCode = WSAGetLastError();
        sprintf (zBuffer, "Error on 'RCPT TO' response TCP Recv <%d> [%s]", mStatusCode, mServerIP);
        SetStatusText (zBuffer);
        bRetStatus = false;
        goto RET;
    }

    SetStatusText (zBuffer);
    mStatusCode = atoi (zBuffer);

    if ( mStatusCode < 100 ||
         mStatusCode >= 400 )
    {
        if ( mStatusCode == 550 || // invalid.  Add to invalid recipients list
             mStatusCode == 500 || // Command unrecognized
             mStatusCode == 501)   // ...Command unrecognized
        {
            hrAppend (&mInvalidRecipients, pwAddr);
            hrAppend (&mInvalidRecipients, ", ");
        }
        bRetStatus = false;
        goto RET;
    }

RET:
    return bRetStatus;
}
/****************************************************************************************
**
** CMTMailImp::RcptList
**
** Purpose: Add the address to the list and send the address on to ::Rcpt
**
** Returns: Boolean true or false.
**
** History: 21-Aug-2001 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::SendRcptList (const wchar_t *pwAddrList)
{
    long            bRetStatus = false;
    wchar_t         wAddr [256] = L"";
    const wchar_t   *pwPtr = NULL;
    unsigned long   lAddrLen;

    if ( pwAddrList == NULL || wcslen(pwAddrList) == 0 )    
    {
        goto RET;
    }

    pwPtr = pwAddrList;

    // Parse out the next address

    while ( pwPtr != NULL && *pwPtr != L'\0' ) 
    {
        lAddrLen = wcscspn(pwPtr, L",;"); // find the next delimiter

        if ( lAddrLen > sizeof(wAddr)/sizeof(wchar_t) ) 
            lAddrLen = sizeof(wAddr)/sizeof(wchar_t)-1; // make sure the address fits in the buffer

        wcsncpy(wAddr, pwPtr, lAddrLen);
        wAddr[lAddrLen] = L'\0';

        // send the address to the SMTP server
        if ( SendRcpt(wAddr) )  
            bRetStatus = true; // at least one address was valid

        pwPtr += lAddrLen;               // move to the delimiter
        if ( *pwPtr != L'\0' ) pwPtr++;  // move past the delimiter if not the end of the string
    }

RET:
    return bRetStatus;
}
void CMTMailImp::SendContentType(const wchar_t *pwValue)
{
    char    zLine[993];
    long    bIs8bit = false;

    strcpy  (zLine, "Content-type: application/octet-stream;\r\n");
    SendTcp (zLine);


    // Check if value has any 8-bit 
    long    lValueLen = wcslen(pwValue);
    for ( long idx = 0; idx < lValueLen; idx++ )
    {
        if ( pwValue[idx] >= 0x80 )
        {
            bIs8bit = true;
            break;
        }
    }

    if ( !bIs8bit ) // Not 8 bit (all ASCII characters)
    {
        SendTcp (" name=");
        hrWcsToMbs (zLine, sizeof(zLine), pwValue);
        SendTcp (zLine);
        SendTcp ("\r\n");
        
    }
    else
    {

        char        *ptr = NULL;
        char        *pzValue = NULL;

        strcpy  (zLine, " name=\"");

        // first Convert the subject to the specified charset
        hrWcsToCharset (&pzValue, pwValue, mCharset);

        // The utf-8 version of the subject line will need to be converted to
        // base 64. If the subject is too long it will need to be broken apart 
        // into seperate lines. Each line can only be 76 characters so we need 
        // to limit each line to 39 utf-8 characters to allow for the base64 
        // expansion and for the reast of the header characters.

        ptr = pzValue;

        while ( strlen(ptr) > 0 )
        {
            // calculate how many utf-8 characters will fit on the line after they've
            // been converted to base64
            long    lBytes = (long)((63-strlen(zLine))*(0.75));


            if ( mCharset == NULL || 
                 strlen(mCharset) == 0 ||
                 strcmp(mCharset, "utf-8") == 0 )
            {
                strcat (zLine, "=?utf-8?B?"); // specify the subject will be utf-8 base64 encoded
            }
            else if ( mCharset != NULL && strcmp(mCharset, "iso-2022-jp") == 0 )
            {
                strcat (zLine, "=?iso-2022-jp?B?"); // jpf - need to get correct format
            }

            if ( (long)strlen(ptr) > lBytes ) // rest string won't fit on this line
            {
                Base64Line (&zLine[strlen(zLine)], (unsigned char*)ptr, lBytes);
                ptr += lBytes;

                strcat (zLine, "?=\r\n");
                SendTcp (zLine);
            }
            else
            {
                Base64Line (&zLine[strlen(zLine)], (unsigned char*)ptr, strlen(ptr));
                ptr += strlen(ptr);

                strcat (zLine, "?=\"\r\n");
                SendTcp (zLine);
            }

            strcpy (zLine, " "); // for a continuation line (if needed)
        }

        if ( pzValue != NULL ) delete pzValue;
    }
}
void CMTMailImp::SendContentDisposition(const wchar_t *pwValue)
{
    char    zLine[1001];
    long    bIs8bit = false;

    strcpy  (zLine, "Content-Disposition: inline;\r\n");
    SendTcp (zLine);

    long    lValueLen = wcslen(pwValue);
    for ( long idx = 0; idx < lValueLen; idx++ )
    {
        if ( pwValue[idx] >= 0x80 )
        {
            bIs8bit = true;
            break;
        }
    }

    if ( !bIs8bit ) // Not 8 bit (all ASCII characters)
    {
        SendTcp (" filename=\"");
        hrWcsToMbs (zLine, sizeof(zLine), pwValue);
        SendTcp (zLine);
        SendTcp ("\"\r\n");
    }
    else
    {

        char        *ptr = NULL;
        char        *pzValue = NULL;

        strcpy  (zLine, "  filename=\"");

        // first Convert the subject to the specified charset

        hrWcsToCharset (&pzValue, pwValue, mCharset);

        // The utf-8 version of the subject line will need to be converted to
        // base 64. If the subject is too long it will need to be broken apart 
        // into seperate lines. Each line can only be 76 characters so we need 
        // to limit each line to 39 utf-8 characters to allow for the base64 
        // expansion and for the reast of the header characters.

        ptr = pzValue;

        while ( strlen(ptr) > 0 )
        {
            // calculate how many utf-8 characters will fit on the line after they've
            // been converted to base64
            long    lBytes = (long)((63-strlen(zLine))*(0.75));

            if ( mCharset == NULL || 
                 strlen(mCharset) == 0 ||
                 strcmp(mCharset, "utf-8") == 0 )
            {
                strcat (zLine, "=?utf-8?B?"); // specify the subject will be utf-8 base64 encoded
            }
            else if ( mCharset != NULL && strcmp(mCharset, "iso-2022-jp") == 0 )
            {
                strcat (zLine, "=?iso-2022-jp?B?"); // jpf - need to get correct format
            }

            if ( (long)strlen(ptr) > lBytes ) // rest string won't fit on this line
            {
                Base64Line (&zLine[strlen(zLine)], (unsigned char*)ptr, lBytes);
                ptr += lBytes;

                strcat (zLine, "?=\r\n");
                SendTcp (zLine);
            }
            else
            {
                Base64Line (&zLine[strlen(zLine)], (unsigned char*)ptr, strlen(ptr));
                ptr += strlen(ptr);

                strcat (zLine, "?=\"\r\n");
                SendTcp (zLine);
            }

            

            strcpy (zLine, " "); // for a continuation line (if needed)
        }

        if ( pzValue != NULL ) delete pzValue;

    }
}
/****************************************************************************************
**
** CMTMailImp::SendEOM
**
** Purpose: Send the '.' to the SMTP server specifying the end of the DATA
**          portion which causes the email to be send on.
**
** Returns: Boolean true or false.
**
** History: 16-Mar-1998 John Ferguson   Initial Creation
**
**
*****************************************************************************************/
long CMTMailImp::SendEOM (void)
{
    long        bRetStatus = true;
    char        zBuffer[255];
    long        lBytes;
    
    // Send the ending MIME boundary if there was an attachment
    
    if ( mbMultiPart )
    {
        sprintf (zBuffer, "\r\n--%s--\r\n", mBoundaryStr);
        SendTcp (zBuffer);
    }

    
    // Send the closing 'dot' which will tell the server to send the message
    
    SendTcp (".\r\n");
    lBytes = RecvTcp (zBuffer, sizeof(zBuffer));

    if ( lBytes == 0 )
    {
        char     zError[255];
        sprintf (zError, "Error on '.' response TCP Recv <%d> [%s]", WSAGetLastError(), mServerIP);
        SetStatusText (zError);
        goto RET;
    }

    // Append the server IP address to the end of the success message
    strcat (zBuffer, " [");
    strcat (zBuffer, mServerIP);
    strcat (zBuffer, "]");

    SetStatusText (zBuffer);
    mStatusCode = atoi (zBuffer);

    if ( mStatusCode < 100 ||
         mStatusCode >= 400 )
    {
        bRetStatus = false;
    }

RET:
    return bRetStatus;
}


///////////////////////////////////////////////////////////////////////////
//
// Helper functions
//
//////////////////////////////////////////////////////////////////////////



/////////////////////////////////////////////////////////////////////////
//
// hrSet
//
// Set a string
//
//////////////////////////////////////////////////////////////////////////
void CMTMailImp::hrSet (wchar_t **Ptr, const wchar_t *newVal)
{
    // check if the new value is empty
    if ( newVal == NULL )
    {
        if ( *Ptr != NULL )  *Ptr[0] = L'\0'; 
        return;
    }

    // see if new string is longer than the existing string
    if ( *Ptr != NULL && 
         wcslen(newVal) > wcslen(*Ptr) )
    {
        delete *Ptr;
        *Ptr = NULL;
    }

    // if the pointer is null allocate enough memory for the new value
    if ( *Ptr == NULL )
    {
        *Ptr = new wchar_t[wcslen(newVal)+1];
    }

    if ( *Ptr != NULL ) wcscpy (*Ptr, newVal);
}
void CMTMailImp::hrSet (wchar_t **Ptr, const char *newVal, const char *pzLocale)
{
    // check to see if the new value is empty
    if ( newVal == NULL || strlen(newVal) == 0 )
    {
        if ( *Ptr != NULL ) *Ptr[0] = L'\0'; 
        return;
    }

    // convert the string to wide characters

    wchar_t *pwVal = NULL;

    hrMbsToWcs(&pwVal, newVal, pzLocale);
    hrSet (Ptr, pwVal);

    if ( pwVal != NULL ) delete pwVal;
}



void CMTMailImp::BuildiCalendar()
{

    char        zDTStamp[17] = "";
    char        zDTStartTime[17] = "";


    wchar_t     szDuration[10] = L"";
    

    struct      tm res;
    memset(&res, 0, sizeof(res));
    struct      tm *tmval = NULL;
    

#if defined (_WIN32)
    struct _timeb   sCurrentTime;
#else
    struct timeb    sCurrentTime;
#endif


        // Get the current time
#if defined (_WIN32)
    _ftime(&sCurrentTime);
#else
    ftime(&sCurrentTime);
#endif

    // get the tm structure for the local time
#if defined(__VMS) || defined(unix)
    tmval = localtime_r(&(sCurrentTime.time), &res);
#else
    tmval = localtime(&(sCurrentTime.time));
#endif


    // Build the Date Time stamp we'll use in the iCalendar text
    strftime (zDTStamp,
              sizeof(zDTStamp),
              "%Y%m%dT%H%M%S",
              tmval);

    if ( mCalendarStartTime != NULL && wcschr(mCalendarStartTime, L'T') != NULL ) // Already in ISO-8601 format
    {
        wcstombs(zDTStartTime, mCalendarStartTime, sizeof(zDTStartTime));
    }
    else
    {
        // convert start time to ISO-8601 format

        // convert the wide time string to multibyte
        char        zStartTime[25];
        wcstombs(zStartTime, mCalendarStartTime, sizeof(zStartTime));

        // tmStartTime will contain the passed in time with no time zone applied
        struct      tm tmStartTime = {0,0,0,0,0,0,0,0,0};
        time_t      tStartTime = 0;
        long        lTZOffset = -sCurrentTime.timezone;


        // check if the time zone offset was included
        long        pos;
        if ( (pos = strcspn(zStartTime, "+-")) < (long)strlen(zStartTime) )
        {
            lTZOffset = atoi(&zStartTime[pos]);
            zStartTime[pos] = '\0'; // remove the TZ offset
        }


        // parse out the time and place each element into the 'tm' structure

        char    zTemp[5];

        strncpy (zTemp, zStartTime, 4);
        zTemp[4] = '\0';
        tmStartTime.tm_year = atoi(zTemp)-1900;
        strcpy (zStartTime, &zStartTime[4]);

        strncpy (zTemp, zStartTime, 2);
        zTemp[2] = '\0';
        tmStartTime.tm_mon = atoi(zTemp)-1;
        strcpy (zStartTime, &zStartTime[2]);

        strncpy (zTemp, zStartTime, 2);
        zTemp[2] = '\0';
        tmStartTime.tm_mday = atoi(zTemp);
        strcpy (zStartTime, &zStartTime[2]);

        strncpy (zTemp, zStartTime, 2);
        zTemp[2] = '\0';
        tmStartTime.tm_hour = atoi(zTemp);
        strcpy (zStartTime, &zStartTime[2]);

        strncpy (zTemp, zStartTime, 2);
        zTemp[2] = '\0';
        tmStartTime.tm_min = atoi(zTemp);
        strcpy (zStartTime, &zStartTime[2]);

        tmStartTime.tm_isdst = -1; // let the run time library compute if DST is in effect


        // convert the 'tm' structure to 'time_t' so we can easily apply the TZ offset
        tStartTime = mktime(&tmStartTime);


        // Apply the TZ offset to get the time in GMT
        tStartTime -= (lTZOffset*60);


        // convert the GMT 'time_t' back to a 'tm' structure so we can build the time string
#if defined(__VMS) || defined(unix)
        tmval = localtime_r(&tStartTime, &res);
#else
        tmval = localtime(&tStartTime);
#endif

        strftime (zDTStartTime,
              sizeof(zDTStartTime),
              "%Y%m%dT%H%M%SZ",
              tmval);
    }


#if defined(_WIN32)
    _snwprintf(szDuration, sizeof(szDuration)/sizeof(wchar_t), L"PT%dM", mCalendarDuration);
#elif defined(unix)
    swprintf(szDuration, sizeof(szDuration)/sizeof(wchar_t), L"PT%dM", mCalendarDuration);
#endif

    


    // Build the iCalendar text

    hrSet (&mCalendar, L"");
    hrAppend (&mCalendar, L"BEGIN:VCALENDAR\n");

    hrAppend (&mCalendar, L"METHOD:");
    hrAppend (&mCalendar, mCalendarMethod);
    hrAppend (&mCalendar, L"\n");
    
    hrAppend (&mCalendar, L"PRODID:Micron MTMail\n");
    hrAppend (&mCalendar, L"VERSION:2.0\n");
    hrAppend (&mCalendar, L"BEGIN:VEVENT\n");

    hrAppend (&mCalendar, L"DTSTAMP:");
    hrAppend (&mCalendar, zDTStamp);
    hrAppend (&mCalendar, L"\n");

    hrAppend (&mCalendar, L"DTSTART:");
    hrAppend (&mCalendar, zDTStartTime);
    hrAppend (&mCalendar, L"\n");


    // If this a recurring meeting build the RRULE line
    if ( mCalendarFreq != NULL && wcslen(mCalendarFreq) > 0 )
    {
        hrAppend (&mCalendar, L"RRULE:FREQ=");
        hrAppend (&mCalendar, mCalendarFreq);

        if ( mCalendarCount > 0 ) 
        {
            hrAppend (&mCalendar, L";COUNT=");
            wchar_t szCount[20];
            
#if defined(_WIN32)
            _snwprintf (szCount, sizeof(szCount)/sizeof(wchar_t), L"%d", mCalendarCount);
#elif defined(unix)
            swprintf (szCount, sizeof(szCount)/sizeof(wchar_t), L"%d", mCalendarCount);
#endif

            hrAppend (&mCalendar, szCount);
        }

        if ( mCalendarInterval > 0 ) 
        {
            hrAppend (&mCalendar, L";INTERVAL=");
            wchar_t szInterval[20];
            
#if defined(_WIN32)
            _snwprintf (szInterval, sizeof(szInterval)/sizeof(wchar_t), L"%d", mCalendarInterval);
#elif defined(unix)
            swprintf (szInterval, sizeof(szInterval)/sizeof(wchar_t), L"%d", mCalendarInterval);
#endif
        
            hrAppend (&mCalendar, szInterval);
        }

        if ( mCalendarByDay != NULL && wcslen(mCalendarByDay) > 0 )
        {
            hrAppend (&mCalendar, L";");
            hrAppend (&mCalendar, mCalendarByDay);
        }

        hrAppend (&mCalendar, L"\n");
    }



    hrAppend (&mCalendar, L"SUMMARY:");
    hrAppend (&mCalendar, mSubject);
    hrAppend (&mCalendar, L"\n");

    hrAppend (&mCalendar, L"UID:");
    hrAppend (&mCalendar, mCalendarUID);
    hrAppend (&mCalendar, L"\n");

    hrAppend (&mCalendar, L"ORGANIZER:MAILTO:");
    hrAppend (&mCalendar, mFrom);
    hrAppend (&mCalendar, L"\n");


    // Attendees - Required

    const wchar_t  *pwPtr = mToList;
    wchar_t         wAddr[255];

    while ( pwPtr != NULL && *pwPtr != L'\0' )
    {
        // scan for next comma

        unsigned long lAddrLen = wcscspn(pwPtr, L",;");

        if ( lAddrLen > sizeof(wAddr)/sizeof(wchar_t) ) 
            lAddrLen = sizeof(wAddr)/sizeof(wchar_t);

        wcsncpy (wAddr, pwPtr, lAddrLen);
        wAddr[lAddrLen] = L'\0';

        hrAppend (&mCalendar, L"ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=NEEDS-ACTION");
        if ( mCalendarRSVP ) hrAppend (&mCalendar, L";RSVP=TRUE");
        hrAppend (&mCalendar, L":MAILTO:");
        hrAppend (&mCalendar, wAddr);
        hrAppend (&mCalendar, L"\n");
        
        pwPtr += lAddrLen; // move the pointer to the comma 
        if ( *pwPtr != L'\0' ) pwPtr++; 
    }

    // Attendees - Optional

    pwPtr = mCCList;
    while ( pwPtr != NULL && *pwPtr != L'\0' )
    {
        // scan for next comma

        unsigned long lAddrLen = wcscspn(pwPtr, L",;");

        if ( lAddrLen > sizeof(wAddr)/sizeof(wchar_t) ) 
            lAddrLen = sizeof(wAddr)/sizeof(wchar_t);

        wcsncpy (wAddr, pwPtr, lAddrLen);
        wAddr[lAddrLen] = L'\0';

        hrAppend (&mCalendar, L"ATTENDEE;ROLE=OPT-PARTICIPANT;PARTSTAT=NEEDS-ACTION");
        if ( mCalendarRSVP ) hrAppend (&mCalendar, L";RSVP=TRUE");
        hrAppend (&mCalendar, L":MAILTO:");
        hrAppend (&mCalendar, wAddr);
        hrAppend (&mCalendar, L"\n");
        
        pwPtr += lAddrLen;       // move the pointer to the comma 
        if ( *pwPtr != L'\0' ) pwPtr++; 
    }


    hrAppend (&mCalendar, L"LOCATION:");
    hrAppend (&mCalendar, mCalendarLocation);
    hrAppend (&mCalendar, L"\n");

    hrAppend (&mCalendar, L"DURATION:");
    hrAppend (&mCalendar, szDuration);
    hrAppend (&mCalendar, L"\n");


    hrAppend (&mCalendar, L"DESCRIPTION:");  // need to change newlines to "\N"
    hrAppend (&mCalendar, mText);
    hrAppend (&mCalendar, L"\n");

    hrAppend (&mCalendar, L"SEQUENCE:1\n");
    hrAppend (&mCalendar, L"PRIORITY:5\n");
    hrAppend (&mCalendar, L"CLASS:Personal\n");

    hrAppend (&mCalendar, L"CREATED:");
    hrAppend (&mCalendar, zDTStamp);
    hrAppend (&mCalendar, L"\n");

    hrAppend (&mCalendar, L"LAST-MODIFIED:");
    hrAppend (&mCalendar, zDTStamp);
    hrAppend (&mCalendar, L"\n");

    hrAppend (&mCalendar, L"TRANSP:OPAQUE\n");

    if ( wcscmp(mCalendarMethod, L"REQUEST") == 0 )
    {
        hrAppend (&mCalendar, L"STATUS:CONFIRMED\n");
        hrAppend (&mCalendar, L"X-MICROSOFT-CDO-BUSYSTATUS:BUSY\n");
        hrAppend (&mCalendar, L"X-MICROSOFT-CDO-INSTTYPE:0\n");
        hrAppend (&mCalendar, L"X-MICROSOFT-CDO-INTENDEDSTATUS:BUSY\n");
    }
    else if ( wcscmp(mCalendarMethod, L"REQUEST") == 0 )
    {
        hrAppend (&mCalendar, L"STATUS:CANCELLED\n");
        hrAppend (&mCalendar, L"X-MICROSOFT-CDO-BUSYSTATUS:FREE\n");
        hrAppend (&mCalendar, L"X-MICROSOFT-CDO-INSTTYPE:0\n");
    }

    hrAppend (&mCalendar, L"END:VEVENT\n");

    if ( mCalendarReminderMinutes > 0 )
    {
        wchar_t szTrigger[20];
        
#if defined(_WIN32)
        _snwprintf (szTrigger, sizeof(szTrigger)/sizeof(wchar_t), L"-PT%dM", mCalendarReminderMinutes);
#elif defined(unix)
        swprintf (szTrigger, sizeof(szTrigger)/sizeof(wchar_t), L"-PT%dM", mCalendarReminderMinutes);
#endif

        hrAppend (&mCalendar, L"BEGIN:VALARM\n");

        hrAppend (&mCalendar, L"TRIGGER:");
        hrAppend (&mCalendar, szTrigger);
        hrAppend (&mCalendar, L"\n");

        hrAppend (&mCalendar, L"ACTION:DISPLAY\n");
        hrAppend (&mCalendar, L"DESCRIPTION:Reminder\n");
        hrAppend (&mCalendar, L"END:VALARM\n");
    }

    hrAppend (&mCalendar, L"END:VCALENDAR\n");
}

//////////////////////////////////////////////////////////////////////////////////////
//
//  hrAppend
//
//  Append a string to another
//
//////////////////////////////////////////////////////////////////////////////////////
void CMTMailImp::hrAppend (wchar_t **Ptr, const wchar_t *newVal)
{
    // check if the new value is empty
    if ( newVal == NULL || wcslen(newVal) == 0 ) return;

    // Allocate enough memory to append the new string
    if ( *Ptr == NULL )
    {
        *Ptr = new wchar_t [wcslen(newVal)+1];

        if ( *Ptr == NULL ) return; //error

        *Ptr[0] = '\0';
    }

    if ( *Ptr != NULL )
    {
        wchar_t     *tmp = *Ptr;    // save the location of the current buffer
        
        *Ptr = new wchar_t[wcslen(*Ptr)+wcslen(newVal)+1]; // allocate enough for both strings

        if ( *Ptr == NULL ) // unable to allocate memory
        {
            *Ptr = tmp;     // put the pointer back to the old buffer 
            return; 
        }

        wcscpy (*Ptr, tmp); // copy old string to the new buffer
        delete tmp; // delete the old buffer
    }

    wcscat (*Ptr, newVal); // append the new string to the old string
}
void CMTMailImp::hrAppend (wchar_t **Ptr, const char *newVal, const char *pzLocale)
{
    if ( newVal == NULL || strlen(newVal) == 0 ) return;

    // convert the string to wide characters

    wchar_t *pwVal = NULL;

    hrMbsToWcs(&pwVal, newVal, pzLocale);
    hrAppend (Ptr, pwVal);

    if ( pwVal != NULL ) delete pwVal;
}

//////////////////////////////////////////////////////////////////////////////////////
//
//  hrRTrim
//
//  Trim the white space off the end of the string
//
//////////////////////////////////////////////////////////////////////////////////////
void CMTMailImp::hrRTrim (wchar_t *wcsStr)
{
    if ( wcsStr == NULL ) return;

    wchar_t     *ptr = &wcsStr[wcslen(wcsStr)]; // set pointer to the end of the string

    while ( ptr > wcsStr && *(ptr-1) == L' ' )
    {
        *(--ptr) = L'\0';
    }
}

//////////////////////////////////////////////////////////////////////////////////////
//
//  hrParseList
//
//  Parse a list of names and dist lists to a wide character string
//
//////////////////////////////////////////////////////////////////////////////////////
void CMTMailImp::hrParseList (wchar_t **List, const wchar_t *newVal)
{
    const wchar_t   *wptr = NULL;
    wchar_t         wAddr[256] = L"";
    size_t          lAddr;

 
    if ( newVal == NULL || wcslen(newVal) == 0 ) return;

    wptr = newVal;

    while ( wcslen(wptr) > 0 )
    {
        lAddr = wcscspn(wptr, L",;\n\r");

        if ( lAddr > sizeof(wAddr)/sizeof(wchar_t) ) 
            lAddr = sizeof(wAddr)/sizeof(wchar_t) - 1; // truncate if too long

        wcsncpy(wAddr, wptr, lAddr);
        wAddr[lAddr] = L'\0';

        hrRTrim (wAddr);

        if ( wAddr[0] == L'@' )              // distribution list
        {
            hrParseDistList (List, &wAddr[1]);
        }
        else if ( wcslen(wAddr) > 0 )       // Address
        {
            if ( wcschr(wAddr, L'@') == NULL ) // no domain included. Use the local domain
            {
                // need to convert the default domain to a wide string
                wchar_t *pwVal = NULL;
                hrMbsToWcs (&pwVal, mDefaultDomainName);

                wcscat (wAddr, L"@");
                wcscat (wAddr, pwVal);

                if ( pwVal != NULL ) delete pwVal;
            }


            if ( *List != NULL && wcslen(*List) > 0 ) // insert comma
            {
                hrAppend (List, L",");
            }

            hrAppend (List, wAddr);
        }

        // move pointer to the next address
        lAddr = wcscspn(wptr, L",;\n\r");
        wptr += lAddr;

        if ( *wptr == '\n' || *wptr == '\r' ) wptr = &newVal[wcslen(newVal)];

        if ( *wptr != '\0' ) wptr++;
    }
}

void CMTMailImp::hrParseList (wchar_t **List, const char *newVal, const char *pzLocale)
{
    wchar_t *pwVal = NULL;

    // convert multi-byte string to a wide string
    hrMbsToWcs (&pwVal, newVal, pzLocale);

    // Pass the wide string on to the wide version of hrParseList
    hrParseList (List, pwVal);

    if ( pwVal != NULL ) delete pwVal;
}

//////////////////////////////////////////////////////////////////////////////////////
//
//  hrParseDistList
//
//  Parse a distribution list to a wide character string
//
//////////////////////////////////////////////////////////////////////////////////////
long CMTMailImp::hrParseDistList (wchar_t **List, const wchar_t *wDistName)
{
    long                ret_status = true;
    FILE                *fpFile = NULL;
    char                zLine[1001] = "";
    wchar_t             wLine[1001] = L"";
    static long         lDepthCounter = 0;      // for recursive calls
    char                *ptr = NULL;

    lDepthCounter++;

    char    *zDistName = NULL;
    zDistName = new char[wcslen(wDistName)+1];

    if ( zDistName == NULL ) // unable to allocate memory
    {
        ret_status = false;
        goto RET;
    }

    wcstombs(zDistName, wDistName, wcslen(wDistName)+1);

    if ( lDepthCounter > 10 )
    {
        ret_status = false;
        goto RET;
    }

#ifdef __VMS
    fpFile = fopen (zDistName, "r", "dna=maildist:file.dis");
#else
    fpFile = fopen (zDistName, "r");

    if ( fpFile == NULL &&
         strchr (zDistName, '.') == NULL ) // if no extension try again with ".dis"
    {
        char    zTemp[255];
        strcpy (zTemp, zDistName);
        strcat (zTemp, ".dis");

        fpFile = fopen (zTemp, "r");
    }
#endif

    if ( fpFile == NULL )
    {
        ret_status = false;
        goto RET;
    }

    while ( fgets (zLine, sizeof(zLine), fpFile) )
    {
        if ( (ptr = strchr (zLine, '\n')) != NULL ) *ptr = '\0';
        if ( (ptr = strchr (zLine, '!')) != NULL )  *ptr = '\0';
        if ( (ptr = strchr (zLine, '#')) != NULL )  *ptr = '\0';

        mbstowcs(wLine, zLine, sizeof(zLine));

        hrParseList (List, wLine);
    }

RET:
    if ( fpFile ) fclose (fpFile);

    lDepthCounter--;

    if ( zDistName != NULL ) delete zDistName;

    return  ret_status;
}


//////////////////////////////////////////////////////////////////////////////////////
//
//  hrIs8Bit
//
//  Check if a file contains 8-bit characters
//
//////////////////////////////////////////////////////////////////////////////////////
long CMTMailImp::hrIs8Bit(const wchar_t *pwText, const wchar_t *pwTextFile)
{
    long    bText8Bit = false;
    
    // check if there are any 8-bit characters in the text message so we know what charset to use
    if ( pwText != NULL )
    {
        long lTextLen = wcslen(pwText);

        for ( long i = 0; i < lTextLen; i++ )
        {
            if ( pwText[i] >= 0x80 )
            {
                bText8Bit = true;
                break;
            }
        }
    }

    // We're sending a text file determine if it contains 8-bit content
    if ( pwTextFile != NULL && wcslen(pwTextFile) > 0 )
    {
        FILE    *fpFile = NULL;
        char    ch[4];

#if defined(__VMS)

        // convert the filename to a narrow string
        char            zFilename[1000];
        hrWcsToMbs(zFilename, sizeof(zFilename), pwTextFile);
        zFilename[sizeof(zFilename)-1] = '\0';
        fpFile = fopen (zFilename, "r");

#elif defined (unix) || defined(__xlC__)

        // convert the filename to a narrow string
        char            zFilename[1000];
        hrWcsToMbs(zFilename, sizeof(zFilename), pwTextFile);
        zFilename[sizeof(zFilename)-1] = '\0';
        fpFile = fopen (zFilename, "r");

#elif defined (_WIN32)

        fpFile = _wfopen (pwTextFile, L"rb");

#endif

        if ( fpFile != NULL ) 
        {
            // read the first two bytes to see if there is a "byte-order mark"

            if ( !feof(fpFile) ) ch[0] = fgetc(fpFile);
            if ( !feof(fpFile) ) ch[1] = fgetc(fpFile);

            if ( ch[0] == (char)0xfe && 
                 ch[1] == (char)0xff ) // UTF-16/UCS-2, little endian
            {
                bText8Bit = true;
            }
            else if ( ch[0] == (char)0xff && 
                      ch[1] == (char)0xfe ) // UTF-16/UCS-2, big endian
            {
                bText8Bit = true;
            }
            else
            {
                if ( !feof(fpFile) ) ch[2] = fgetc(fpFile);

                if ( ch[0] == (char)0xef && 
                     ch[1] == (char)0xbb && 
                     ch[2] == (char)0xbf ) // UTF-8
                {
                    bText8Bit = true;
                }
            }

            fclose (fpFile);
        }
    }

    return bText8Bit;
}


/****************************************************************************
**
** CMTMailw Wrapper class (wide).
**
** The wrapper class member functions just call the the coresponding functions
** in the implementation class using the pointer to the implementation class.
** This allows for changes to be made to the implementation class without
** effecting the wrapper class that's exported to a DLL or the VMS RTL. If
** a change were to be made to the exposed class all apps using the class
** would require a re-compile to work correctly.
**
******************************************************************************/

CMTMailw::CMTMailw (void)
{
    Imp = new CMTMailImp;
}
CMTMailw::~CMTMailw (void)
{
    delete Imp;
}
CMTMailw& CMTMailw::operator= (const CMTMailw &cMail)
{
    if ( this == &cMail ) goto RET;

    Imp = new CMTMailImp (*cMail.Imp);

RET:
    return *this;
}
CMTMailw::CMTMailw (const CMTMailw &cMail)
{
    Imp = new CMTMailImp (*cMail.Imp);
}

CMTMailw::CMTMailw (const char *InTo,
                    const char *InFrom,
                    const char *InText,
                    const char *InSubject,
                    const char *InCC,
                    const char *InBCC,
                    const char *InAttachment,
                    const char *InTextFile, 
                    const char *InLocale)
{
    Imp = new CMTMailImp;

    Imp->Send (InTo,
               InFrom,
               InText,
               InSubject,
               InCC,
               InBCC,
               InAttachment,
               InTextFile,
               InLocale);
}

CMTMailw::CMTMailw (const wchar_t *InTo,
                    const wchar_t *InFrom,
                    const wchar_t *InText,
                    const wchar_t *InSubject,
                    const wchar_t *InCC,
                    const wchar_t *InBCC,
                    const wchar_t *InAttachment,
                    const wchar_t *InTextFile)
{
    Imp = new CMTMailImp;

    Imp->Send (InTo,
               InFrom,
               InText,
               InSubject,
               InCC,
               InBCC,
               InAttachment,
               InTextFile);
}

CMTMailw::CMTMailw (const STD(string) &InTo,
                    const STD(string) &InFrom,
                    const STD(string) &InText,
                    const STD(string) &InSubject,
                    const STD(string) &InCC,
                    const STD(string) &InBCC,
                    const STD(string) &InAttachment,
                    const STD(string) &InTextFile)
{
    Imp = new CMTMailImp;

    Imp->Send (InTo.c_str(),
               InFrom.c_str(),
               InText.c_str(),
               InSubject.c_str(),
               InCC.c_str(),
               InBCC.c_str(),
               InAttachment.c_str(),
               InTextFile.c_str());
}


void CMTMailw::SetFrom (const char *newVal, const char *InLocale)
{
    Imp->SetFrom(newVal, InLocale);
}
void CMTMailw::SetFrom (const wchar_t *newVal)
{
    Imp->SetFrom(newVal);
}
void CMTMailw::SetFrom (const STD(string) &newVal)
{
    Imp->SetFrom(newVal.c_str());
}
const wchar_t* CMTMailw::GetFrom ()
{
    return Imp->GetFrom();
}
const STD(string)& CMTMailw::sGetFrom ()
{
    return Imp->GetFromString();
}

void CMTMailw::SetTo (const char *newVal, const char *InLocale)
{
    Imp->SetTo(newVal, InLocale);
}
void CMTMailw::SetTo (const wchar_t *newVal)
{
    Imp->SetTo(newVal);
}
void CMTMailw::SetTo (const STD(string) &newVal)
{
    Imp->SetTo(newVal.c_str());
}
void CMTMailw::AppendTo (const char *newVal, const char *InLocale)
{
    Imp->AppendTo(newVal, InLocale);
}
void CMTMailw::AppendTo (const wchar_t *newVal)
{
    Imp->AppendTo(newVal);
}
void CMTMailw::AppendTo (const STD(string) &newVal)
{
    Imp->AppendTo(newVal.c_str());
}
const wchar_t* CMTMailw::GetTo ()
{
    return Imp->GetTo ();
}
const STD(string)& CMTMailw::sGetTo ()
{
    return Imp->GetToString();
}

void CMTMailw::SetCC (const char *newVal, const char *InLocale)
{
    Imp->SetCC(newVal, InLocale);
}
void CMTMailw::SetCC (const wchar_t *newVal)
{
    Imp->SetCC(newVal);
}
void CMTMailw::SetCC (const STD(string) &newVal)
{
    Imp->SetCC(newVal.c_str());
}
void CMTMailw::AppendCC (const char *newVal, const char *InLocale)
{
    Imp->AppendCC(newVal, InLocale);
}
void CMTMailw::AppendCC (const wchar_t *newVal)
{
    Imp->AppendCC(newVal);
}
void CMTMailw::AppendCC (const STD(string) &newVal)
{
    Imp->AppendCC(newVal.c_str());
}
const wchar_t* CMTMailw::GetCC ()
{
    return Imp->GetCC ();
}
const STD(string)& CMTMailw::sGetCC ()
{
    return Imp->GetCCString();
}

void CMTMailw::SetBCC (const char *newVal, const char *InLocale)
{
    Imp->SetBCC(newVal, InLocale);
}
void CMTMailw::SetBCC (const wchar_t *newVal)
{
    Imp->SetBCC(newVal);
}
void CMTMailw::SetBCC (const STD(string) &newVal)
{
    Imp->SetBCC(newVal.c_str());
}
void CMTMailw::AppendBCC (const char *newVal, const char *InLocale)
{
    Imp->AppendBCC(newVal, InLocale);
}
void CMTMailw::AppendBCC (const wchar_t *newVal)
{
    Imp->AppendBCC(newVal);
}
void CMTMailw::AppendBCC (const STD(string) &newVal)
{
    Imp->AppendBCC(newVal.c_str());
}
const wchar_t* CMTMailw::GetBCC ()
{
    return  Imp->GetBCC ();
}
const STD(string)& CMTMailw::sGetBCC ()
{
    return Imp->GetBCCString();
}

void CMTMailw::SetSubject (const char *newVal, const char *InLocale)
{
    Imp->SetSubject(newVal, InLocale);
}
void CMTMailw::SetSubject (const wchar_t *newVal)
{
    Imp->SetSubject(newVal);
}
void CMTMailw::SetSubject (const STD(string) &newVal)
{
    Imp->SetSubject(newVal.c_str());
}
const wchar_t* CMTMailw::GetSubject (void)
{
    return Imp->GetSubject ();
}
const STD(string)& CMTMailw::sGetSubject ()
{
    return Imp->GetSubjectString();
}

void CMTMailw::SetText (const char *newVal, const char *InLocale)
{
    Imp->SetText(newVal, InLocale);
}
void CMTMailw::SetText (const wchar_t *newVal)
{
    Imp->SetText(newVal);
}
void CMTMailw::SetText (const STD(string) &newVal)
{
    Imp->SetText(newVal.c_str());
}
void CMTMailw::AppendText (const char *newVal, const char *InLocale)
{
    Imp->AppendText(newVal, InLocale);
}
void CMTMailw::AppendText (const wchar_t *newVal)
{
    Imp->AppendText(newVal);
}
void CMTMailw::AppendText (const STD(string) &newVal)
{
    Imp->AppendText(newVal.c_str());
}
const wchar_t* CMTMailw::GetText (void)
{
    return Imp->GetText ();
}
const STD(string)& CMTMailw::sGetText ()
{
    return Imp->GetTextString();
}


const long CMTMailw::GetTextLength (void)
{
    return Imp->GetTextLength ();
}

void CMTMailw::SetTextFile (const char *newVal, const char *InLocale)
{
    Imp->SetTextFile(newVal, InLocale);
}
void CMTMailw::SetTextFile (const wchar_t *newVal)
{
    Imp->SetTextFile(newVal);
}
void CMTMailw::SetTextFile (const STD(string) &newVal)
{
    Imp->SetTextFile(newVal.c_str());
}
const wchar_t* CMTMailw::GetTextFile (void)
{
    return Imp->GetTextFile ();
}
const STD(string)& CMTMailw::sGetTextFile ()
{
    return Imp->GetTextFileString();
}

void CMTMailw::SetAttachment (const char *newVal, const char *InLocale)
{
    Imp->SetAttachment(newVal, InLocale);
}
void CMTMailw::SetAttachment (const wchar_t *newVal)
{
    Imp->SetAttachment(newVal);
}
void CMTMailw::SetAttachment (const STD(string) &newVal)
{
    Imp->SetAttachment(newVal.c_str());
}
const wchar_t* CMTMailw::GetAttachment (void)
{
    return Imp->GetAttachment ();
}
const STD(string)& CMTMailw::sGetAttachment ()
{
    return Imp->GetAttachmentString();
}


void CMTMailw::SetCalendar (const char *newVal, const char *InLocale)
{
    Imp->SetCalendar(newVal, InLocale);
}
void CMTMailw::SetCalendar (const wchar_t *newVal)
{
    Imp->SetCalendar(newVal);
}
void CMTMailw::SetCalendar (const STD(string) &newVal)
{
    Imp->SetCalendar(newVal.c_str());
}
const wchar_t* CMTMailw::GetCalendar (void)
{
    return Imp->GetCalendar ();
}
const STD(string)& CMTMailw::sGetCalendar ()
{
    return Imp->GetCalendarString();
}



void CMTMailw::SetCalendar (const wchar_t *InMethod,
                            const wchar_t *InUID,
                            const wchar_t *InStartTime,
                            const long    InDuration,
                            const long    InReminderMinutes,
                            const wchar_t *InLocation,
                            const long    InRSVP)
{
    Imp->SetCalendar (InMethod, 
                      InUID, 
                      InStartTime, 
                      InDuration, 
                      InReminderMinutes, 
                      InLocation, 
                      InRSVP,
                      NULL,
                      0,
                      0,
                      NULL);
}

void CMTMailw::SetCalendar (const wchar_t *InMethod,
                            const wchar_t *InUID,
                            const wchar_t *InStartTime,
                            const long    InDuration,
                            const long    InReminderMinutes,
                            const wchar_t *InLocation,
                            const long    InRSVP,
                            const wchar_t *InFreq,
                            const long     InCount,
                            const long     InInterval,
                            const wchar_t  *InByDay)
{
    Imp->SetCalendar (InMethod, 
                      InUID, 
                      InStartTime, 
                      InDuration, 
                      InReminderMinutes, 
                      InLocation, 
                      InRSVP,
                      InFreq,
                      InCount,
                      InInterval,
                      InByDay);
}

void CMTMailw::Reset (void)
{
    Imp->Reset();
}
long CMTMailw::Send (void)
{
    return Imp->Send ();
}


long CMTMailw::Send (const char *InTo,
                     const char *InFrom,
                     const char *InText,
                     const char *InSubject,
                     const char *InCC,
                     const char *InBCC,
                     const char *InAttachments,
                     const char *InTextFile, 
                     const char *InLocale)
{
    return Imp->Send (InTo,
                      InFrom,
                      InText,
                      InSubject,
                      InCC,
                      InBCC,
                      InAttachments,
                      InTextFile,
                      InLocale);
}
long CMTMailw::Send (const wchar_t *InTo,
                     const wchar_t *InFrom,
                     const wchar_t *InText,
                     const wchar_t *InSubject,
                     const wchar_t *InCC,
                     const wchar_t *InBCC,
                     const wchar_t *InAttachments,
                     const wchar_t *InTextFile)
{
    return Imp->Send (InTo,
                      InFrom,
                      InText,
                      InSubject,
                      InCC,
                      InBCC,
                      InAttachments,
                      InTextFile);
}
long CMTMailw::Send (const STD(string) &InTo,
                     const STD(string) &InFrom,
                     const STD(string) &InText,
                     const STD(string) &InSubject,
                     const STD(string) &InCC,
                     const STD(string) &InBCC,
                     const STD(string) &InAttachments,
                     const STD(string) &InTextFile)
{
    return Imp->Send (InTo.c_str(),
                      InFrom.c_str(),
                      InText.c_str(),
                      InSubject.c_str(),
                      InCC.c_str(),
                      InBCC.c_str(),
                      InAttachments.c_str(),
                      InTextFile.c_str());
}
long CMTMailw::GetStatusCode (void) const
{
    return Imp->GetStatusCode();
}
const wchar_t* CMTMailw::GetStatusText (void) const
{
    return Imp->GetStatusText();
}
const STD(string)& CMTMailw::sGetStatusText ()
{
    return Imp->GetStatusTextString();
}

void CMTMailw::SetTextHTML (const long newVal)
{
    Imp->SetTextHTML(newVal);
}
const long CMTMailw::GetTextHTML()
{
    return Imp->GetTextHTML();
}
void CMTMailw::SetConfidential (const long newVal)
{
    Imp->SetConfidential(newVal);
}
const long CMTMailw::GetConfidential()
{
    return Imp->GetConfidential();
}
void CMTMailw::SetPrivate (const long newVal)
{
    Imp->SetPrivate(newVal);
}
const long CMTMailw::GetPrivate()
{
    return Imp->GetPrivate();
}
void CMTMailw::SetServer (const char *newVal, const char *InLocale)
{
    Imp->SetServer(newVal, InLocale);
}
void CMTMailw::SetServer (const wchar_t *newVal)
{
    Imp->SetServer (newVal);
}
void CMTMailw::SetServer (const STD(string) &newVal)
{
    Imp->SetServer (newVal.c_str());
}
void CMTMailw::SetCharset (const char *newVal)
{
    Imp->SetCharset(newVal);
}
void CMTMailw::SetCharset (const wchar_t *newVal)
{
    Imp->SetCharset(newVal);
}
void CMTMailw::SetCharset (const STD(string) &newVal)
{
    Imp->SetCharset(newVal.c_str());
}
long CMTMailw::Connect (const wchar_t *InServer)
{
    return Imp->Connect(InServer);
}
long CMTMailw::Disconnect()
{
    return Imp->Disconnect();
}

END_NAMESPACE


#ifdef _MANAGED

#include <vcclr.h>

using namespace System;

namespace Micron
{
    namespace Messaging
    {
        public __gc class Mail
        {
        public:
            Mail ()
            {
                mImp = new mti::CMTMailImp;
            }
            Mail (String *InTo,
                  String *InFrom,
                  String *InText,
                  String *InSubject,
                  String *InCC,
                  String *InBCC,
                  String *InAttachment, 
                  String *InTextFile)
            {
                const wchar_t __pin* strTo = PtrToStringChars(InTo);
                const wchar_t __pin* strFrom = PtrToStringChars(InFrom);
                const wchar_t __pin* strText = PtrToStringChars(InText);
                const wchar_t __pin* strSubject = PtrToStringChars(InSubject);
                const wchar_t __pin* strCC = PtrToStringChars(InCC);
                const wchar_t __pin* strBCC = PtrToStringChars(InBCC);
                const wchar_t __pin* strAttachment = PtrToStringChars(InAttachment);
                const wchar_t __pin* strTextFile = PtrToStringChars(InTextFile);

                mImp = new mti::CMTMailImp;

                mImp->Send (strTo, 
                            strFrom, 
                            strText, 
                            strSubject, 
                            strCC, 
                            strBCC, 
                            strAttachment, 
                            strTextFile);
            }
            ~Mail()
            {
                delete mImp;
            }

            __property void set_From (String* InStr ) 
            { 
                const wchar_t __pin* str = PtrToStringChars(InStr); 
                mImp->SetFrom(str);
            }
            __property String __gc* get_From() 
            { 
                return mImp->GetFrom(); 
            }

            __property void set_To (String* InStr ) 
            { 
                const wchar_t __pin* str = PtrToStringChars(InStr); 
                mImp->SetTo(str);
            }
            __property String __gc* get_To() 
            { 
                return mImp->GetTo(); 
            }
            __property void set_AppendTo (String* InStr ) 
            { 
                const wchar_t __pin* str = PtrToStringChars(InStr); 
                mImp->AppendTo(str);
            }

            __property void set_CC (String* InStr ) 
            { 
                const wchar_t __pin* str = PtrToStringChars(InStr); 
                mImp->SetCC(str);
            }
            __property String __gc* get_CC() 
            { 
                return mImp->GetCC(); 
            }
            __property void set_AppendCC (String* InStr ) 
            { 
                const wchar_t __pin* str = PtrToStringChars(InStr); 
                mImp->AppendCC(str);
            }

            __property void set_BCC (String* InStr ) 
            { 
                const wchar_t __pin* str = PtrToStringChars(InStr); 
                mImp->SetBCC(str);
            }
            __property String __gc* get_BCC() 
            { 
                return mImp->GetBCC(); 
            }
            __property void set_AppendBCC (String* InStr ) 
            { 
                const wchar_t __pin* str = PtrToStringChars(InStr); 
                mImp->AppendBCC(str);
            }

            __property void set_Subject (String* InStr ) 
            { 
                const wchar_t __pin* str = PtrToStringChars(InStr); 
                mImp->SetSubject(str);
            }
            __property String __gc* get_Subject() 
            { 
                return mImp->GetSubject(); 
            }

            __property void set_Text (String* InStr ) 
            { 
                const wchar_t __pin* str = PtrToStringChars(InStr); 
                mImp->SetText(str);
            }
            __property String __gc* get_Text() 
            { 
                return mImp->GetText(); 
            }
            __property void set_AppendText (String* InStr ) 
            { 
                const wchar_t __pin* str = PtrToStringChars(InStr); 
                mImp->AppendText(str);
            }

            __property void set_TextFile (String* InStr ) 
            { 
                const wchar_t __pin* str = PtrToStringChars(InStr); 
                mImp->SetTextFile(str);
            }
            __property String __gc* get_TextFile() 
            { 
                return mImp->GetTextFile(); 
            }

            __property void set_Attachment (String* InStr ) 
            { 
                const wchar_t __pin* str = PtrToStringChars(InStr); 
                mImp->SetAttachment(str);
            }
            __property String __gc* get_Attachment() 
            { 
                return mImp->GetAttachment(); 
            }

            

            __property void set_SmtpServer (String* InStr ) 
            { 
                const wchar_t __pin* str = PtrToStringChars(InStr); 
                mImp->SetServer(str);
            }

            __property void set_TextHTML (bool bFlag ) 
            { 
                mImp->SetTextHTML(bFlag);
            }
            __property bool get_TextHTML()
            {
                return ( mImp->GetTextHTML() != 0 );
            }

            __property void set_Confidential (bool bFlag ) 
            { 
                mImp->SetConfidential(bFlag);
            }
            __property bool get_Confidential()
            {
                return ( mImp->GetConfidential() != 0 );
            }

            __property void set_Private (bool bFlag ) 
            { 
                mImp->SetPrivate(bFlag);
            }
            __property bool get_Private()
            {
                return ( mImp->GetPrivate() != 0 );
            }


            __property String __gc* get_StatusText() 
            { 
                return mImp->GetStatusText(); 
            }
            __property long get_StatusCode()
            {
                return mImp->GetStatusCode();
            }



			__property void set_Calendar (String* InStr) 
            { 
                const wchar_t __pin* str = PtrToStringChars(InStr); 
                mImp->SetCalendar(str);
            }
            __property String __gc* get_Calendar() 
            { 
                return mImp->GetCalendar(); 
            }


			__property void set_Calendar (String* InMethod,
										  String* InUID,
										  String* InStartTime,
										  long    InDuration,
										  long    InReminderMinutes,
										  String* InLocation,
										  long    InRSVP) 
            { 
                const wchar_t __pin* strMethod = PtrToStringChars(InMethod);
				const wchar_t __pin* strUID = PtrToStringChars(InUID); 
				const wchar_t __pin* strStartTime = PtrToStringChars(InStartTime); 
				const wchar_t __pin* strLocation = PtrToStringChars(InLocation); 
                
				mImp->SetCalendar(strMethod, 
					              strUID, 
								  strStartTime, 
								  InDuration, 
								  InReminderMinutes, 
								  strLocation, 
								  InRSVP,
								  NULL,
								  0,
								  0,
								  NULL);
            }

			__property void set_Calendar (String* InMethod,
										  String* InUID,
										  String* InStartTime,
										  long    InDuration,
										  long    InReminderMinutes,
										  String* InLocation,
										  long    InRSVP,
										  String* InFreq,
                                          long    InCount,
                                          long    InInterval,
                                          String* InByDay) 
            { 
                const wchar_t __pin* strMethod = PtrToStringChars(InMethod);
				const wchar_t __pin* strUID = PtrToStringChars(InUID); 
				const wchar_t __pin* strStartTime = PtrToStringChars(InStartTime); 
				const wchar_t __pin* strLocation = PtrToStringChars(InLocation); 
                const wchar_t __pin* strFreq = PtrToStringChars(InFreq); 
                const wchar_t __pin* strByDay = PtrToStringChars(InByDay); 
                
				mImp->SetCalendar(strMethod, 
					              strUID, 
								  strStartTime, 
								  InDuration, 
								  InReminderMinutes, 
								  strLocation, 
								  InRSVP,
								  strFreq,
								  InCount,
								  InInterval,
								  strByDay);
            }



            bool Send () 
            {
                return ( mImp->Send() != 0 );
            }

            bool Send (String *InTo, 
                       String *InFrom, 
                       String *InText, 
                       String *InSubject) 
            {
                const wchar_t __pin* strTo = PtrToStringChars(InTo);
                const wchar_t __pin* strFrom = PtrToStringChars(InFrom);
                const wchar_t __pin* strText = PtrToStringChars(InText);
                const wchar_t __pin* strSubject = PtrToStringChars(InSubject);

                return ( mImp->Send (strTo, 
                                     strFrom, 
                                     strText, 
                                     strSubject, 
                                     L"", 
                                     L"", 
                                     L"", 
                                     L"") != 0 );
            }

            bool Send (String *InTo, 
                       String *InFrom, 
                       String *InText, 
                       String *InSubject, 
                       String *InCC) 
            {
                const wchar_t __pin* strTo = PtrToStringChars(InTo);
                const wchar_t __pin* strFrom = PtrToStringChars(InFrom);
                const wchar_t __pin* strText = PtrToStringChars(InText);
                const wchar_t __pin* strSubject = PtrToStringChars(InSubject);
                const wchar_t __pin* strCC = PtrToStringChars(InCC);

                return ( mImp->Send (strTo, 
                                     strFrom, 
                                     strText, 
                                     strSubject, 
                                     strCC, 
                                     L"", 
                                     L"", 
                                     L"") != 0 );
            }

            bool Send (String *InTo, 
                       String *InFrom, 
                       String *InText, 
                       String *InSubject, 
                       String *InCC, 
                       String *InBCC) 
            {
                const wchar_t __pin* strTo = PtrToStringChars(InTo);
                const wchar_t __pin* strFrom = PtrToStringChars(InFrom);
                const wchar_t __pin* strText = PtrToStringChars(InText);
                const wchar_t __pin* strSubject = PtrToStringChars(InSubject);
                const wchar_t __pin* strCC = PtrToStringChars(InCC);
                const wchar_t __pin* strBCC = PtrToStringChars(InBCC);

                return ( mImp->Send (strTo, 
                                     strFrom, 
                                     strText, 
                                     strSubject, 
                                     strCC, 
                                     strBCC, 
                                     L"", 
                                     L"") != 0 );
            }

            bool Send (String *InTo, 
                       String *InFrom, 
                       String *InText, 
                       String *InSubject, 
                       String *InCC, 
                       String *InBCC,
                       String *InAttachment) 
            {
                const wchar_t __pin* strTo = PtrToStringChars(InTo);
                const wchar_t __pin* strFrom = PtrToStringChars(InFrom);
                const wchar_t __pin* strText = PtrToStringChars(InText);
                const wchar_t __pin* strSubject = PtrToStringChars(InSubject);
                const wchar_t __pin* strCC = PtrToStringChars(InCC);
                const wchar_t __pin* strBCC = PtrToStringChars(InBCC);
                const wchar_t __pin* strAttachment = PtrToStringChars(InAttachment);

                return ( mImp->Send (strTo, 
                                     strFrom, 
                                     strText, 
                                     strSubject, 
                                     strCC, 
                                     strBCC, 
                                     strAttachment, 
                                     L"") != 0);
            }


            bool Send (String *InTo,
                       String *InFrom,
                       String *InText,
                       String *InSubject,
                       String *InCC,
                       String *InBCC,
                       String *InAttachment,
                       String *InTextFile)
            {
                const wchar_t __pin* strTo = PtrToStringChars(InTo);
                const wchar_t __pin* strFrom = PtrToStringChars(InFrom);
                const wchar_t __pin* strText = PtrToStringChars(InText);
                const wchar_t __pin* strSubject = PtrToStringChars(InSubject);
                const wchar_t __pin* strCC = PtrToStringChars(InCC);
                const wchar_t __pin* strBCC = PtrToStringChars(InBCC);
                const wchar_t __pin* strAttachment = PtrToStringChars(InAttachment);
                const wchar_t __pin* strTextFile = PtrToStringChars(InTextFile);

                return (mImp->Send (strTo, 
                                  strFrom, 
                                  strText, 
                                  strSubject, 
                                  strCC, 
                                  strBCC, 
                                  strAttachment, 
                                  strTextFile) != 0);
            }

            void Reset ()
            {
                mImp->Reset();
            }

            long Connect ()
            {
                return mImp->Connect(L"");
            }
            long Connect (String *SmtpServer)
            {
                const wchar_t __pin* strSmtpServer = PtrToStringChars(SmtpServer);
                return mImp->Connect(strSmtpServer);
            }
            long Disconnect ()
            {
                return mImp->Disconnect();
            }
        private:
            mti::CMTMailImp *mImp;
        };
    }
}

#endif



























/*******************************************************************************
**              <Standard Micron Copyright Information>
**
** Copyright 1999 Micron Technology, Inc. All Rights Reserved.
** Unpublished all rights reserved under the copyright laws of
** the United States. USE OF A COPYRIGHT NOTICE IS PRECAUTIONARY
** ONLY AND DOES NOT IMPLY PUBLICATION OR DISCLOSURE.
**
** THIS SOFTWARE CONTAINS CONFIDENTIAL INFORMATION AND
** TRADE SECRETS OF MICRON TECHNOLOGY, INC. USE, DISCLOSURE,
** OR REPRODUCTION IS PROHIBITED WITHOUT THE PRIOR EXPRESS
** WRITTEN PERMISSION OF MICRON TECHNOLOGY, INC.
*******************************************************************************/
/***********************************************************************
**
** CMTMailw.hpp                                              30-APR-1998
**
** Purpose: Prototype for MTMailw object class.
**
** MODIFICATION:
**
** DATE         PROGRAMMER           HISTORY
** --------     ---------------     ------------------------------------------------------
** 10/29/02     JFERGUSON           Added wide character class. 
**                                  Modified Implementation class to use the namespace 'mti'. 
**                                  Removed the 'USING_NAMESPACE(std)' line.
**
************************************************************************/

#ifndef __CMTMailw_H__
#define __CMTMailw_H__

#include <string> 
#include "rtldll.h"
#include "namespace.h"
#include "mtdattyp.h"

BEGIN_NAMESPACE(mti)

class CMTMailImp;           // Implentation class

class DllExport CMTMailw     //  Wide character Wrapper class (Exported)
{
public:

    CMTMailw (void);

    CMTMailw (const char *InTo,
              const char *InFrom = "",
              const char *InText = "",
              const char *InSubject = "",
              const char *InCC = "",
              const char *InBCC = "",
              const char *InAttachment = "",
              const char *InTextFile = "", 
              const char *InLocale = "");

    CMTMailw (const wchar_t *InTo,
              const wchar_t *InFrom = L"",
              const wchar_t *InText = L"",
              const wchar_t *InSubject = L"",
              const wchar_t *InCC = L"",
              const wchar_t *InBCC = L"",
              const wchar_t *InAttachment = L"",
              const wchar_t *InTextFile = L"");

    CMTMailw (const STD(string) &InTo,
              const STD(string) &InFrom = "",
              const STD(string) &InText = "",
              const STD(string) &InSubject = "",
              const STD(string) &InCC = "",
              const STD(string) &InBCC = "",
              const STD(string) &InAttachment = "",
              const STD(string) &InTextFile = "");

    CMTMailw (const CMTMailw &Mail);
    CMTMailw &operator= (const CMTMailw &Mail);
    ~CMTMailw (void);

    void SetFrom (const char *InAddress, const char *InLocale = "");
    void SetFrom (const wchar_t *InAddress);
    void SetFrom (const STD(string)& InAddress);

    const wchar_t* GetFrom ();
    const STD(string)& sGetFrom(void);

    void SetTo   (const char *InAddress, const char *InLocale = "");
    void SetTo   (const wchar_t *InAddress);
    void SetTo   (const STD(string)& InAddress);

    void AppendTo   (const char *InAddress, const char *InLocale = "");
    void AppendTo   (const wchar_t *InAddress);
    void AppendTo   (const STD(string)& InAddress);

    const wchar_t* GetTo ();
    const STD(string)& sGetTo(void);

    void SetCC   (const char *InAddress, const char *InLocale = "");
    void SetCC   (const wchar_t *InAddress);
    void SetCC   (const STD(string)& InAddress);

    void AppendCC   (const char *InAddress, const char *InLocale = "");
    void AppendCC   (const wchar_t *InAddress);
    void AppendCC   (const STD(string)& InAddress);

    const wchar_t* GetCC ();
    const STD(string)& sGetCC(void);

    void SetBCC  (const char *InAddress, const char *InLocale = "");
    void SetBCC  (const wchar_t *InAddress);
    void SetBCC  (const STD(string)& InAddress);

    void AppendBCC   (const char *InAddress, const char *InLocale = "");
    void AppendBCC   (const wchar_t *InAddress);
    void AppendBCC   (const STD(string)& InAddress);

    const wchar_t* GetBCC ();
    const STD(string)& sGetBCC(void);

    void SetSubject (const char *InSubject, const char *InLocale = "");
    void SetSubject (const wchar_t *InSubject);
    void SetSubject (const STD(string)& InSubject);

    const wchar_t* GetSubject ();
    const STD(string)& sGetSubject(void);

    void SetText    (const char *InText, const char *InLocale = "");
    void SetText    (const wchar_t *InText);
    void SetText    (const STD(string)& InText);

    void AppendText (const char *InText, const char *InLocale = "");
    void AppendText (const wchar_t *InText);
    void AppendText (const STD(string)& InText);


    const wchar_t* GetText ();
    const STD(string)& sGetText(void);
    const long GetTextLength ();

    void SetTextFile (const char *InFilename, const char *InLocale = "");
    void SetTextFile (const wchar_t *InFilename);
    void SetTextFile (const STD(string)& InFilename);

    const wchar_t* GetTextFile ();
    const STD(string)& sGetTextFile(void);

    void SetAttachment  (const char *InFilename, const char *InLocale = "");
    void SetAttachment  (const wchar_t *InFilename);
    void SetAttachment  (const STD(string)& InFilename);


    const wchar_t* GetAttachment ();
    const STD(string)& sGetAttachment(void);


    void SetCalendar  (const char *InCalendar, const char *InLocale = "");
    void SetCalendar  (const wchar_t *InCalendar);
    void SetCalendar  (const STD(string)& InCalendar);

    const wchar_t* GetCalendar ();
    const STD(string)& sGetCalendar(void);


    void SetCalendar (const wchar_t *InMethod,
                      const wchar_t *InUID,
                      const wchar_t *InStartTime,
                      const long    InDuration,
                      const long    InReminderMinutes,
                      const wchar_t *InLocation,
                      const long    InRSVP);


    void SetCalendar (const wchar_t *InMethod,
                      const wchar_t *InUID,
                      const wchar_t *InStartTime,
                      const long    InDuration,
                      const long    InReminderMinutes,
                      const wchar_t *InLocation,
                      const long    InRSVP,
                      const wchar_t *InFreq,
                      const long     InCount,
                      const long     InInterval,
                      const wchar_t  *InByDay = L"");


    

    void Reset (void);

    long Send (void);

    long Send (const char *InTo,
               const char *InFrom = "",
               const char *InText = "",
               const char *InSubject = "",
               const char *InCC = "",
               const char *InBCC = "",
               const char *InAttachment = "",
               const char *InTextFile = "", 
               const char *InLocale = "");

    long Send (const wchar_t *InTo,
               const wchar_t *InFrom = L"",
               const wchar_t *InText = L"",
               const wchar_t *InSubject = L"",
               const wchar_t *InCC = L"",
               const wchar_t *InBCC = L"",
               const wchar_t *InAttachment = L"",
               const wchar_t *InTextFile = L"");

    long Send (const STD(string)& InTo,
               const STD(string)& InFrom = "",
               const STD(string)& InText = "",
               const STD(string)& InSubject = "",
               const STD(string)& InCC = "",
               const STD(string)& InBCC = "",
               const STD(string)& InAttachment = "",
               const STD(string)& InTextFile = "");

    long GetStatusCode (void) const;
    const wchar_t* GetStatusText (void) const;
    const STD(string)& sGetStatusText(void);

    void SetTextHTML (const long bHTML);
    const long GetTextHTML();

    void SetServer (const char *InHostName, const char *InLocale = "");
    void SetServer (const wchar_t *InHostName);
    void SetServer (const STD(string)& InHostName);

    void SetConfidential (const long newVal);
    const long GetConfidential();

    void SetPrivate (const long newVal);
    const long GetPrivate();
    
    void SetCharset (const char *InCharset);
    void SetCharset (const wchar_t *InCharset);
    void SetCharset (const STD(string)& InCharset);

    long Connect (const wchar_t *InServer = L"");
    long Disconnect();





private:
    CMTMailImp *Imp;
};

END_NAMESPACE

#endif /* __CMTMailw_H__ */


























Test linking starts ...!!!
/mu/bin/g++ -o  libmtcrypto_shared_tester src/UnitTests/CMTAESUnitTest.o src/UnitTests/CMTCryptoUnitTest.o src/UnitTests/CMTMD5UnitTest.o src/UnitTests/DesUnitTest.o -pthread -std=c++14 -Wl,--enable-new-dtags -Wl,-rpath,.,-rpath,/mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/lib:/home/sysprog/libraries/stage/Linux/MU-RHEL90/gcc1131/lib:/mu/mtsdk/corplib/gcc1131/lib:/home/sysprog/libraries/build/gcc1131-rhel9/libmtcrypto_static -L/mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/lib -L/home/sysprog/libraries/stage/Linux/MU-RHEL90/gcc1131/lib -L/mu/mtsdk/corplib/gcc1131/lib -L/home/sysprog/libraries/build/gcc1131-rhel9/libmtcrypto_static -L/opt/ADO_Agent02/_work/2/s -lmtcrypto -lcppunit -ldl -lcmtexception
/usr/bin/ld: src/UnitTests/CMTAESUnitTest.o: in function `CMTAESUnitTest::testCryptoExceptionExtractor()':
/home/aalugani/IOSS-lib-MTCryptoRHEL9-Linux/src/UnitTests/CMTAESUnitTest.cpp:2570: undefined reference to `mti::operator<<(std::ostream&, mti::CMTCryptoException const&)'
/usr/bin/ld: src/UnitTests/CMTAESUnitTest.o: in function `CMTAESUnitTest::testCryptoExceptionExtractorNoContext()':
/home/aalugani/IOSS-lib-MTCryptoRHEL9-Linux/src/UnitTests/CMTAESUnitTest.cpp:2587: undefined reference to `mti::operator<<(std::ostream&, mti::CMTCryptoException const&)'
/usr/bin/ld: src/UnitTests/CMTAESUnitTest.o: in function `CMTAESUnitTest::testCryptoExceptionExtractorNoCode()':
/home/aalugani/IOSS-lib-MTCryptoRHEL9-Linux/src/UnitTests/CMTAESUnitTest.cpp:2604: undefined reference to `mti::operator<<(std::ostream&, mti::CMTCryptoException const&)'
/usr/bin/ld: src/UnitTests/CMTAESUnitTest.o: in function `CMTAESUnitTest::testCryptoExceptionExtractorNoMessage()':
/home/aalugani/IOSS-lib-MTCryptoRHEL9-Linux/src/UnitTests/CMTAESUnitTest.cpp:2621: undefined reference to `mti::operator<<(std::ostream&, mti::CMTCryptoException const&)'












# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.20

# Delete rule output on recipe failure.
.DELETE_ON_ERROR:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/aalugani/xalan_c-1.12

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/aalugani/xalan_c-1.12

# Include any dependencies generated for this target.
include samples/CMakeFiles/XalanTransformerCallback.dir/depend.make
# Include any dependencies generated by the compiler for this target.
include samples/CMakeFiles/XalanTransformerCallback.dir/compiler_depend.make

# Include the progress variables for this target.
include samples/CMakeFiles/XalanTransformerCallback.dir/progress.make

# Include the compile flags for this target's objects.
include samples/CMakeFiles/XalanTransformerCallback.dir/flags.make

samples/CMakeFiles/XalanTransformerCallback.dir/XalanTransformerCallback/XalanTransformerCallback.cpp.o: samples/CMakeFiles/XalanTransformerCallback.dir/flags.make
samples/CMakeFiles/XalanTransformerCallback.dir/XalanTransformerCallback/XalanTransformerCallback.cpp.o: samples/XalanTransformerCallback/XalanTransformerCallback.cpp
samples/CMakeFiles/XalanTransformerCallback.dir/XalanTransformerCallback/XalanTransformerCallback.cpp.o: samples/CMakeFiles/XalanTransformerCallback.dir/compiler_depend.ts
        @$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir=/home/aalugani/xalan_c-1.12/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) "Building CXX object samples/CMakeFiles/XalanTransformerCallback.dir/XalanTransformerCallback/XalanTransformerCallback.cpp.o"
        cd /home/aalugani/xalan_c-1.12/samples && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -MD -MT samples/CMakeFiles/XalanTransformerCallback.dir/XalanTransformerCallback/XalanTransformerCallback.cpp.o -MF CMakeFiles/XalanTransformerCallback.dir/XalanTransformerCallback/XalanTransformerCallback.cpp.o.d -o CMakeFiles/XalanTransformerCallback.dir/XalanTransformerCallback/XalanTransformerCallback.cpp.o -c /home/aalugani/xalan_c-1.12/samples/XalanTransformerCallback/XalanTransformerCallback.cpp

samples/CMakeFiles/XalanTransformerCallback.dir/XalanTransformerCallback/XalanTransformerCallback.cpp.i: cmake_force
        @$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/XalanTransformerCallback.dir/XalanTransformerCallback/XalanTransformerCallback.cpp.i"
        cd /home/aalugani/xalan_c-1.12/samples && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E /home/aalugani/xalan_c-1.12/samples/XalanTransformerCallback/XalanTransformerCallback.cpp > CMakeFiles/XalanTransformerCallback.dir/XalanTransformerCallback/XalanTransformerCallback.cpp.i

samples/CMakeFiles/XalanTransformerCallback.dir/XalanTransformerCallback/XalanTransformerCallback.cpp.s: cmake_force
        @$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/XalanTransformerCallback.dir/XalanTransformerCallback/XalanTransformerCallback.cpp.s"
        cd /home/aalugani/xalan_c-1.12/samples && /usr/bin/c++ $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S /home/aalugani/xalan_c-1.12/samples/XalanTransformerCallback/XalanTransformerCallback.cpp -o CMakeFiles/XalanTransformerCallback.dir/XalanTransformerCallback/XalanTransformerCallback.cpp.s

# Object files for target XalanTransformerCallback
XalanTransformerCallback_OBJECTS = \
"CMakeFiles/XalanTransformerCallback.dir/XalanTransformerCallback/XalanTransformerCallback.cpp.o"

# External object files for target XalanTransformerCallback
XalanTransformerCallback_EXTERNAL_OBJECTS =

samples/XalanTransformerCallback: samples/CMakeFiles/XalanTransformerCallback.dir/XalanTransformerCallback/XalanTransformerCallback.cpp.o
samples/XalanTransformerCallback: samples/CMakeFiles/XalanTransformerCallback.dir/build.make
samples/XalanTransformerCallback: src/xalanc/libxalan-c.so.112.0
samples/XalanTransformerCallback: src/xalanc/Utils/XalanMsgLib/libxalanMsg.so.112.0
samples/XalanTransformerCallback: /home/aalugani/xerces-c-3.2.4/src/.libs/libxerces-c-3.2.so
samples/XalanTransformerCallback: samples/CMakeFiles/XalanTransformerCallback.dir/link.txt
        @$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --bold --progress-dir=/home/aalugani/xalan_c-1.12/CMakeFiles --progress-num=$(CMAKE_PROGRESS_2) "Linking CXX executable XalanTransformerCallback"
        cd /home/aalugani/xalan_c-1.12/samples && $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/XalanTransformerCallback.dir/link.txt --verbose=$(VERBOSE)

# Rule to build all files generated by this target.
samples/CMakeFiles/XalanTransformerCallback.dir/build: samples/XalanTransformerCallback
.PHONY : samples/CMakeFiles/XalanTransformerCallback.dir/build

samples/CMakeFiles/XalanTransformerCallback.dir/clean:
        cd /home/aalugani/xalan_c-1.12/samples && $(CMAKE_COMMAND) -P CMakeFiles/XalanTransformerCallback.dir/cmake_clean.cmake
.PHONY : samples/CMakeFiles/XalanTransformerCallback.dir/clean

samples/CMakeFiles/XalanTransformerCallback.dir/depend:
        cd /home/aalugani/xalan_c-1.12 && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /home/aalugani/xalan_c-1.12 /home/aalugani/xalan_c-1.12/samples /home/aalugani/xalan_c-1.12 /home/aalugani/xalan_c-1.12/samples /home/aalugani/xalan_c-1.12/samples/CMakeFiles/XalanTransformerCallback.dir/DependInfo.cmake --color=$(COLOR)
.PHONY : samples/CMakeFiles/XalanTransformerCallback.dir/depend


























# CMake build for xalan-c
#
# Written by Roger Leigh <rleigh@codelibre.net>
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

add_custom_target(samples COMMENT Build sample programs)
set_target_properties(samples PROPERTIES FOLDER "Samples")

# ApacheModuleXSLT?
foreach(sample
    CompileStylesheet
    DocumentBuilder
    EntityResolver
    ExternalFunction
    ParsedSourceWrappers
    SerializeNodeSet
    SimpleTransform
    SimpleXPathAPI
    StreamTransform
    TraceListen
    TransformToXercesDOM
    UseStylesheetParam
    XalanTransform
    XalanTransformerCallback
    ThreadSafe)
  add_executable(${sample} ${sample}/${sample}.cpp)
  target_link_libraries(${sample} XalanC::XalanC)
  set_target_properties(${sample} PROPERTIES FOLDER "Samples")
  add_dependencies(samples ${sample})
endforeach()

foreach(sample
    SimpleXPathCAPI)
  add_executable(${sample} ${sample}/${sample}.c)
  target_link_libraries(${sample} XalanC::XalanC)
  set_target_properties(${sample} PROPERTIES FOLDER "Samples")
  add_dependencies(samples ${sample})
endforeach()

foreach(sample
        CompileStylesheet
        DocumentBuilder
        EntityResolver
        ExternalFunction
        ParsedSourceWrappers
        SimpleTransform
        StreamTransform
        ThreadSafe)
  add_test(NAME ${sample}
           COMMAND $<TARGET_FILE:${sample}>
           WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/${sample}")
endforeach()

add_test(NAME SerializeNodeSet
         COMMAND $<TARGET_FILE:SerializeNodeSet> "foo.xml" "/doc" "name[@first='David']"
         WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/SerializeNodeSet")

add_test(NAME SimpleXPathAPI-1
        COMMAND $<TARGET_FILE:SimpleXPathAPI> "foo.xml" "/foo:doc" "foo:name/@last"
        WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/SimpleXPathAPI")

add_test(NAME SimpleXPathAPI-2
        COMMAND $<TARGET_FILE:SimpleXPathAPI> "foo.xml" "/" "//foo:name[position()=\"4\"]/@first"
        WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/SimpleXPathAPI")

add_test(NAME TraceListen-1
        COMMAND $<TARGET_FILE:TraceListen> "-tt"
        WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/TraceListen")

add_test(NAME TraceListen-2
        COMMAND $<TARGET_FILE:TraceListen> "-tg"
        WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/TraceListen")

add_test(NAME TraceListen-3
        COMMAND $<TARGET_FILE:TraceListen> "-ts"
        WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/TraceListen")

add_test(NAME TraceListen-4
        COMMAND $<TARGET_FILE:TraceListen> "-ttc"
        WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/TraceListen")

add_test(NAME TransformToXercesDOM
        COMMAND $<TARGET_FILE:TransformToXercesDOM> "birds.xml" "birds.xsl"
        WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/TransformToXercesDOM")

add_test(NAME UseStylesheetParam
        COMMAND $<TARGET_FILE:UseStylesheetParam>
          "foo.xml" "foo.xslt" "foo.out"
          "-s" "stringA" "'This is a test string value'"
          "-n" "numberA"  "123.012345"
          "-d" "parmA" "parmA.xml"
          "-d" "parmB" "parmB.xml"
        WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/UseStylesheetParam")

add_test(NAME XalanTransform
        COMMAND $<TARGET_FILE:XalanTransform> "foo.xml" "foo.xsl"
        WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/XalanTransform")

add_test(NAME XalanTransformerCallback
        COMMAND $<TARGET_FILE:XalanTransformerCallback> "foo.xml" "foo.xsl"
        WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/XalanTransformerCallback")

add_test(NAME SimpleXPathCAPI
        COMMAND $<TARGET_FILE:SimpleXPathCAPI> "foo.xml" "/doc/name[3]"
        WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/SimpleXPathCAPI")

foreach(sample
        CompileStylesheet
        DocumentBuilder
        EntityResolver
        ExternalFunction
        ParsedSourceWrappers
        SimpleTransform
        StreamTransform
        ThreadSafe
        SerializeNodeSet
        SimpleXPathAPI-1
        SimpleXPathAPI-2
        TraceListen-1
        TraceListen-2
        TraceListen-3
        TraceListen-4
        TransformToXercesDOM
        UseStylesheetParam
        XalanTransform
        XalanTransformerCallback
        SimpleXPathCAPI)
  if(msgloader STREQUAL "nls")
    set_tests_properties(${sample} PROPERTIES ENVIRONMENT "NLSPATH=${PROJECT_BINARY_DIR}/src/xalanc/NLS/gen/Xalan.cat")
  endif()
  if(WIN32)
    string(REPLACE ";" "\\;" OLDPATH "$ENV{PATH}")
    set_tests_properties(${sample} PROPERTIES ENVIRONMENT "PATH=$<SHELL_PATH:$<TARGET_FILE_DIR:xalan-c>>\;$<SHELL_PATH:$<TARGET_FILE_DIR:xalanMsg>>\;${OLDPATH}")
  endif()
endforeach()























[aalugani@bol9dev01 xalan_c-1.12]$ cat Makefile
# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.20

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/aalugani/xalan_c-1.12

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/aalugani/xalan_c-1.12

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target install/strip
install/strip: preinstall
        @$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
        /usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
        @$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
        /usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# Special rule for the target install/local
install/local: preinstall
        @$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
        /usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
        @$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
        /usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install
install: preinstall
        @$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
        /usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
        @$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
        /usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target list_install_components
list_install_components:
        @$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\" \"development\" \"runtime\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target rebuild_cache
rebuild_cache:
        @$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
        /usr/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target edit_cache
edit_cache:
        @$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
        /usr/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target test
test:
        @$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running tests..."
        /usr/bin/ctest --force-new-ctest-process $(ARGS)
.PHONY : test

# Special rule for the target test
test/fast: test
.PHONY : test/fast

# The main all target
all: cmake_check_build_system
        $(CMAKE_COMMAND) -E cmake_progress_start /home/aalugani/xalan_c-1.12/CMakeFiles /home/aalugani/xalan_c-1.12//CMakeFiles/progress.marks
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all
        $(CMAKE_COMMAND) -E cmake_progress_start /home/aalugani/xalan_c-1.12/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
        $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named MsgCreator

# Build rule for target.
MsgCreator: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 MsgCreator
.PHONY : MsgCreator

# fast build rule for target.
MsgCreator/fast:
        $(MAKE) $(MAKESILENT) -f src/xalanc/Utils/MsgCreator/CMakeFiles/MsgCreator.dir/build.make src/xalanc/Utils/MsgCreator/CMakeFiles/MsgCreator.dir/build
.PHONY : MsgCreator/fast

#=============================================================================
# Target rules for targets named inmemory-dependencies

# Build rule for target.
inmemory-dependencies: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 inmemory-dependencies
.PHONY : inmemory-dependencies

# fast build rule for target.
inmemory-dependencies/fast:
        $(MAKE) $(MAKESILENT) -f src/xalanc/Utils/CMakeFiles/inmemory-dependencies.dir/build.make src/xalanc/Utils/CMakeFiles/inmemory-dependencies.dir/build
.PHONY : inmemory-dependencies/fast

#=============================================================================
# Target rules for targets named locale

# Build rule for target.
locale: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 locale
.PHONY : locale

# fast build rule for target.
locale/fast:
        $(MAKE) $(MAKESILENT) -f src/xalanc/Utils/CMakeFiles/locale.dir/build.make src/xalanc/Utils/CMakeFiles/locale.dir/build
.PHONY : locale/fast

#=============================================================================
# Target rules for targets named xalanMsg

# Build rule for target.
xalanMsg: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 xalanMsg
.PHONY : xalanMsg

# fast build rule for target.
xalanMsg/fast:
        $(MAKE) $(MAKESILENT) -f src/xalanc/Utils/XalanMsgLib/CMakeFiles/xalanMsg.dir/build.make src/xalanc/Utils/XalanMsgLib/CMakeFiles/xalanMsg.dir/build
.PHONY : xalanMsg/fast

#=============================================================================
# Target rules for targets named Xalan

# Build rule for target.
Xalan: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Xalan
.PHONY : Xalan

# fast build rule for target.
Xalan/fast:
        $(MAKE) $(MAKESILENT) -f src/xalanc/CMakeFiles/Xalan.dir/build.make src/xalanc/CMakeFiles/Xalan.dir/build
.PHONY : Xalan/fast

#=============================================================================
# Target rules for targets named xalan-c

# Build rule for target.
xalan-c: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 xalan-c
.PHONY : xalan-c

# fast build rule for target.
xalan-c/fast:
        $(MAKE) $(MAKESILENT) -f src/xalanc/CMakeFiles/xalan-c.dir/build.make src/xalanc/CMakeFiles/xalan-c.dir/build
.PHONY : xalan-c/fast

#=============================================================================
# Target rules for targets named xalan-c-headers

# Build rule for target.
xalan-c-headers: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 xalan-c-headers
.PHONY : xalan-c-headers

# fast build rule for target.
xalan-c-headers/fast:
        $(MAKE) $(MAKESILENT) -f src/xalanc/CMakeFiles/xalan-c-headers.dir/build.make src/xalanc/CMakeFiles/xalan-c-headers.dir/build
.PHONY : xalan-c-headers/fast

#=============================================================================
# Target rules for targets named TestXSLT

# Build rule for target.
TestXSLT: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 TestXSLT
.PHONY : TestXSLT

# fast build rule for target.
TestXSLT/fast:
        $(MAKE) $(MAKESILENT) -f src/xalanc/TestXSLT/CMakeFiles/TestXSLT.dir/build.make src/xalanc/TestXSLT/CMakeFiles/TestXSLT.dir/build
.PHONY : TestXSLT/fast

#=============================================================================
# Target rules for targets named TestXPath

# Build rule for target.
TestXPath: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 TestXPath
.PHONY : TestXPath

# fast build rule for target.
TestXPath/fast:
        $(MAKE) $(MAKESILENT) -f src/xalanc/TestXPath/CMakeFiles/TestXPath.dir/build.make src/xalanc/TestXPath/CMakeFiles/TestXPath.dir/build
.PHONY : TestXPath/fast

#=============================================================================
# Target rules for targets named XalanTransformerCallback

# Build rule for target.
XalanTransformerCallback: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 XalanTransformerCallback
.PHONY : XalanTransformerCallback

# fast build rule for target.
XalanTransformerCallback/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/XalanTransformerCallback.dir/build.make samples/CMakeFiles/XalanTransformerCallback.dir/build
.PHONY : XalanTransformerCallback/fast

#=============================================================================
# Target rules for targets named XalanTransform

# Build rule for target.
XalanTransform: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 XalanTransform
.PHONY : XalanTransform

# fast build rule for target.
XalanTransform/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/XalanTransform.dir/build.make samples/CMakeFiles/XalanTransform.dir/build
.PHONY : XalanTransform/fast

#=============================================================================
# Target rules for targets named samples

# Build rule for target.
samples: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 samples
.PHONY : samples

# fast build rule for target.
samples/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/samples.dir/build.make samples/CMakeFiles/samples.dir/build
.PHONY : samples/fast

#=============================================================================
# Target rules for targets named SimpleXPathAPI

# Build rule for target.
SimpleXPathAPI: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 SimpleXPathAPI
.PHONY : SimpleXPathAPI

# fast build rule for target.
SimpleXPathAPI/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/SimpleXPathAPI.dir/build.make samples/CMakeFiles/SimpleXPathAPI.dir/build
.PHONY : SimpleXPathAPI/fast

#=============================================================================
# Target rules for targets named TransformToXercesDOM

# Build rule for target.
TransformToXercesDOM: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 TransformToXercesDOM
.PHONY : TransformToXercesDOM

# fast build rule for target.
TransformToXercesDOM/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/TransformToXercesDOM.dir/build.make samples/CMakeFiles/TransformToXercesDOM.dir/build
.PHONY : TransformToXercesDOM/fast

#=============================================================================
# Target rules for targets named CompileStylesheet

# Build rule for target.
CompileStylesheet: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 CompileStylesheet
.PHONY : CompileStylesheet

# fast build rule for target.
CompileStylesheet/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/CompileStylesheet.dir/build.make samples/CMakeFiles/CompileStylesheet.dir/build
.PHONY : CompileStylesheet/fast

#=============================================================================
# Target rules for targets named DocumentBuilder

# Build rule for target.
DocumentBuilder: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 DocumentBuilder
.PHONY : DocumentBuilder

# fast build rule for target.
DocumentBuilder/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/DocumentBuilder.dir/build.make samples/CMakeFiles/DocumentBuilder.dir/build
.PHONY : DocumentBuilder/fast

#=============================================================================
# Target rules for targets named ExternalFunction

# Build rule for target.
ExternalFunction: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ExternalFunction
.PHONY : ExternalFunction

# fast build rule for target.
ExternalFunction/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/ExternalFunction.dir/build.make samples/CMakeFiles/ExternalFunction.dir/build
.PHONY : ExternalFunction/fast

#=============================================================================
# Target rules for targets named ThreadSafe

# Build rule for target.
ThreadSafe: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ThreadSafe
.PHONY : ThreadSafe

# fast build rule for target.
ThreadSafe/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/ThreadSafe.dir/build.make samples/CMakeFiles/ThreadSafe.dir/build
.PHONY : ThreadSafe/fast

#=============================================================================
# Target rules for targets named ParsedSourceWrappers

# Build rule for target.
ParsedSourceWrappers: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ParsedSourceWrappers
.PHONY : ParsedSourceWrappers

# fast build rule for target.
ParsedSourceWrappers/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/ParsedSourceWrappers.dir/build.make samples/CMakeFiles/ParsedSourceWrappers.dir/build
.PHONY : ParsedSourceWrappers/fast

#=============================================================================
# Target rules for targets named SimpleXPathCAPI

# Build rule for target.
SimpleXPathCAPI: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 SimpleXPathCAPI
.PHONY : SimpleXPathCAPI

# fast build rule for target.
SimpleXPathCAPI/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/SimpleXPathCAPI.dir/build.make samples/CMakeFiles/SimpleXPathCAPI.dir/build
.PHONY : SimpleXPathCAPI/fast

#=============================================================================
# Target rules for targets named EntityResolver

# Build rule for target.
EntityResolver: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 EntityResolver
.PHONY : EntityResolver

# fast build rule for target.
EntityResolver/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/EntityResolver.dir/build.make samples/CMakeFiles/EntityResolver.dir/build
.PHONY : EntityResolver/fast

#=============================================================================
# Target rules for targets named SerializeNodeSet

# Build rule for target.
SerializeNodeSet: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 SerializeNodeSet
.PHONY : SerializeNodeSet

# fast build rule for target.
SerializeNodeSet/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/SerializeNodeSet.dir/build.make samples/CMakeFiles/SerializeNodeSet.dir/build
.PHONY : SerializeNodeSet/fast

#=============================================================================
# Target rules for targets named StreamTransform

# Build rule for target.
StreamTransform: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 StreamTransform
.PHONY : StreamTransform

# fast build rule for target.
StreamTransform/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/StreamTransform.dir/build.make samples/CMakeFiles/StreamTransform.dir/build
.PHONY : StreamTransform/fast

#=============================================================================
# Target rules for targets named UseStylesheetParam

# Build rule for target.
UseStylesheetParam: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 UseStylesheetParam
.PHONY : UseStylesheetParam

# fast build rule for target.
UseStylesheetParam/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/UseStylesheetParam.dir/build.make samples/CMakeFiles/UseStylesheetParam.dir/build
.PHONY : UseStylesheetParam/fast

#=============================================================================
# Target rules for targets named SimpleTransform

# Build rule for target.
SimpleTransform: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 SimpleTransform
.PHONY : SimpleTransform

# fast build rule for target.
SimpleTransform/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/SimpleTransform.dir/build.make samples/CMakeFiles/SimpleTransform.dir/build
.PHONY : SimpleTransform/fast

#=============================================================================
# Target rules for targets named TraceListen

# Build rule for target.
TraceListen: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 TraceListen
.PHONY : TraceListen

# fast build rule for target.
TraceListen/fast:
        $(MAKE) $(MAKESILENT) -f samples/CMakeFiles/TraceListen.dir/build.make samples/CMakeFiles/TraceListen.dir/build
.PHONY : TraceListen/fast

#=============================================================================
# Target rules for targets named Conf

# Build rule for target.
Conf: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Conf
.PHONY : Conf

# fast build rule for target.
Conf/fast:
        $(MAKE) $(MAKESILENT) -f Tests/CMakeFiles/Conf.dir/build.make Tests/CMakeFiles/Conf.dir/build
.PHONY : Conf/fast

#=============================================================================
# Target rules for targets named Threads

# Build rule for target.
Threads: cmake_check_build_system
        $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 Threads
.PHONY : Threads

# fast build rule for target.
Threads/fast:
        $(MAKE) $(MAKESILENT) -f Tests/CMakeFiles/Threads.dir/build.make Tests/CMakeFiles/Threads.dir/build
.PHONY : Threads/fast











# CMake build for xalan-c
#
# Written by Roger Leigh <rleigh@codelibre.net>
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Run "cmake" to generate the build files for your platform

cmake_minimum_required(VERSION 3.2.0)

# Use new variable expansion policy.
if (POLICY CMP0053)
  cmake_policy(SET CMP0053 NEW)
endif(POLICY CMP0053)
if (POLICY CMP0054)
  cmake_policy(SET CMP0054 NEW)
endif(POLICY CMP0054)
if (POLICY CMP0067)
  cmake_policy(SET CMP0067 NEW)
endif(POLICY CMP0067)

# Try C++14, then fall back to C++11 and C++98.  Used for feature tests
# for optional features.
set(CMAKE_CXX_STANDARD 14)

# Use folders (for IDE project grouping)
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

# Source additional modules from the "cmake" directory
list(APPEND CMAKE_MODULE_PATH
     "${CMAKE_CURRENT_LIST_DIR}/cmake")

# Project version
project(xalan-c
        VERSION 1.12.0
        LANGUAGES C CXX)

# Library version
set(XALAN_LIB_MAJOR_VER 112)
set(XALAN_LIB_MINOR_VER 0)
set(XALAN_MS_LIB_MAJOR_VER 1)
set(XALAN_MS_LIB_MINOR_VER 12)

message(STATUS "Configuring Apache Xalan-C++ version ${xalan-c_VERSION}")

enable_testing()
find_package(Threads REQUIRED)
include(Doxygen)
include(GNUInstallDirs)
include(XalanDLL)
include(XalanWarnings)
include(XalanFunctions)
include(XalanHeaders)
include(XalanWindows)
include(XalanICU)
include(XalanXerces)
include(XalanSystemEncodingSelection)
include(XalanThreadSelection)
include(XalanMsgLoaderSelection)
include(XalanTranscoderSelection)
include(XalanOperatorDelete)
include(XalanPathMax)
include(XalanLFS)

# Generate pkg-config file
set(pkgconfig-dir "${CMAKE_INSTALL_LIBDIR}/pkgconfig" CACHE STRING "pkg-config installation directory (default ${CMAKE_INSTALL_LIBDIR}/pkgconfig)")
set(PKGCONFIGDIR "${pkgconfig-dir}")

set(prefix "${CMAKE_INSTALL_PREFIX}")
set(exec_prefix "${CMAKE_INSTALL_PREFIX}")
set(libdir "${CMAKE_INSTALL_FULL_LIBDIR}")
set(includedir "${CMAKE_INSTALL_FULL_INCLUDEDIR}")
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/xalan-c.pc.in
               ${CMAKE_CURRENT_BINARY_DIR}/xalan-c.pc)
install(
  FILES ${CMAKE_CURRENT_BINARY_DIR}/xalan-c.pc
  DESTINATION "${PKGCONFIGDIR}"
  COMPONENT "development")

# Process subdirectories
add_subdirectory(src/xalanc/Utils/MsgCreator)
add_subdirectory(src/xalanc/Utils)
add_subdirectory(src/xalanc/Utils/XalanMsgLib)
add_subdirectory(src/xalanc)
add_subdirectory(src/xalanc/TestXSLT)
add_subdirectory(src/xalanc/TestXPath)
add_subdirectory(samples)
add_subdirectory(Tests)
add_subdirectory(docs/doxygen)

# Display configuration summary
message(STATUS "")
message(STATUS "Xalan-C++ configuration summary")
message(STATUS "-------------------------------")
message(STATUS "")
message(STATUS "  Version:                     ${xalan-c_VERSION}")
if(MSVC)
message(STATUS "  Library major version:       ${XALAN_MS_LIB_MAJOR_VER}")
message(STATUS "  Library minor version:       ${XALAN_MS_LIB_MINOR_VER}")
else()
message(STATUS "  Library major version:       ${XALAN_LIB_MAJOR_VER}")
message(STATUS "  Library minor version:       ${XALAN_LIB_MINOR_VER}")
endif()
message(STATUS "")
message(STATUS "  Installation directory:      ${prefix}")
message(STATUS "  C compiler:                  ${CMAKE_C_COMPILER}")
message(STATUS "  C++ compiler:                ${CMAKE_CXX_COMPILER}")
message(STATUS "")
message(STATUS "  Build shared libraries:      ${BUILD_SHARED_LIBS}")
message(STATUS "  Thread implementation:       ${thread}")
message(STATUS "  Transcoder:                  ${transcoder}")
message(STATUS "  Message Loader:              ${msgloader}")
message(STATUS "  Message Loader Locale:       ${message-locale}")







cmake -DXercesC_LIBRARY=/home/aalugani/xerces-c-3.2.4/src/.libs/libxerces-c-3.2.so -DXercesC_INCLUDE_DIR=/home/aalugani/xerces-c-3.2.4/src  ./








Linking CXX executable TestXSLT
[ 90%] Built target TestXSLT
[ 90%] Building CXX object src/xalanc/TestXPath/CMakeFiles/TestXPath.dir/NodeNameTreeWalker.cpp.o
[ 90%] Building CXX object src/xalanc/TestXPath/CMakeFiles/TestXPath.dir/TestXPath.cpp.o
In file included from /home/aalugani/xalan_c-1.12/src/xalanc/XPath/MutableNodeRefList.hpp:28,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/XPath/XPathExecutionContext.hpp:45,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/XPath/XObject.hpp:44,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/XSLT/XalanParamHolder.hpp:31,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/XalanTransformer/XalanTransformer.hpp:37,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:22:
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/NodeRefList.hpp: In member function ‘void xalanc_1_12::NodeRefList::ensureAllocation(xalanc_1_12::XalanVector<xalanc_1_12::XalanNode*>::size_type)’:
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/NodeRefList.hpp:134:57: warning: enumerated and non-enumerated type in conditional expression [-Wextra]
  134 |         m_nodeList.reserve(eDefaultVectorSize > theSize ? eDefaultVectorSize : theSize);
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/aalugani/xalan_c-1.12/src/xalanc/XPath/XObject.hpp:44,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/XSLT/XalanParamHolder.hpp:31,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/XalanTransformer/XalanTransformer.hpp:37,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:22:
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XPathExecutionContext.hpp: In copy constructor ‘xalanc_1_12::XPathExecutionContext::GetCachedNodeList::GetCachedNodeList(const xalanc_1_12::XPathExecutionContext::GetCachedNodeList&)’:
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XPathExecutionContext.hpp:353:14: warning: cast from type ‘const xalanc_1_12::XPathExecutionContext::GetCachedNodeList*’ to type ‘xalanc_1_12::XPathExecutionContext::BorrowReturnMutableNodeRefList*’ {aka ‘xalanc_1_12::XPathExecutionContext::GetCachedNodeList*’} casts away qualifiers [-Wcast-qual]
  353 |             ((BorrowReturnMutableNodeRefList&)theSource).m_mutableNodeRefList = 0;
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:71:
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XPath.hpp: In static member function ‘static double xalanc_1_12::XPath::getMatchScoreValue(xalanc_1_12::XPath::eMatchScore)’:
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XPath.hpp:833:15: warning: switch missing default case [-Wswitch-default]
  833 |         switch(score)
      |               ^
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp: At global scope:
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:99:1: warning: no previous declaration for ‘const xalanc_1_12::XObjectPtr ExecuteXPath(xalanc_1_12::XPathProcessor&, xalanc_1_12::XPathConstructionContext&, xalanc_1_12::XPath&, const xalanc_1_12::XalanDOMString&, xalanc_1_12::XalanNode*, const xalanc_1_12::PrefixResolver&, const xalanc_1_12::NodeRefListBase&, xalanc_1_12::XPathExecutionContext&)’ [-Wmissing-declarations]
   99 | ExecuteXPath(
      | ^~~~~~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:124:1: warning: no previous declaration for ‘bool TestNumericResult(xalanc_1_12::XPathProcessor&, xalanc_1_12::XPath&, xalanc_1_12::XPathConstructionContext&, const xalanc_1_12::XalanDOMString&, xalanc_1_12::PrintWriter&, double, xalanc_1_12::XalanNode*, const xalanc_1_12::PrefixResolver&, const xalanc_1_12::NodeRefListBase&, xalanc_1_12::XPathExecutionContext&)’ [-Wmissing-declarations]
  124 | TestNumericResult(
      | ^~~~~~~~~~~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:175:1: warning: no previous declaration for ‘bool TestStringResult(xalanc_1_12::XPathProcessor&, xalanc_1_12::XPath&, xalanc_1_12::XPathConstructionContext&, const xalanc_1_12::XalanDOMString&, xalanc_1_12::PrintWriter&, const xalanc_1_12::XalanDOMString&, xalanc_1_12::XalanNode*, const xalanc_1_12::PrefixResolver&, const xalanc_1_12::NodeRefListBase&, xalanc_1_12::XPathExecutionContext&)’ [-Wmissing-declarations]
  175 | TestStringResult(
      | ^~~~~~~~~~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:229:1: warning: no previous declaration for ‘bool TestBooleanResult(xalanc_1_12::XPathProcessor&, xalanc_1_12::XPath&, xalanc_1_12::XPathConstructionContext&, const xalanc_1_12::XalanDOMString&, xalanc_1_12::PrintWriter&, bool, xalanc_1_12::XalanNode*, const xalanc_1_12::PrefixResolver&, const xalanc_1_12::NodeRefListBase&, xalanc_1_12::XPathExecutionContext&)’ [-Wmissing-declarations]
  229 | TestBooleanResult(
      | ^~~~~~~~~~~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:296:1: warning: no previous declaration for ‘xalanc_1_12::XalanDocument* ParseXML(xalanc_1_12::XMLParserLiaison&, const xalanc_1_12::XalanDOMString&)’ [-Wmissing-declarations]
  296 | ParseXML(
      | ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:310:1: warning: no previous declaration for ‘xalanc_1_12::XalanDOMString& GetAttributeFromNode(const xalanc_1_12::XalanNode*, const xalanc_1_12::XalanDOMString&, xalanc_1_12::XalanDOMString&)’ [-Wmissing-declarations]
  310 | GetAttributeFromNode(
      | ^~~~~~~~~~~~~~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:343:1: warning: no previous declaration for ‘xalanc_1_12::XalanDOMString& FindNodeAndGetAttributeValue(xalanc_1_12::XalanNode*, const xalanc_1_12::XalanDOMString&, const xalanc_1_12::XalanDOMString&, xalanc_1_12::XalanDOMString&, xercesc_3_2::MemoryManager&)’ [-Wmissing-declarations]
  343 | FindNodeAndGetAttributeValue(
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:376:1: warning: no previous declaration for ‘bool GetXSLInput(xalanc_1_12::XMLParserLiaison&, const xalanc_1_12::XalanDOMString&, xalanc_1_12::XalanDOMString&, xalanc_1_12::XalanDOMString&, xercesc_3_2::MemoryManager&)’ [-Wmissing-declarations]
  376 | GetXSLInput(
      | ^~~~~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:427:1: warning: no previous declaration for ‘xalanc_1_12::XalanNode* FindContextNode(xalanc_1_12::XPathProcessor&, xalanc_1_12::XPathEnvSupport&, xalanc_1_12::DOMSupport&, xalanc_1_12::XPathFactory&, xalanc_1_12::XalanDocument*, const xalanc_1_12::XalanDOMString&, xalanc_1_12::PrintWriter&, xalanc_1_12::XPathExecutionContext&)’ [-Wmissing-declarations]
  427 | FindContextNode(
      | ^~~~~~~~~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:504:1: warning: no previous declaration for ‘bool TestAxisResult(xalanc_1_12::XPathProcessor&, xalanc_1_12::XPathEnvSupport&, xalanc_1_12::DOMSupport&, xalanc_1_12::XMLParserLiaison&, xalanc_1_12::XPathFactory&, const xalanc_1_12::XalanDOMString&, const xalanc_1_12::XalanDOMString&, xalanc_1_12::PrintWriter&, xalanc_1_12::XPathExecutionContext&)’ [-Wmissing-declarations]
  504 | TestAxisResult(
      | ^~~~~~~~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:622:1: warning: no previous declaration for ‘bool TestPredicateResult(xalanc_1_12::XPathProcessor&, xalanc_1_12::XPathEnvSupport&, xalanc_1_12::DOMSupport&, xalanc_1_12::XMLParserLiaison&, xalanc_1_12::XPathFactory&, const xalanc_1_12::XalanDOMString&, const xalanc_1_12::XalanDOMString&, xalanc_1_12::PrintWriter&, xalanc_1_12::XPathExecutionContext&)’ [-Wmissing-declarations]
  622 | TestPredicateResult(
      | ^~~~~~~~~~~~~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:831:1: warning: no previous declaration for ‘void TestNumericResults(xalanc_1_12::XPathFactory&, xalanc_1_12::XPathProcessor&, xalanc_1_12::XPathEnvSupport&, xalanc_1_12::DOMSupport&, xalanc_1_12::PrintWriter&, xalanc_1_12::XPathExecutionContext&)’ [-Wmissing-declarations]
  831 | TestNumericResults(
      | ^~~~~~~~~~~~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:978:1: warning: no previous declaration for ‘void TestStringResults(xalanc_1_12::XPathFactory&, xalanc_1_12::XPathProcessor&, xalanc_1_12::XPathEnvSupport&, xalanc_1_12::DOMSupport&, xalanc_1_12::PrintWriter&, xalanc_1_12::XPathExecutionContext&)’ [-Wmissing-declarations]
  978 | TestStringResults(
      | ^~~~~~~~~~~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:1129:1: warning: no previous declaration for ‘void TestBooleanResults(xalanc_1_12::XPathFactory&, xalanc_1_12::XPathProcessor&, xalanc_1_12::XPathEnvSupport&, xalanc_1_12::DOMSupport&, xalanc_1_12::PrintWriter&, xalanc_1_12::XPathExecutionContext&)’ [-Wmissing-declarations]
 1129 | TestBooleanResults(
      | ^~~~~~~~~~~~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:1187:1: warning: no previous declaration for ‘xalanc_1_12::XalanDOMString& GetXSLFileName(const xalanc_1_12::XalanDOMString&, xalanc_1_12::XalanDOMString&)’ [-Wmissing-declarations]
 1187 | GetXSLFileName(
      | ^~~~~~~~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:1211:1: warning: no previous declaration for ‘void TestAxes(xalanc_1_12::XPathFactory&, xalanc_1_12::XPathProcessor&, xalanc_1_12::XPathEnvSupport&, xalanc_1_12::DOMSupport&, xalanc_1_12::XMLParserLiaison&, const xalanc_1_12::XalanDOMString&, xalanc_1_12::PrintWriter&, xalanc_1_12::XPathExecutionContext&)’ [-Wmissing-declarations]
 1211 | TestAxes(
      | ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:1289:1: warning: no previous declaration for ‘void RunTests(xalanc_1_12::XPathFactory&, xalanc_1_12::XPathProcessor&, xalanc_1_12::XPathEnvSupport&, xalanc_1_12::DOMSupport&, xalanc_1_12::XMLParserLiaison&, xalanc_1_12::PrintWriter&, xalanc_1_12::XPathExecutionContext&)’ [-Wmissing-declarations]
 1289 | RunTests(
      | ^~~~~~~~
In file included from /home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanMap.hpp:35,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/XalanTransformer/XalanTransformer.hpp:36,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:22:
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XNodeSet]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XNodeSetAllocator.hpp:84:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XNodeSetNodeProxy]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XNodeSetNodeProxyAllocator.hpp:91:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XNumber]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XNumberAllocator.hpp:82:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XString]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XStringAllocator.hpp:104:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XStringAdapter]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XStringAdapterAllocator.hpp:86:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XStringCached]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XStringCachedAllocator.hpp:86:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XStringReference]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XStringReferenceAllocator.hpp:84:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XTokenNumberAdapter]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XTokenNumberAdapterAllocator.hpp:83:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XTokenStringAdapter]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XTokenStringAdapterAllocator.hpp:82:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XalanDOMString]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/XalanDOMStringReusableAllocator.hpp:154:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
In file included from /home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:58:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/DirectoryEnumerator.hpp: In instantiation of ‘void xalanc_1_12::EnumerateDirectory(xercesc_3_2::MemoryManager&, const StringType&, OutputIteratorType, FilterPredicateType, StringConversionFunction, bool) [with OutputIteratorType = std::back_insert_iterator<xalanc_1_12::XalanVector<xalanc_1_12::XalanDOMString> >; FilterPredicateType = xalanc_1_12::FilesOnlyFilterPredicate; StringType = xalanc_1_12::XalanDOMString; StringConversionFunction = xalanc_1_12::c_wstr_functor]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/DirectoryEnumerator.hpp:479:27:   required from ‘void xalanc_1_12::DirectoryEnumeratorFunctor<CollectionType, StringType, FilterPredicateType, StringConversionFunction>::operator()(const StringType&, CollectionType&) const [with CollectionType = xalanc_1_12::XalanVector<xalanc_1_12::XalanDOMString>; StringType = xalanc_1_12::XalanDOMString; FilterPredicateType = xalanc_1_12::FilesOnlyFilterPredicate; StringConversionFunction = xalanc_1_12::c_wstr_functor]’
/home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:1244:18:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/DirectoryEnumerator.hpp:236:41: warning: unused parameter ‘theConversionFunction’ [-Wunused-parameter]
  236 |             StringConversionFunction    theConversionFunction,
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from /home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanMap.hpp:35,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/XalanTransformer/XalanTransformer.hpp:36,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/TestXPath/TestXPath.cpp:22:
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XNodeSet]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XNodeSetAllocator.hpp:84:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XNodeSetNodeProxy]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XNodeSetNodeProxyAllocator.hpp:91:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XNumber]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XNumberAllocator.hpp:82:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XString]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XStringAllocator.hpp:104:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XStringAdapter]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XStringAdapterAllocator.hpp:86:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XStringCached]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XStringCachedAllocator.hpp:86:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XStringReference]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XStringReferenceAllocator.hpp:84:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XTokenNumberAdapter]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XTokenNumberAdapterAllocator.hpp:83:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XTokenStringAdapter]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XTokenStringAdapterAllocator.hpp:82:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XalanDOMString]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/XalanDOMStringReusableAllocator.hpp:154:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XalanDOMString, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ArenaAllocator.hpp:182:13:   required from ‘bool xalanc_1_12::ArenaAllocator<ObjectType, ArenaBlockType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XalanDOMString; ArenaBlockType = xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/XalanDOMStringAllocator.hpp:144:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:311:13:   required from ‘xalanc_1_12::XalanList<Type>::size_type xalanc_1_12::XalanList<Type>::size() const [with Type = xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*; xalanc_1_12::XalanList<Type>::size_type = long unsigned int]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ArenaAllocator.hpp:121:40:   required from ‘xalanc_1_12::ArenaAllocator<ObjectType, ArenaBlockType>::size_type xalanc_1_12::ArenaAllocator<ObjectType, ArenaBlockType>::getBlockCount() const [with ObjectType = xalanc_1_12::XalanDOMString; ArenaBlockType = xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>; xalanc_1_12::ArenaAllocator<ObjectType, ArenaBlockType>::size_type = long unsigned int]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/XalanDOMStringAllocator.hpp:164:41:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ArenaBlock<xalanc_1_12::XalanDOMString, long unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
[ 90%] Linking CXX executable TestXPath
[ 90%] Built target TestXPath
[ 90%] Building CXX object samples/CMakeFiles/XalanTransformerCallback.dir/XalanTransformerCallback/XalanTransformerCallback.cpp.o
In file included from /home/aalugani/xalan_c-1.12/src/xalanc/XPath/MutableNodeRefList.hpp:28,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/XPath/XPathExecutionContext.hpp:45,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/XPath/XObject.hpp:44,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/XSLT/XalanParamHolder.hpp:31,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/XalanTransformer/XalanTransformer.hpp:37,
                 from /home/aalugani/xalan_c-1.12/samples/XalanTransformerCallback/XalanTransformerCallback.cpp:23:
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/NodeRefList.hpp: In member function ‘void xalanc_1_12::NodeRefList::ensureAllocation(xalanc_1_12::XalanVector<xalanc_1_12::XalanNode*>::size_type)’:
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/NodeRefList.hpp:134:57: warning: enumerated and non-enumerated type in conditional expression [-Wextra]
  134 |         m_nodeList.reserve(eDefaultVectorSize > theSize ? eDefaultVectorSize : theSize);
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/aalugani/xalan_c-1.12/src/xalanc/XPath/XObject.hpp:44,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/XSLT/XalanParamHolder.hpp:31,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/XalanTransformer/XalanTransformer.hpp:37,
                 from /home/aalugani/xalan_c-1.12/samples/XalanTransformerCallback/XalanTransformerCallback.cpp:23:
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XPathExecutionContext.hpp: In copy constructor ‘xalanc_1_12::XPathExecutionContext::GetCachedNodeList::GetCachedNodeList(const xalanc_1_12::XPathExecutionContext::GetCachedNodeList&)’:
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XPathExecutionContext.hpp:353:14: warning: cast from type ‘const xalanc_1_12::XPathExecutionContext::GetCachedNodeList*’ to type ‘xalanc_1_12::XPathExecutionContext::BorrowReturnMutableNodeRefList*’ {aka ‘xalanc_1_12::XPathExecutionContext::GetCachedNodeList*’} casts away qualifiers [-Wcast-qual]
  353 |             ((BorrowReturnMutableNodeRefList&)theSource).m_mutableNodeRefList = 0;
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/aalugani/xalan_c-1.12/samples/XalanTransformerCallback/XalanTransformerCallback.cpp: At global scope:
/home/aalugani/xalan_c-1.12/samples/XalanTransformerCallback/XalanTransformerCallback.cpp:83:1: warning: no previous declaration for ‘CallbackSizeType writeCallback(const char*, CallbackSizeType, void*)’ [-Wmissing-declarations]
   83 | writeCallback(
      | ^~~~~~~~~~~~~
/home/aalugani/xalan_c-1.12/samples/XalanTransformerCallback/XalanTransformerCallback.cpp:95:1: warning: no previous declaration for ‘void flushCallback(void*)’ [-Wmissing-declarations]
   95 | flushCallback(void* theHandle)
      | ^~~~~~~~~~~~~
/home/aalugani/xalan_c-1.12/samples/XalanTransformerCallback/XalanTransformerCallback.cpp:105:1: warning: no previous declaration for ‘int doTransform(const char*, const char*, FILE*)’ [-Wmissing-declarations]
  105 | doTransform(
      | ^~~~~~~~~~~
In file included from /home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanMap.hpp:35,
                 from /home/aalugani/xalan_c-1.12/src/xalanc/XalanTransformer/XalanTransformer.hpp:36,
                 from /home/aalugani/xalan_c-1.12/samples/XalanTransformerCallback/XalanTransformerCallback.cpp:23:
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XNodeSet]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XNodeSetAllocator.hpp:84:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XNodeSetNodeProxy]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XNodeSetNodeProxyAllocator.hpp:91:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XNumber]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XNumberAllocator.hpp:82:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XString]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XStringAllocator.hpp:104:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XStringAdapter]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XStringAdapterAllocator.hpp:86:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XStringCached]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XStringCachedAllocator.hpp:86:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XStringReference]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XStringReferenceAllocator.hpp:84:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XTokenNumberAdapter]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XTokenNumberAdapterAllocator.hpp:83:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator++() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node]’:
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:257:13:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XTokenStringAdapter]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XTokenStringAdapterAllocator.hpp:82:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:88:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
   88 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XNodeSet]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XNodeSetAllocator.hpp:84:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSet, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XNodeSetNodeProxy]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XNodeSetNodeProxyAllocator.hpp:91:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNodeSetNodeProxy, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XNumber]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XNumberAllocator.hpp:82:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XNumber, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XString]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XStringAllocator.hpp:104:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XString, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XStringAdapter]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XStringAdapterAllocator.hpp:86:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringAdapter, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XStringCached]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XStringCachedAllocator.hpp:86:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringCached, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XStringReference]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XStringReferenceAllocator.hpp:84:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XStringReference, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XTokenNumberAdapter]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XTokenNumberAdapterAllocator.hpp:83:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenNumberAdapter, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp: In instantiation of ‘xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node> xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator--() [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node]’:
/usr/include/c++/11/bits/stl_iterator.h:244:10:   required from ‘std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node>; std::reverse_iterator<_Iterator>::reference = xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>* const&]’
/home/aalugani/xalan_c-1.12/src/xalanc/PlatformSupport/ReusableArenaAllocator.hpp:266:18:   required from ‘bool xalanc_1_12::ReusableArenaAllocator<ObjectType>::ownsObject(const ObjectType*) const [with ObjectType = xalanc_1_12::XTokenStringAdapter]’
/home/aalugani/xalan_c-1.12/src/xalanc/XPath/XTokenStringAdapterAllocator.hpp:82:38:   required from here
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:101:17: warning: implicitly-declared ‘constexpr xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node>::XalanListIteratorBase(const xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node>&)’ is deprecated [-Wdeprecated-copy]
  101 |         return *this;
      |                 ^~~~
/home/aalugani/xalan_c-1.12/src/xalanc/Include/XalanList.hpp:125:35: note: because ‘xalanc_1_12::XalanListIteratorBase<xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>, xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node>’ has user-provided ‘const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>& xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>::operator=(const xalanc_1_12::XalanListIteratorBase<XalanListTraits, Node>&) [with XalanListTraits = xalanc_1_12::XalanListConstIteratorTraits<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>; Node = xalanc_1_12::XalanList<xalanc_1_12::ReusableArenaBlock<xalanc_1_12::XTokenStringAdapter, short unsigned int>*>::Node]’
  125 |     const XalanListIteratorBase & operator=(const XalanListIteratorBase& theRhs)
      |                                   ^~~~~~~~
[ 90%] Linking CXX executable XalanTransformerCallback
/usr/bin/ld: cannot open output file XalanTransformerCallback: Is a directory
collect2: error: ld returned 1 exit status
make[2]: *** [samples/CMakeFiles/XalanTransformerCallback.dir/build.make:100: samples/XalanTransformerCallback] Error 1
make[1]: *** [CMakeFiles/Makefile2:519: samples/CMakeFiles/XalanTransformerCallback.dir/all] Error 2













[aalugani@bol9dev01 s]$ cd ~
[aalugani@bol9dev01 ~]$ ll
total 9908
drwxr-xr-x  2 aalugani aalugani    4096 Sep 20 23:11 corplibtemp
drwxr-xr-x  2 aalugani aalugani    4096 Sep 26 00:48 xalan-c
-rwxrwxrwx  1 aalugani aalugani 1554940 Sep 26 23:09 Xalan-C_1_10_0-src.tar.gz
drwxr-xr-x 10 aalugani aalugani    4096 Sep 27 05:09 xalan_c-1.12
-rwxrwxr-x  1 aalugani aalugani 1130924 Sep 26 21:48 xalan_c-1.12.tar.gz
drwxrwxr-x  2 aalugani aalugani    4096 Sep 26 00:48 xalanrpa
drwxr-xr-x 11 aalugani aalugani    4096 Sep 26 22:49 xerces-c-3.2.4
-rwxrwxrwx  1 aalugani aalugani 7374651 Sep 26 22:47 xerces-c-3.2.4.tar.gz
drwxr-xr-x  4 aalugani aalugani    4096 Oct 21  2005 xml-xalan
[aalugani@bol9dev01 ~]$ ^C
[aalugani@bol9dev01 ~]$ cd xalan_c-1.12
[aalugani@bol9dev01 xalan_c-1.12]$ ll
total 112
drwxr-xr-x  3 aalugani aalugani  4096 Sep 27 04:21 build
drwxr-xr-x  2 aalugani aalugani  4096 Sep 26 21:51 cmake
-rw-r--r--  1 aalugani aalugani 24128 Sep 27 05:09 CMakeCache.txt
drwxr-xr-x  4 aalugani aalugani  4096 Sep 27 04:41 CMakeFiles
-rw-r--r--  1 aalugani aalugani  4366 Jun  7  2020 CMakeLists.txt
-rw-r--r--  1 aalugani aalugani   129 Jun  7  2020 CREDITS
drwxr-xr-x  4 aalugani aalugani  4096 Sep 26 21:51 docs
-rw-r--r--  1 aalugani aalugani  8977 Jun  7  2020 KEYS
-rw-r--r--  1 aalugani aalugani 11359 Jun  7  2020 LICENSE
-rwxr-xr-x  1 aalugani aalugani   804 Jun  7  2020 NOTICE
-rw-r--r--  1 aalugani aalugani  1014 Jun  7  2020 readme.html
-rw-r--r--  1 aalugani aalugani   689 Jun  7  2020 README.md
drwxr-xr-x 20 aalugani aalugani  4096 Sep 26 21:51 samples
drwxr-xr-x  2 aalugani aalugani  4096 Sep 26 21:51 scripts
drwxr-xr-x  3 aalugani aalugani  4096 Sep 26 21:51 src
drwxr-xr-x 15 aalugani aalugani  4096 Sep 26 21:51 Tests
-rw-r--r--  1 aalugani aalugani   212 Jun  7  2020 xalan-c.pc.in
[aalugani@bol9dev01 xalan_c-1.12]$ ccmake
Usage

  ccmake <path-to-source>
  ccmake <path-to-existing-build>

Specify a source directory to (re-)generate a build system for it in the
current working directory.  Specify an existing build directory to
re-generate its build system.

Run 'ccmake --help' for more information.

[aalugani@bol9dev01 xalan_c-1.12]$ cmake
Usage

  cmake [options] <path-to-source>
  cmake [options] <path-to-existing-build>
  cmake [options] -S <path-to-source> -B <path-to-build>

Specify a source directory to (re-)generate a build system for it in the
current working directory.  Specify an existing build directory to
re-generate its build system.

Run 'cmake --help' for more information.

[aalugani@bol9dev01 xalan_c-1.12]$ cmake ./
-- Configuring Apache Xalan-C++ version 1.12.0
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
-- Found the following ICU libraries:
--   uc (required)
--   data (required)
--   i18n (required)
-- Failed to find all ICU components (missing: ICU_INCLUDE_DIR ICU_LIBRARY)
CMake Warning (dev) at cmake/XalanXerces.cmake:22 (find_package):
  Policy CMP0074 is not set: find_package uses <PackageName>_ROOT variables.
  Run "cmake --help-policy CMP0074" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  CMake variable XercesC_ROOT is set to:

    /home/aalugani/xerces-c-3.2.4/

  For compatibility, CMake is ignoring the variable.
Call Stack (most recent call first):
  CMakeLists.txt:69 (include)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Error at cmake/XalanMsgLoaderSelection.cmake:50 (message):
  icu message loader unavailable
Call Stack (most recent call first):
  CMakeLists.txt:72 (include)


-- Configuring incomplete, errors occurred!
See also "/home/aalugani/xalan_c-1.12/CMakeFiles/CMakeOutput.log".
See also "/home/aalugani/xalan_c-1.12/CMakeFiles/CMakeError.log".
[aalugani@bol9dev01 xalan_c-1.12]$ ^C
[aalugani@bol9dev01 xalan_c-1.12]$ cmake -DXercesC_LIBRARY=/home/aalugani/xerces-c-3.2.4/src -DXercesC_INCLUDE_DIR=/home/aalugani/xerces-c-3.2.4/src  ./
-- Configuring Apache Xalan-C++ version 1.12.0
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
-- Found the following ICU libraries:
--   uc (required)
--   data (required)
--   i18n (required)
-- Failed to find all ICU components (missing: ICU_INCLUDE_DIR ICU_LIBRARY)
CMake Warning (dev) at cmake/XalanXerces.cmake:22 (find_package):
  Policy CMP0074 is not set: find_package uses <PackageName>_ROOT variables.
  Run "cmake --help-policy CMP0074" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  CMake variable XercesC_ROOT is set to:

    /home/aalugani/xerces-c-3.2.4/

  For compatibility, CMake is ignoring the variable.
Call Stack (most recent call first):
  CMakeLists.txt:69 (include)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Error at cmake/XalanMsgLoaderSelection.cmake:50 (message):
  icu message loader unavailable
Call Stack (most recent call first):
  CMakeLists.txt:72 (include)


-- Configuring incomplete, errors occurred!
See also "/home/aalugani/xalan_c-1.12/CMakeFiles/CMakeOutput.log".
See also "/home/aalugani/xalan_c-1.12/CMakeFiles/CMakeError.log".
[aalugani@bol9dev01 xalan_c-1.12]$ cmake -DXercesC_LIBRARY=/home/aalugani/xerces-c-3.2.4/src -Dmessage-loader=inmemory  -DXercesC_INCLUDE_DIR=/home/aalugani/xerces-c-3.2.4/src  ./
-- Configuring Apache Xalan-C++ version 1.12.0
-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)
-- Found the following ICU libraries:
--   uc (required)
--   data (required)
--   i18n (required)
-- Failed to find all ICU components (missing: ICU_INCLUDE_DIR ICU_LIBRARY)
CMake Warning (dev) at cmake/XalanXerces.cmake:22 (find_package):
  Policy CMP0074 is not set: find_package uses <PackageName>_ROOT variables.
  Run "cmake --help-policy CMP0074" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  CMake variable XercesC_ROOT is set to:

    /home/aalugani/xerces-c-3.2.4/

  For compatibility, CMake is ignoring the variable.
Call Stack (most recent call first):
  CMakeLists.txt:69 (include)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Performing Test CXX_matching-delete-operator
-- Performing Test CXX_matching-delete-operator - Success
-- Performing Test HAVE_PATH_MAX
-- Performing Test HAVE_PATH_MAX - Success
--
-- Xalan-C++ configuration summary
-- -------------------------------
--
--   Version:                     1.12.0
--   Library major version:       112
--   Library minor version:       0
--
--   Installation directory:      /opt/Xalan-c
--   C compiler:                  /usr/bin/cc
--   C++ compiler:                /usr/bin/c++
--
--   Build shared libraries:      ON
--   Thread implementation:       standard
--   Transcoder:                  default
--   Message Loader:              inmemory
--   Message Loader Locale:       en_US
-- Configuring done
-- Generating done
-- Build files have been written to: /home/aalugani/xalan_c-1.12
[aalugani@bol9dev01 xalan_c-1.12]$ ll
total 156
drwxr-xr-x  3 aalugani aalugani  4096 Sep 27 04:21 build
drwxr-xr-x  2 aalugani aalugani  4096 Sep 26 21:51 cmake
-rw-r--r--  1 aalugani aalugani 24662 Sep 28 01:20 CMakeCache.txt
drwxr-xr-x  4 aalugani aalugani  4096 Sep 28 01:20 CMakeFiles
-rw-r--r--  1 aalugani aalugani  2657 Sep 28 01:20 cmake_install.cmake
-rw-r--r--  1 aalugani aalugani  4366 Jun  7  2020 CMakeLists.txt
-rw-r--r--  1 aalugani aalugani   129 Jun  7  2020 CREDITS
-rw-r--r--  1 aalugani aalugani   519 Sep 28 01:20 CTestTestfile.cmake
drwxr-xr-x  4 aalugani aalugani  4096 Sep 26 21:51 docs
-rw-r--r--  1 aalugani aalugani  8977 Jun  7  2020 KEYS
-rw-r--r--  1 aalugani aalugani 11359 Jun  7  2020 LICENSE
-rw-r--r--  1 aalugani aalugani 20934 Sep 28 01:20 Makefile
-rwxr-xr-x  1 aalugani aalugani   804 Jun  7  2020 NOTICE
-rw-r--r--  1 aalugani aalugani  1014 Jun  7  2020 readme.html
-rw-r--r--  1 aalugani aalugani   689 Jun  7  2020 README.md
drwxr-xr-x 21 aalugani aalugani  4096 Sep 28 01:20 samples
drwxr-xr-x  2 aalugani aalugani  4096 Sep 26 21:51 scripts
drwxr-xr-x  3 aalugani aalugani  4096 Sep 26 21:51 src
drwxr-xr-x 16 aalugani aalugani  4096 Sep 28 01:20 Tests
-rw-r--r--  1 aalugani aalugani   232 Sep 28 01:20 xalan-c.pc
-rw-r--r--  1 aalugani aalugani   212 Jun  7  2020 xalan-c.pc.in
[aalugani@bol9dev01 xalan_c-1.12]$ make
[  0%] Building CXX object src/xalanc/Utils/MsgCreator/CMakeFiles/MsgCreator.dir/ICUResHandler.cpp.o
[  0%] Building CXX object src/xalanc/Utils/MsgCreator/CMakeFiles/MsgCreator.dir/InMemHandler.cpp.o
[  0%] Building CXX object src/xalanc/Utils/MsgCreator/CMakeFiles/MsgCreator.dir/MsgCreator.cpp.o
/home/aalugani/xalan_c-1.12/src/xalanc/Utils/MsgCreator/MsgCreator.cpp:122:1: warning: no previous declaration for ‘bool getArgs(int, char**, CmdLineParams&, const char**)’ [-Wmissing-declarations]
  122 | getArgs(
      | ^~~~~~~
[  1%] Building CXX object src/xalanc/Utils/MsgCreator/CMakeFiles/MsgCreator.dir/MsgFileOutputStream.cpp.o
/home/aalugani/xalan_c-1.12/src/xalanc/Utils/MsgCreator/MsgFileOutputStream.cpp:116:1: warning: no previous declaration for ‘void xalanc_1_12::FormatMessageLocal(const char*, const char*, int, char*)’ [-Wmissing-declarations]
  116 | FormatMessageLocal(
      | ^~~~~~~~~~~~~~~~~~
[  1%] Building CXX object src/xalanc/Utils/MsgCreator/CMakeFiles/MsgCreator.dir/NLSHandler.cpp.o
[  1%] Building CXX object src/xalanc/Utils/MsgCreator/CMakeFiles/MsgCreator.dir/SAX2Handler.cpp.o
[  1%] Linking CXX executable MsgCreator
/usr/bin/ld: error: /home/aalugani/xerces-c-3.2.4/src: read: Is a directory
collect2: error: ld returned 1 exit status
make[2]: *** [src/xalanc/Utils/MsgCreator/CMakeFiles/MsgCreator.dir/build.make:178: src/xalanc/Utils/MsgCreator/MsgCreator] Error 1
make[1]: *** [CMakeFiles/Makefile2:281: src/xalanc/Utils/MsgCreator/CMakeFiles/MsgCreator.dir/all] Error 2
make: *** [Makefile:146: all] Error 2
[aalugani@bol9dev01 xalan_c-1.12]$












cmake -DXercesC_LIBRARY=/path/to/xercesc/library -DXercesC_INCLUDE_DIR=/path/to/xercesc/include -DXercesC_VERSION=3.1 /path/to/source










 For compatibility, CMake is ignoring the variable.
Call Stack (most recent call first):
  CMakeLists.txt:69 (include)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):
  Failed to find XercesC (missing: XercesC_LIBRARY XercesC_INCLUDE_DIR
  XercesC_VERSION) (Required is at least version "3.1")
Call Stack (most recent call first):
  /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE)
  /usr/share/cmake/Modules/FindXercesC.cmake:110 (FIND_PACKAGE_HANDLE_STANDARD_ARGS)
  cmake/XalanXerces.cmake:22 (find_package)
  CMakeLists.txt:69 (include)











This is the make file
#---------------------------------------------------------------------------#
#  Makefile created for build and test CORPLIBS(MTString)
#  
#  Created by: hemahanumaku@micron.com
#  Date: 24/01/2023
#---------------------------------------------------------------------------#

#-----------------------------------##
# Common variables Declration 
#-----------------------------------##

CXX=/mu/bin/g++
TARGET_DEFINITIONS = _REENTRANT NDEBUG _M_DLL UNICODE MTSTRING_LIBRARY_BUILD 
LIBRARY_NAME = MTString
LIB_NAME = libmtstring
TEST_TARGET = libmtstring_shared_tester
LINK = -shared
LNS = ln -s
LS	= ls -al
CP	=	cp -a
CHMOD = chmod 644
CPPFLAGS = -g3 -O2 -fvisibility=hidden -fexceptions -shared -fpermissive -fPIC
TEST_CPPFLAGS	= -g3 -O2 -fexceptions -shared -fpermissive  -fPIC
TARGET_LDFLAGS = -pthread
CURR_DIR	=	$(PWD)


# Checking for DEV/MUSYNC environment.
ifeq ($(HOSTNAME), "bolmusyncprod02.micron.com")
	CORPBUILD	=	/rhel-9-64-mu-dev/mtapps/corp/
else
	CORPBUILD	=	/mu/mtapps/corp/
endif


SH_FILE	=	test_common.sh

#source $(CORPBUILD)/$(SH_FILE)


#-------------------------------------#
# Shared libraries mtxml variables
#-------------------------------------#
RUNTIME_PATH = /mu/mtsdk/corplib/gcc1131/lib:/home/sysprog/libraries/build/gcc1131-rhel9/libmtcrypto_static:/mu/dev/gcc/1131/lib64 -L.
LIBDIRS = /home/sysprog/libraries/stage/Linux/MU-RHEL90/gcc1131/lib /mu/mtsdk/corplib/gcc1131/lib /home/sysprog/libraries/build/gcc1131-rhel9/libmtcrypto_static  /mu/dev/gcc/1131/lib64
#LIBRARIES = mtcrypto mtmessage

SHARED_LIBS        = -Wl,--enable-new-dtags -Wl,-rpath,$(RUNTIME_PATH) $(addprefix -L,$(LIBDIRS))
INCS += /mu/mtsdk/corplib/gcc1131/include /opt/ADO_Agent_0803/_work/6/s /opt/ADO_Agent_0803/_work/6/s/include

#---------------------------------
# Make install
#--------------------------------

# Dummy STAGE destination PATH.
#INC_DESTINATION	= /home/corplib/hemahanumaku/stage/Linux/MU-RHEL90/gcc1131/include 
#LIB_DESTINATION	= /home/corplib/hemahanumaku/stage/Linux/MU-RHEL90/gcc1131/lib


# STAGE destination PATH.
INC_DESTINATION	= /home/sysprog/libraries/stage/Linux/MU-RHEL90/gcc1131/include  
LIB_DESTINATION	= /home/sysprog/libraries/stage/Linux/MU-RHEL90/gcc1131/lib


#-------------------------------
# Make stage_promote 
#--------------------------------
# Dummy DEV MU destination PATH.
#MU_INC_DEST	= /home/corplib/hemahanumaku/mu/mtsdk/corplib/gcc1131/include 
#MU_LIB_DEST	= /home/corplib/hemahanumaku/mu/mtsdk/corplib/gcc1131/lib 

# DEV MU destination PATH.
MU_INC_DEST	= /mu/mtsdk/corplib/gcc1131/include 
MU_LIB_DEST	= /mu/mtsdk/corplib/gcc1131/lib


#-------------------------------
# Make stage_promote 
#--------------------------------

# Dummy Master MU destination PATH.
#DELTA_MU_INC_DEST	= /rhel-9-64-mu-mstr/mtapps/corp/mu/mtsdk/corplib/gcc1131/include 
#DELTA_MU_LIB_DEST	= /rhel-9-64-mu-mstr/mtapps/corp/mu/mtsdk/corplib/gcc1131/lib 


# Master MU destination PATH.
DELTA_MU_INC_DEST	= /rhel-9-64-mu-mstr/mtsdk/corplib/gcc1131/include 
DELTA_MU_LIB_DEST	= /rhel-9-64-mu-mstr/mtsdk/corplib/gcc1131/lib 


#----------------------------------------#
# test libraries variables
#----------------------------------------#

TEST_RUNTIIME_PATH	= /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/lib:/home/sysprog/libraries/stage/Linux/MU-RHEL90/gcc1131/lib:/mu/mtsdk/corplib/gcc1131/lib:/home/sysprog/libraries/build/gcc1131-rhel9/libmtcrypto_static:/mu/mtsdk/corplib/gcc1131/lib:/mu/dev/gcc/1131/lib64

TEST_LIBDIRS	=	/mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/lib \
					/home/sysprog/libraries/stage/Linux/MU-RHEL90/gcc1131/lib \
					/mu/mtsdk/corplib/gcc1131/lib \
					/home/sysprog/libraries/build/gcc1131-rhel9/libmtcrypto_static \
					/mu/dev/gcc/1131/lib64

TEST_LIBRARIES	=	mtstring cppunit dl

TEST_SHARED_LIBS = -Wl,--enable-new-dtags -Wl,-rpath,.,-rpath,$(TEST_RUNTIIME_PATH) $(addprefix -L,$(TEST_LIBDIRS)) $(addprefix -l,$(TEST_LIBRARIES))

TEST_INCS =	/mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include \
			/home/sysprog/libraries/stage/Linux/MU-RHEL90/gcc1131/include \
			/mu/mtsdk/corplib/gcc1131/include \
			/opt/ADO_Agent_0803/_work/6/s/include


#--------------#
# Sorce files
#--------------#

SRC_FILES = src/MTString.c
#------------------#
#header files:
#------------------#
DEPLOYABLE_HEADERS = include/mtstring.h
NON_DEPLOYABLE_HEADERS =

#-------------------#
#Test source files
#------------------#

TEST_SRCS = src/UnitTests/MTStringUnitTest.cpp

#------------------#
# Test header files:
#------------------#

TEST_HDRS = src/MTStringUnitTest.h

TEST_DEFINITIONS = _REENTRANT NDEBUG _M_DLL UNICODE MTSTRING_LIBRARY_BUILD

ifdef WIDE_TEST
    TEST_DEFINITIONS += MTSTRINGW_TEST
endif

TEST_LIBS = mtstring cppunit dl

#-----------------------------------#
# Version tag updation for CORPLIB
#-----------------------------------#

ifeq ($(strip $(RELEASE)),)
override LIB_EXT := dev
else
	ifneq (,$(findstring _,$(RELEASE)))
		RELEASE_TEMP := $(RELEASE)
		ifneq (,$(findstring /,$(RELEASE_TEMP)))
			RELEASE_TEMP := $(shell echo $(RELEASE_TEMP) | awk -F\/ '{print $$1}')
		endif
			override LIB_EXT := $(shell echo $(RELEASE_TEMP) | awk -F\_ '{print $$2}')
	else
		override LIB_EXT := $(RELEASE)
	endif
endif

override LIB_NAME          := lib$(LIBRARY_NAME)
override SHARED_LIB        := $(LIB_NAME).so.$(LIB_EXT)

#-----------------------------------------#
# Make all libs
#-----------------------------------------#
.PHONY: all 
all: build 
#all: build depends 

#----------------------------------------#
#Builing shared object (.so) for CORPLIB:
#----------------------------------------#



OBJS = $(SRC_FILES:%.c=%.o)

build: $(OBJS)
	$(RM) *.so.*
	$(CXX) $(LINK) -o $(SHARED_LIB) $(OBJS) $(TARGET_LDFLAGS) $(SHARED_LIBS)
	$(RM) libmtstring.so 
	$(LNS) $(SHARED_LIB) libmtstring.so  
	@echo "Please use below command test-case"
	@echo ""
	@echo "make test"

#---------------------------------#
#Building object filed (.o) files:
#---------------------------------#

$(OBJS):%.o :%.c
	@echo "CORPLIB compilation starts..."
	$(CXX) -c $(CPPFLAGS) $(addprefix -D,$(TARGET_DEFINITIONS)) $(addprefix -I,$(INCS)) -o $@ $<
	@echo "COPRPLIB ompilation completed"

#--------------------------------------#
#Building shared object (.so) for test
#--------------------------------------#
TEST_OBJS= $(TEST_SRCS:%.cpp=%.o)

.PHONY: depends 
depends: $(TEST_OBJS)
	@echo "Test linking starts ...!!!"
	$(CXX) -o  $(TEST_TARGET) $(TEST_OBJS) $(TARGET_LDFLAGS) $(TEST_SHARED_LIBS)
	@echo "Test linking completed"
	#@echo "Please use make test to run test-case"

#------------------------------------------#
#Building object filed (.o) files for test
#------------------------------------------#

$(TEST_OBJS): %.o :%.cpp
	@echo "test compilation starts "
	$(CXX) -c $(TEST_CPPFLAGS) $(addprefix -D,$(TEST_DEFINITIONS)) $(addprefix -I,$(TEST_INCS)) -o $@ $<
	@echo "test compilation completed"

#.SILENT:TEST_SC
.PHONY:TEST_SC
TEST_SC:
		#@echo " TEST_SC --> $(LIB_NAME).so"
		@echo " TEST_SC --> $(SHARED_LIB)--->$(LIB_EXT)"

#--------------------------------#
# clean the libraries:
#--------------------------------#

clean:
	@echo " clean starts..."
	$(RM) $(SHARED_LIB)
	$(RM) $(TEST_TARGET)
	$(RM) $(TEST_SRCS:%.cpp=%.o) 
	$(RM) *.so 
	$(RM) *.o

#-----------------------------#
# Running test-case
#----------------------------#
test: depends
	@echo "running test case!!!"
	./$(TEST_TARGET)

# Need to be deleted  from here........
#-----------------------------------------------------------	

#.PHONY: LIB_TEST
#LIB_TEST:
		#@echo  -e "Promote (copy) libraries\nfrom: $(CURR_DIR)\nto: $(LIB_DESTINATION)"
		#@echo "-$(SHARED_LIB)"
		#@echo "Change symbolic links"
		#@echo -e "Promote (copy) headers\nfrom: $(CURR_DIR)\nto: $(INC_DESTINATION)"
		#@echo "$(DEPYLOYABLE_HEADERS)" 

			#$(CP)	$(SHARED_LIB)	$(LIB_DESTINATION);
			#$(CP)	$(DEPYLOYABLE_HEADERS)	$(INC_DESTINATION);
		 	#echo "$(shell ./linkLib.sh)"; 
			#$(PWD); 

.SILENT:TEST_SC
TEST_SC:
		@echo "hostnsme: $(HOSTNAME)"
		@echo " TEST_SC --> $(LIB_NAME).so"
		#@echo " TEST_SC --> $(SHARED_LIB)--->$(LIB_EXT)"
		#$(CORPBUILD)/$(SH_FILE) sharedLibName $(SHARED_LIB) 
		#$(CORPBUILD) sharedLibName $(SHARED_LIB) 
		#$(CORPBUILD)/$(SH_FILE) muLibPath $(LIB_DESTINATION) $(MU_LIB_DEST)

		#./test_common.sh muIncPath $(INC_DESTINATION) $(MU_INC_DEST)
		#./test_common.sh cpHdr_to_mu $(DEPYLOYABLE_HEADERS) $(INC_DESTINATION) $(MU_INC_DEST)
		#$(CORPBUILD)/$(SH_FILE) linkingLib_stg $(LIB_DESTINATION) $(SHARED_LIB) $(LIB_NAME).so
		#$(CORPBUILD)/$(SH_FILE) linkingLib_mu $(MU_LIB_DEST) $(SHARED_LIB) $(LIB_NAME).so
		#./test_common.sh cpHdr_to_stage $(DEPYLOYABLE_HEADERS) $(CURR_DIR) $(INC_DESTINATION)
		#./test_common.sh cpLib_to_stage $(SHARED_LIB) $(CURR_DIR) $(LIB_DESTINATION)
		#./test_common.sh cpLib_to_mu $(SHARED_LIB) $(LIB_DESTINATION) $(MU_LIB_DEST)
		#$(CORPBUILD)/$(SH_FILE) hdrFilePermission_stg $(DEPLOYABLE_HEADERS) $(INC_DESTINATION)
		#$(CORPBUILD)/$(SH_FILE) hdrFilePermission_stg $(DEPLOYABLE_HEADERS)

#-----------------------------------------------------------

# Delete upto here......

#---------------------------------#
# Make install:
# copy header & library to Stage 
#---------------------------------#

.SILENT: install 
install: 
		$(CORPBUILD)/$(SH_FILE) stgLibPath $(LIB_DESTINATION)
		$(CORPBUILD)/$(SH_FILE) sharedLibName $(SHARED_LIB) 
		$(CORPBUILD)/$(SH_FILE) stgIncPath $(INC_DESTINATION)
		$(CORPBUILD)/$(SH_FILE) deployHeaderList $(DEPLOYABLE_HEADERS)
		$(CORPBUILD)/$(SH_FILE) cpHdr_to_stage $(DEPLOYABLE_HEADERS) $(CURR_DIR) $(INC_DESTINATION) 
		$(CORPBUILD)/$(SH_FILE) hdrFilePermission_stg $(DEPLOYABLE_HEADERS) $(INC_DESTINATION)
		$(CORPBUILD)/$(SH_FILE) cpLib_to_stage $(SHARED_LIB) $(CURR_DIR) $(LIB_DESTINATION)
		$(CORPBUILD)/$(SH_FILE) linkingLib_stg $(LIB_DESTINATION) $(SHARED_LIB) $(LIB_NAME).so

#---------------------------------#
# Make stage_promote: 
# copy header & library to Dev Mu
# --------------------------------#

.SILENT: stage_promote 
stage_promote: 
		$(CORPBUILD)/$(SH_FILE) muLibPath $(LIB_DESTINATION) $(MU_LIB_DEST)
		$(CORPBUILD)/$(SH_FILE) sharedLibName $(SHARED_LIB)
		$(CORPBUILD)/$(SH_FILE) muIncPath $(INC_DESTINATION) $(MU_INC_DEST)
		$(CORPBUILD)/$(SH_FILE) deployHeaderList $(DEPLOYABLE_HEADERS)
		$(CORPBUILD)/$(SH_FILE) cpHdr_to_mu $(DEPLOYABLE_HEADERS) $(INC_DESTINATION) $(MU_INC_DEST)
		$(CORPBUILD)/$(SH_FILE) hdrFilePermission_mu $(DEPLOYABLE_HEADERS) $(MU_INC_DEST)
		$(CORPBUILD)/$(SH_FILE) cpLib_to_mu $(SHARED_LIB) $(LIB_DESTINATION) $(MU_LIB_DEST)
		$(CORPBUILD)/$(SH_FILE) linkingLib_mu $(MU_LIB_DEST) $(SHARED_LIB) $(LIB_NAME).so

#------------------------------------#
# Make delta_promote:
# copy header & library to Master Mu
# -----------------------------------#

.SILENT: delta_promote 
delta_promote: 
		$(CORPBUILD)/$(SH_FILE) muLibPath $(LIB_DESTINATION) $(DELTA_MU_LIB_DEST)
		$(CORPBUILD)/$(SH_FILE) sharedLibName $(SHARED_LIB)
		$(CORPBUILD)/$(SH_FILE) muIncPath $(INC_DESTINATION) $(DELTA_MU_INC_DEST)
		$(CORPBUILD)/$(SH_FILE) deployHeaderList $(DEPLOYABLE_HEADERS)
		$(CORPBUILD)/$(SH_FILE) cpHdr_to_mu $(DEPLOYABLE_HEADERS) $(INC_DESTINATION) $(DELTA_MU_INC_DEST)
		$(CORPBUILD)/$(SH_FILE) hdrFilePermission_mu $(DEPLOYABLE_HEADERS) $(DELTA_MU_INC_DEST)
		$(CORPBUILD)/$(SH_FILE) cpLib_to_mu $(SHARED_LIB) $(LIB_DESTINATION) $(DELTA_MU_LIB_DEST)
		$(CORPBUILD)/$(SH_FILE) linkingLib_mu $(DELTA_MU_LIB_DEST) $(SHARED_LIB) $(LIB_NAME).so







This is the error

2023-09-20T09:43:19.7640342Z ##[section]Starting: Build with UT execution
2023-09-20T09:43:19.7645224Z ==============================================================================
2023-09-20T09:43:19.7645444Z Task         : Command line
2023-09-20T09:43:19.7645691Z Description  : Run a command line script using Bash on Linux and macOS and cmd.exe on Windows
2023-09-20T09:43:19.7645908Z Version      : 2.178.0
2023-09-20T09:43:19.7646191Z Author       : Microsoft Corporation
2023-09-20T09:43:19.7646425Z Help         : https://docs.microsoft.com/azure/devops/pipelines/tasks/utility/command-line
2023-09-20T09:43:19.7646675Z ==============================================================================
2023-09-20T09:43:20.5998056Z Generating script.
2023-09-20T09:43:20.5999282Z ========================== Starting Command Output ===========================
2023-09-20T09:43:20.6003825Z [command]/usr/bin/bash --noprofile --norc /opt/ADO_Agent_0803/_work/_temp/e9c3b67b-fd9d-4f1c-9bd7-add3f97d7842.sh
2023-09-20T09:43:20.6004207Z Building MTStringRHEL9 Linux
2023-09-20T09:43:20.6004719Z Makefile:262: warning: overriding recipe for target 'TEST_SC'
2023-09-20T09:43:20.6005158Z Makefile:222: warning: ignoring old recipe for target 'TEST_SC'
2023-09-20T09:43:20.6005405Z  clean starts...
2023-09-20T09:43:20.6005814Z rm -f libMTString.so.dev
2023-09-20T09:43:20.6006152Z rm -f libmtstring_shared_tester
2023-09-20T09:43:20.6006549Z rm -f src/UnitTests/MTStringUnitTest.o 
2023-09-20T09:43:20.6006860Z rm -f *.so 
2023-09-20T09:43:20.6007138Z rm -f *.o
2023-09-20T09:43:20.6007650Z Makefile:262: warning: overriding recipe for target 'TEST_SC'
2023-09-20T09:43:20.6008141Z Makefile:222: warning: ignoring old recipe for target 'TEST_SC'
2023-09-20T09:43:20.6008522Z CORPLIB compilation starts...
2023-09-20T09:43:20.6009395Z /mu/bin/g++ -c -g3 -O2 -fvisibility=hidden -fexceptions -shared -fpermissive -fPIC -D_REENTRANT -DNDEBUG -D_M_DLL -DUNICODE -DMTSTRING_LIBRARY_BUILD -I/mu/mtsdk/corplib/gcc1131/include -I/opt/ADO_Agent_0803/_work/6/s -I/opt/ADO_Agent_0803/_work/6/s/include -o src/MTString.o src/MTString.c
2023-09-20T09:43:20.6010006Z In file included from /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:72,
2023-09-20T09:43:20.6010285Z                  from src/MTString.c:35:
2023-09-20T09:43:20.6010564Z /mu/mtsdk/corplib/gcc1131/include/rtldll.h:169: warning: "DllExport" redefined
2023-09-20T09:43:20.6010918Z   169 | #            define DllExport __attribute__ ((visibility("default")))
2023-09-20T09:43:20.6011153Z       | 
2023-09-20T09:43:20.6011492Z /mu/mtsdk/corplib/gcc1131/include/rtldll.h:161: note: this is the location of the previous definition
2023-09-20T09:43:20.6011787Z   161 | #    define DllExport
2023-09-20T09:43:20.6012147Z       | 
2023-09-20T09:43:20.6012579Z src/MTString.c: In function ‘char* mid_c(MTInt4, MTInt4, char*)’:
2023-09-20T09:43:20.6013093Z src/MTString.c:294:27: warning: ‘char* strcopy_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6013462Z   294 |        sub_str = strcopy_c(s + p);
2023-09-20T09:43:20.6013695Z       |                  ~~~~~~~~~^~~~~~~
2023-09-20T09:43:20.6014663Z src/MTString.c:64:16: note: declared here
2023-09-20T09:43:20.6014915Z    64 | char* FUNCDECL strcopy_c(char *s)
2023-09-20T09:43:20.6015137Z       |                ^~~~~~~~~
2023-09-20T09:43:20.6015684Z src/MTString.c: In function ‘char* left_c(MTInt4, char*)’:
2023-09-20T09:43:20.6016180Z src/MTString.c:370:27: warning: ‘char* strcopy_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6016531Z   370 |        sub_str = strcopy_c(s);
2023-09-20T09:43:20.6016758Z       |                  ~~~~~~~~~^~~
2023-09-20T09:43:20.6017040Z src/MTString.c:64:16: note: declared here
2023-09-20T09:43:20.6017278Z    64 | char* FUNCDECL strcopy_c(char *s)
2023-09-20T09:43:20.6017499Z       |                ^~~~~~~~~
2023-09-20T09:43:20.6017990Z src/MTString.c: In function ‘char* right_c(MTInt4, char*)’:
2023-09-20T09:43:20.6018493Z src/MTString.c:444:27: warning: ‘char* strcopy_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6019197Z   444 |        sub_str = strcopy_c(tmp_char);
2023-09-20T09:43:20.6019640Z       |                  ~~~~~~~~~^~~~~~~~~~
2023-09-20T09:43:20.6019889Z src/MTString.c:64:16: note: declared here
2023-09-20T09:43:20.6020182Z    64 | char* FUNCDECL strcopy_c(char *s)
2023-09-20T09:43:20.6020404Z       |                ^~~~~~~~~
2023-09-20T09:43:20.6020875Z src/MTString.c: In function ‘MTInt4 span_c(char*, char*)’:
2023-09-20T09:43:20.6021381Z src/MTString.c:513:20: warning: ‘MTInt4 indx_c(char, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6021830Z   513 |     while ( (indx_c(s[indx], pattern) != -1) &&
2023-09-20T09:43:20.6022281Z       |              ~~~~~~^~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6022535Z src/MTString.c:202:17: note: declared here
2023-09-20T09:43:20.6022882Z   202 | MTInt4 FUNCDECL indx_c(char c, char *s)
2023-09-20T09:43:20.6023110Z       |                 ^~~~~~
2023-09-20T09:43:20.6023570Z src/MTString.c: In function ‘MTInt4 break_c(char*, char*)’:
2023-09-20T09:43:20.6024103Z src/MTString.c:575:20: warning: ‘MTInt4 indx_c(char, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6024550Z   575 |     while ( (indx_c(s[indx], pattern) == -1) &&
2023-09-20T09:43:20.6024881Z       |              ~~~~~~^~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6025134Z src/MTString.c:202:17: note: declared here
2023-09-20T09:43:20.6025437Z   202 | MTInt4 FUNCDECL indx_c(char c, char *s)
2023-09-20T09:43:20.6025664Z       |                 ^~~~~~
2023-09-20T09:43:20.6026092Z src/MTString.c: In function ‘search_struct search_c(char*, char*)’:
2023-09-20T09:43:20.6026668Z src/MTString.c:696:36: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
2023-09-20T09:43:20.6027085Z   696 |          pat_meta_or_end = break_c("?+*", &pattern[pat_pos]) + pat_pos;
2023-09-20T09:43:20.6027363Z       |                                    ^~~~~
2023-09-20T09:43:20.6027832Z src/MTString.c:696:35: warning: ‘MTInt4 break_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6028283Z   696 |          pat_meta_or_end = break_c("?+*", &pattern[pat_pos]) + pat_pos;
2023-09-20T09:43:20.6028661Z       |                            ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6029199Z src/MTString.c:548:17: note: declared here
2023-09-20T09:43:20.6029554Z   548 | MTInt4 FUNCDECL break_c(char *pattern, char *s)
2023-09-20T09:43:20.6029974Z       |                 ^~~~~~~
2023-09-20T09:43:20.6030653Z src/MTString.c:743:37: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
2023-09-20T09:43:20.6031012Z   743 |           pat_meta_or_end = break_c("?+*", &pattern[pat_pos]) + pat_pos;
2023-09-20T09:43:20.6031342Z       |                                     ^~~~~
2023-09-20T09:43:20.6031815Z src/MTString.c:743:36: warning: ‘MTInt4 break_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6032324Z   743 |           pat_meta_or_end = break_c("?+*", &pattern[pat_pos]) + pat_pos;
2023-09-20T09:43:20.6032664Z       |                             ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6033002Z src/MTString.c:548:17: note: declared here
2023-09-20T09:43:20.6033280Z   548 | MTInt4 FUNCDECL break_c(char *pattern, char *s)
2023-09-20T09:43:20.6033521Z       |                 ^~~~~~~
2023-09-20T09:43:20.6034020Z src/MTString.c: In function ‘MTInt4 instr_c(MTInt4, char*, char*)’:
2023-09-20T09:43:20.6034555Z src/MTString.c:855:20: warning: ‘search_struct search_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6034935Z   855 |        f = search_c(subs, &s[p]);
2023-09-20T09:43:20.6035169Z       |            ~~~~~~~~^~~~~~~~~~~~~
2023-09-20T09:43:20.6035411Z src/MTString.c:624:24: note: declared here
2023-09-20T09:43:20.6035720Z   624 | search_struct FUNCDECL search_c(char *pattern, char *s)
2023-09-20T09:43:20.6035971Z       |                        ^~~~~~~~
2023-09-20T09:43:20.6036267Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6037045Z src/MTString.c: In function ‘char* compress_c(char*)’:
2023-09-20T09:43:20.6037828Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:437:36: warning: ‘char* rtrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6038177Z   437 | #define trim_c(s)   ltrim_c(rtrim_c(s))
2023-09-20T09:43:20.6038441Z       |                             ~~~~~~~^~~
2023-09-20T09:43:20.6039051Z src/MTString.c:1068:5: note: in expansion of macro ‘trim_c’
2023-09-20T09:43:20.6039325Z  1068 |     trim_c(s);
2023-09-20T09:43:20.6039637Z       |     ^~~~~~
2023-09-20T09:43:20.6039904Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:444:16: note: declared here
2023-09-20T09:43:20.6040176Z   444 | char* FUNCDECL rtrim_c(char *s);
2023-09-20T09:43:20.6040454Z       |                ^~~~~~~
2023-09-20T09:43:20.6040977Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:437:28: warning: ‘char* ltrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6041371Z   437 | #define trim_c(s)   ltrim_c(rtrim_c(s))
2023-09-20T09:43:20.6041690Z       |                     ~~~~~~~^~~~~~~~~~~~
2023-09-20T09:43:20.6042266Z src/MTString.c:1068:5: note: in expansion of macro ‘trim_c’
2023-09-20T09:43:20.6042532Z  1068 |     trim_c(s);
2023-09-20T09:43:20.6042728Z       |     ^~~~~~
2023-09-20T09:43:20.6043040Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:451:16: note: declared here
2023-09-20T09:43:20.6043311Z   451 | char* FUNCDECL ltrim_c(char *s);
2023-09-20T09:43:20.6043585Z       |                ^~~~~~~
2023-09-20T09:43:20.6044104Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:94:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
2023-09-20T09:43:20.6044448Z    94 | #define  whitespace " \f\n\r\t"
2023-09-20T09:43:20.6044786Z       |                     ^~~~~~~~~~~
2023-09-20T09:43:20.6045209Z src/MTString.c:1070:27: note: in expansion of macro ‘whitespace’
2023-09-20T09:43:20.6045580Z  1070 |     while ( (sp = break_c(whitespace, &s[ps])) > 0 ) /* eat a word */
2023-09-20T09:43:20.6045866Z       |                           ^~~~~~~~~~
2023-09-20T09:43:20.6046636Z src/MTString.c:1070:26: warning: ‘MTInt4 break_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6046990Z  1070 |     while ( (sp = break_c(whitespace, &s[ps])) > 0 ) /* eat a word */
2023-09-20T09:43:20.6047265Z       |                   ~~~~~~~^~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6047596Z src/MTString.c:548:17: note: declared here
2023-09-20T09:43:20.6047858Z   548 | MTInt4 FUNCDECL break_c(char *pattern, char *s)
2023-09-20T09:43:20.6048148Z       |                 ^~~~~~~
2023-09-20T09:43:20.6048375Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6048920Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:94:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
2023-09-20T09:43:20.6049361Z    94 | #define  whitespace " \f\n\r\t"
2023-09-20T09:43:20.6049600Z       |                     ^~~~~~~~~~~
2023-09-20T09:43:20.6050094Z src/MTString.c:1075:20: note: in expansion of macro ‘whitespace’
2023-09-20T09:43:20.6050431Z  1075 |        sp = span_c(whitespace, &s[ps]); /* eat more whitespace */
2023-09-20T09:43:20.6050740Z       |                    ^~~~~~~~~~
2023-09-20T09:43:20.6051203Z src/MTString.c:1075:19: warning: ‘MTInt4 span_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6051546Z  1075 |        sp = span_c(whitespace, &s[ps]); /* eat more whitespace */
2023-09-20T09:43:20.6051969Z       |             ~~~~~~^~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6052243Z src/MTString.c:484:17: note: declared here
2023-09-20T09:43:20.6052574Z   484 | MTInt4 FUNCDECL span_c(char *pattern, char *s)
2023-09-20T09:43:20.6052810Z       |                 ^~~~~~
2023-09-20T09:43:20.6053034Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6053507Z src/MTString.c: In function ‘char* squash_c(char*)’:
2023-09-20T09:43:20.6054051Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:437:36: warning: ‘char* rtrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6054693Z   437 | #define trim_c(s)   ltrim_c(rtrim_c(s))
2023-09-20T09:43:20.6054946Z       |                             ~~~~~~~^~~
2023-09-20T09:43:20.6055426Z src/MTString.c:1134:5: note: in expansion of macro ‘trim_c’
2023-09-20T09:43:20.6055678Z  1134 |     trim_c(s);
2023-09-20T09:43:20.6055870Z       |     ^~~~~~
2023-09-20T09:43:20.6056167Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:444:16: note: declared here
2023-09-20T09:43:20.6056438Z   444 | char* FUNCDECL rtrim_c(char *s);
2023-09-20T09:43:20.6056698Z       |                ^~~~~~~
2023-09-20T09:43:20.6057198Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:437:28: warning: ‘char* ltrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6057535Z   437 | #define trim_c(s)   ltrim_c(rtrim_c(s))
2023-09-20T09:43:20.6057871Z       |                     ~~~~~~~^~~~~~~~~~~~
2023-09-20T09:43:20.6058292Z src/MTString.c:1134:5: note: in expansion of macro ‘trim_c’
2023-09-20T09:43:20.6058651Z  1134 |     trim_c(s);
2023-09-20T09:43:20.6058843Z       |     ^~~~~~
2023-09-20T09:43:20.6059166Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:451:16: note: declared here
2023-09-20T09:43:20.6059449Z   451 | char* FUNCDECL ltrim_c(char *s);
2023-09-20T09:43:20.6059671Z       |                ^~~~~~~
2023-09-20T09:43:20.6060281Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:94:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
2023-09-20T09:43:20.6060629Z    94 | #define  whitespace " \f\n\r\t"
2023-09-20T09:43:20.6060906Z       |                     ^~~~~~~~~~~
2023-09-20T09:43:20.6061304Z src/MTString.c:1138:27: note: in expansion of macro ‘whitespace’
2023-09-20T09:43:20.6061608Z  1138 |     while ( (sp = break_c(whitespace, &s[ps])) > 0 ) /* eat a word */
2023-09-20T09:43:20.6062006Z       |                           ^~~~~~~~~~
2023-09-20T09:43:20.6062485Z src/MTString.c:1138:26: warning: ‘MTInt4 break_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6062931Z  1138 |     while ( (sp = break_c(whitespace, &s[ps])) > 0 ) /* eat a word */
2023-09-20T09:43:20.6063216Z       |                   ~~~~~~~^~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6063519Z src/MTString.c:548:17: note: declared here
2023-09-20T09:43:20.6063772Z   548 | MTInt4 FUNCDECL break_c(char *pattern, char *s)
2023-09-20T09:43:20.6064008Z       |                 ^~~~~~~
2023-09-20T09:43:20.6064290Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6064839Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:94:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
2023-09-20T09:43:20.6065283Z    94 | #define  whitespace " \f\n\r\t"
2023-09-20T09:43:20.6065522Z       |                     ^~~~~~~~~~~
2023-09-20T09:43:20.6065940Z src/MTString.c:1141:20: note: in expansion of macro ‘whitespace’
2023-09-20T09:43:20.6066290Z  1141 |        sp = span_c(whitespace, &s[ps]); /* eat more whitespace */
2023-09-20T09:43:20.6066567Z       |                    ^~~~~~~~~~
2023-09-20T09:43:20.6067082Z src/MTString.c:1141:19: warning: ‘MTInt4 span_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6067422Z  1141 |        sp = span_c(whitespace, &s[ps]); /* eat more whitespace */
2023-09-20T09:43:20.6067738Z       |             ~~~~~~^~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6067985Z src/MTString.c:484:17: note: declared here
2023-09-20T09:43:20.6068240Z   484 | MTInt4 FUNCDECL span_c(char *pattern, char *s)
2023-09-20T09:43:20.6068552Z       |                 ^~~~~~
2023-09-20T09:43:20.6069059Z src/MTString.c: In function ‘char* lpadc_c(MTInt4, char, char*)’:
2023-09-20T09:43:20.6069675Z src/MTString.c:1339:24: warning: ‘char* strcopy_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6069984Z  1339 |     newstr1 = strcopy_c(s);
2023-09-20T09:43:20.6070272Z       |               ~~~~~~~~~^~~
2023-09-20T09:43:20.6070507Z src/MTString.c:64:16: note: declared here
2023-09-20T09:43:20.6070897Z    64 | char* FUNCDECL strcopy_c(char *s)
2023-09-20T09:43:20.6071279Z       |                ^~~~~~~~~
2023-09-20T09:43:20.6071759Z src/MTString.c:1340:12: warning: ‘char* ltrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6072289Z  1340 |     ltrim_c(newstr1);
2023-09-20T09:43:20.6072524Z       |     ~~~~~~~^~~~~~~~~
2023-09-20T09:43:20.6072848Z src/MTString.c:1233:16: note: declared here
2023-09-20T09:43:20.6073203Z  1233 | char* FUNCDECL ltrim_c(char *s)
2023-09-20T09:43:20.6073424Z       |                ^~~~~~~
2023-09-20T09:43:20.6073911Z src/MTString.c: In function ‘char* rpadc_c(MTInt4, char, char*)’:
2023-09-20T09:43:20.6074493Z src/MTString.c:1418:24: warning: ‘char* strcopy_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6074791Z  1418 |     newstr1 = strcopy_c(s);
2023-09-20T09:43:20.6075011Z       |               ~~~~~~~~~^~~
2023-09-20T09:43:20.6075322Z src/MTString.c:64:16: note: declared here
2023-09-20T09:43:20.6075569Z    64 | char* FUNCDECL strcopy_c(char *s)
2023-09-20T09:43:20.6075895Z       |                ^~~~~~~~~
2023-09-20T09:43:20.6076364Z src/MTString.c:1419:12: warning: ‘char* rtrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6076658Z  1419 |     rtrim_c(newstr1);
2023-09-20T09:43:20.6076922Z       |     ~~~~~~~^~~~~~~~~
2023-09-20T09:43:20.6077150Z src/MTString.c:1170:16: note: declared here
2023-09-20T09:43:20.6077452Z  1170 | char* FUNCDECL rtrim_c ( char *trim_string )
2023-09-20T09:43:20.6077683Z       |                ^~~~~~~
2023-09-20T09:43:20.6078056Z src/MTString.c: In function ‘char* ljust_c(char*)’:
2023-09-20T09:43:20.6078670Z src/MTString.c:1541:24: warning: ‘char* ltrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6078974Z  1541 |     nl = strlen(ltrim_c(s));
2023-09-20T09:43:20.6079284Z       |                 ~~~~~~~^~~
2023-09-20T09:43:20.6079529Z src/MTString.c:1233:16: note: declared here
2023-09-20T09:43:20.6079806Z  1233 | char* FUNCDECL ltrim_c(char *s)
2023-09-20T09:43:20.6080055Z       |                ^~~~~~~
2023-09-20T09:43:20.6080436Z src/MTString.c: In function ‘char* rjust_c(char*)’:
2023-09-20T09:43:20.6081020Z src/MTString.c:1601:24: warning: ‘char* rtrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6081325Z  1601 |     nl = strlen(rtrim_c(s));
2023-09-20T09:43:20.6081607Z       |                 ~~~~~~~^~~
2023-09-20T09:43:20.6081848Z src/MTString.c:1170:16: note: declared here
2023-09-20T09:43:20.6082175Z  1170 | char* FUNCDECL rtrim_c ( char *trim_string )
2023-09-20T09:43:20.6082463Z       |                ^~~~~~~
2023-09-20T09:43:20.6082686Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6083140Z src/MTString.c: In function ‘char* just_c(char*)’:
2023-09-20T09:43:20.6083723Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:437:36: warning: ‘char* rtrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6084065Z   437 | #define trim_c(s)   ltrim_c(rtrim_c(s))
2023-09-20T09:43:20.6084375Z       |                             ~~~~~~~^~~
2023-09-20T09:43:20.6084788Z src/MTString.c:1670:17: note: in expansion of macro ‘trim_c’
2023-09-20T09:43:20.6085131Z  1670 |     tl = strlen(trim_c(s));
2023-09-20T09:43:20.6085348Z       |                 ^~~~~~
2023-09-20T09:43:20.6085636Z src/MTString.c:1170:16: note: declared here
2023-09-20T09:43:20.6085991Z  1170 | char* FUNCDECL rtrim_c ( char *trim_string )
2023-09-20T09:43:20.6086332Z       |                ^~~~~~~
2023-09-20T09:43:20.6086678Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6087240Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:437:28: warning: ‘char* ltrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6087645Z   437 | #define trim_c(s)   ltrim_c(rtrim_c(s))
2023-09-20T09:43:20.6087888Z       |                     ~~~~~~~^~~~~~~~~~~~
2023-09-20T09:43:20.6088288Z src/MTString.c:1670:17: note: in expansion of macro ‘trim_c’
2023-09-20T09:43:20.6088619Z  1670 |     tl = strlen(trim_c(s));
2023-09-20T09:43:20.6089120Z       |                 ^~~~~~
2023-09-20T09:43:20.6089440Z src/MTString.c:1233:16: note: declared here
2023-09-20T09:43:20.6089684Z  1233 | char* FUNCDECL ltrim_c(char *s)
2023-09-20T09:43:20.6089901Z       |                ^~~~~~~
2023-09-20T09:43:20.6090424Z src/MTString.c:1671:19: warning: ‘MTInt4 wrdcnt_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6090839Z  1671 |     wsp = wrdcnt_c(s) - 1;
2023-09-20T09:43:20.6091126Z       |           ~~~~~~~~^~~
2023-09-20T09:43:20.6091364Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6091640Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:521:19: note: declared here
2023-09-20T09:43:20.6092081Z   521 | MTInt4   FUNCDECL wrdcnt_c(char *s);
2023-09-20T09:43:20.6092311Z       |                   ^~~~~~~~
2023-09-20T09:43:20.6092900Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:484:26: warning: ‘char* padc_c(MTInt4, char)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6093376Z   484 | #define pad_c(l)   padc_c(l, ' ')
2023-09-20T09:43:20.6093706Z       |                    ~~~~~~^~~~~~~~
2023-09-20T09:43:20.6094136Z src/MTString.c:1676:13: note: in expansion of macro ‘pad_c’
2023-09-20T09:43:20.6094395Z  1676 |     fill1 = pad_c(nsp);
2023-09-20T09:43:20.6094651Z       |             ^~~~~
2023-09-20T09:43:20.6094879Z src/MTString.c:1464:16: note: declared here
2023-09-20T09:43:20.6095172Z  1464 | char* FUNCDECL padc_c(MTInt4 l, char c)
2023-09-20T09:43:20.6095397Z       |                ^~~~~~
2023-09-20T09:43:20.6095621Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6096201Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:484:26: warning: ‘char* padc_c(MTInt4, char)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6096658Z   484 | #define pad_c(l)   padc_c(l, ' ')
2023-09-20T09:43:20.6096972Z       |                    ~~~~~~^~~~~~~~
2023-09-20T09:43:20.6097394Z src/MTString.c:1677:13: note: in expansion of macro ‘pad_c’
2023-09-20T09:43:20.6097727Z  1677 |     fill2 = pad_c(nsp + 1);
2023-09-20T09:43:20.6097952Z       |             ^~~~~
2023-09-20T09:43:20.6098178Z src/MTString.c:1464:16: note: declared here
2023-09-20T09:43:20.6098505Z  1464 | char* FUNCDECL padc_c(MTInt4 l, char c)
2023-09-20T09:43:20.6098730Z       |                ^~~~~~
2023-09-20T09:43:20.6098999Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6099588Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:94:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
2023-09-20T09:43:20.6099943Z    94 | #define  whitespace " \f\n\r\t"
2023-09-20T09:43:20.6100248Z       |                     ^~~~~~~~~~~
2023-09-20T09:43:20.6100649Z src/MTString.c:1681:28: note: in expansion of macro ‘whitespace’
2023-09-20T09:43:20.6100982Z  1681 |        pos = pos + break_c(whitespace, &s[pos]);
2023-09-20T09:43:20.6101232Z       |                            ^~~~~~~~~~
2023-09-20T09:43:20.6101700Z src/MTString.c:1681:27: warning: ‘MTInt4 break_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6102218Z  1681 |        pos = pos + break_c(whitespace, &s[pos]);
2023-09-20T09:43:20.6102490Z       |                    ~~~~~~~^~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6102800Z src/MTString.c:548:17: note: declared here
2023-09-20T09:43:20.6103052Z   548 | MTInt4 FUNCDECL break_c(char *pattern, char *s)
2023-09-20T09:43:20.6103346Z       |                 ^~~~~~~
2023-09-20T09:43:20.6103857Z src/MTString.c:1684:20: warning: ‘char* inserts_c(char*, MTInt4, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6104194Z  1684 |           inserts_c(fill2, pos, s, sl);
2023-09-20T09:43:20.6104496Z       |           ~~~~~~~~~^~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6104738Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6105111Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:542:16: note: declared here
2023-09-20T09:43:20.6105424Z   542 | char* FUNCDECL inserts_c(char *f, MTInt4 p, char *s, MTInt4 l);
2023-09-20T09:43:20.6105864Z       |                ^~~~~~~~~
2023-09-20T09:43:20.6106474Z src/MTString.c:1689:20: warning: ‘char* inserts_c(char*, MTInt4, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6106804Z  1689 |           inserts_c(fill1, pos, s, sl);
2023-09-20T09:43:20.6107095Z       |           ~~~~~~~~~^~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6107332Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6107682Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:542:16: note: declared here
2023-09-20T09:43:20.6107995Z   542 | char* FUNCDECL inserts_c(char *f, MTInt4 p, char *s, MTInt4 l);
2023-09-20T09:43:20.6108247Z       |                ^~~~~~~~~
2023-09-20T09:43:20.6108836Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:94:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
2023-09-20T09:43:20.6109191Z    94 | #define  whitespace " \f\n\r\t"
2023-09-20T09:43:20.6109493Z       |                     ^~~~~~~~~~~
2023-09-20T09:43:20.6109915Z src/MTString.c:1691:27: note: in expansion of macro ‘whitespace’
2023-09-20T09:43:20.6110264Z  1691 |        pos = pos + span_c(whitespace, &s[pos]);
2023-09-20T09:43:20.6110533Z       |                           ^~~~~~~~~~
2023-09-20T09:43:20.6111027Z src/MTString.c:1691:26: warning: ‘MTInt4 span_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6111396Z  1691 |        pos = pos + span_c(whitespace, &s[pos]);
2023-09-20T09:43:20.6111653Z       |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6112088Z src/MTString.c:484:17: note: declared here
2023-09-20T09:43:20.6112352Z   484 | MTInt4 FUNCDECL span_c(char *pattern, char *s)
2023-09-20T09:43:20.6112586Z       |                 ^~~~~~
2023-09-20T09:43:20.6112862Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6113276Z src/MTString.c: In function ‘char* center_c(char*)’:
2023-09-20T09:43:20.6113875Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:437:36: warning: ‘char* rtrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6114249Z   437 | #define trim_c(s)   ltrim_c(rtrim_c(s))
2023-09-20T09:43:20.6114547Z       |                             ~~~~~~~^~~
2023-09-20T09:43:20.6114947Z src/MTString.c:1753:17: note: in expansion of macro ‘trim_c’
2023-09-20T09:43:20.6115209Z  1753 |     tl = strlen(trim_c(s));
2023-09-20T09:43:20.6115500Z       |                 ^~~~~~
2023-09-20T09:43:20.6115741Z src/MTString.c:1170:16: note: declared here
2023-09-20T09:43:20.6116098Z  1170 | char* FUNCDECL rtrim_c ( char *trim_string )
2023-09-20T09:43:20.6116351Z       |                ^~~~~~~
2023-09-20T09:43:20.6116573Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6117170Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:437:28: warning: ‘char* ltrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6117514Z   437 | #define trim_c(s)   ltrim_c(rtrim_c(s))
2023-09-20T09:43:20.6117827Z       |                     ~~~~~~~^~~~~~~~~~~~
2023-09-20T09:43:20.6118242Z src/MTString.c:1753:17: note: in expansion of macro ‘trim_c’
2023-09-20T09:43:20.6118601Z  1753 |     tl = strlen(trim_c(s));
2023-09-20T09:43:20.6118840Z       |                 ^~~~~~
2023-09-20T09:43:20.6119090Z src/MTString.c:1233:16: note: declared here
2023-09-20T09:43:20.6119409Z  1233 | char* FUNCDECL ltrim_c(char *s)
2023-09-20T09:43:20.6119630Z       |                ^~~~~~~
2023-09-20T09:43:20.6119901Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6120320Z src/MTString.c: In function ‘MTInt4 wrdcnt_c(char*)’:
2023-09-20T09:43:20.6120877Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:94:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
2023-09-20T09:43:20.6121292Z    94 | #define  whitespace " \f\n\r\t"
2023-09-20T09:43:20.6121526Z       |                     ^~~~~~~~~~~
2023-09-20T09:43:20.6122095Z src/MTString.c:1812:17: note: in expansion of macro ‘whitespace’
2023-09-20T09:43:20.6122402Z  1812 |     ps = span_c(whitespace, s); /* skip initial whitespace */
2023-09-20T09:43:20.6122891Z       |                 ^~~~~~~~~~
2023-09-20T09:43:20.6123435Z src/MTString.c:1812:16: warning: ‘MTInt4 span_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6123770Z  1812 |     ps = span_c(whitespace, s); /* skip initial whitespace */
2023-09-20T09:43:20.6124093Z       |          ~~~~~~^~~~~~~~~~~~~~~
2023-09-20T09:43:20.6124331Z src/MTString.c:484:17: note: declared here
2023-09-20T09:43:20.6124631Z   484 | MTInt4 FUNCDECL span_c(char *pattern, char *s)
2023-09-20T09:43:20.6124866Z       |                 ^~~~~~
2023-09-20T09:43:20.6125088Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6125730Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:94:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
2023-09-20T09:43:20.6126076Z    94 | #define  whitespace " \f\n\r\t"
2023-09-20T09:43:20.6126360Z       |                     ^~~~~~~~~~~
2023-09-20T09:43:20.6126759Z src/MTString.c:1814:27: note: in expansion of macro ‘whitespace’
2023-09-20T09:43:20.6127138Z  1814 |     while ( (sp = break_c(whitespace, &s[ps])) > 0 ) /* eat a word */
2023-09-20T09:43:20.6127410Z       |                           ^~~~~~~~~~
2023-09-20T09:43:20.6127880Z src/MTString.c:1814:26: warning: ‘MTInt4 break_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6128265Z  1814 |     while ( (sp = break_c(whitespace, &s[ps])) > 0 ) /* eat a word */
2023-09-20T09:43:20.6128541Z       |                   ~~~~~~~^~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6128868Z src/MTString.c:548:17: note: declared here
2023-09-20T09:43:20.6129154Z   548 | MTInt4 FUNCDECL break_c(char *pattern, char *s)
2023-09-20T09:43:20.6129401Z       |                 ^~~~~~~
2023-09-20T09:43:20.6129707Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6130252Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:94:21: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
2023-09-20T09:43:20.6130655Z    94 | #define  whitespace " \f\n\r\t"
2023-09-20T09:43:20.6130896Z       |                     ^~~~~~~~~~~
2023-09-20T09:43:20.6131349Z src/MTString.c:1817:25: note: in expansion of macro ‘whitespace’
2023-09-20T09:43:20.6131675Z  1817 |        ps = ps + span_c(whitespace, &s[ps]); /* eat more whitespace */
2023-09-20T09:43:20.6132005Z       |                         ^~~~~~~~~~
2023-09-20T09:43:20.6132832Z src/MTString.c:1817:24: warning: ‘MTInt4 span_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6133192Z  1817 |        ps = ps + span_c(whitespace, &s[ps]); /* eat more whitespace */
2023-09-20T09:43:20.6133538Z       |                  ~~~~~~^~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6133804Z src/MTString.c:484:17: note: declared here
2023-09-20T09:43:20.6134100Z   484 | MTInt4 FUNCDECL span_c(char *pattern, char *s)
2023-09-20T09:43:20.6134334Z       |                 ^~~~~~
2023-09-20T09:43:20.6134821Z src/MTString.c: In function ‘MTInt4 str_element(MTInt4, char*, char*, MTInt4, char*, MTInt4*)’:
2023-09-20T09:43:20.6135462Z src/MTString.c:2128:26: warning: ISO C++ forbids comparison between pointer and integer [-fpermissive]
2023-09-20T09:43:20.6135938Z  2128 |         while ( (end_elm != '\0') && (ele_cnt < element_no_in) )
2023-09-20T09:43:20.6136263Z       |                  ~~~~~~~~^~~~~~~
2023-09-20T09:43:20.6136722Z src/MTString.c:2135:21: warning: ISO C++ forbids comparison between pointer and integer [-fpermissive]
2023-09-20T09:43:20.6137245Z  2135 |         if (end_elm == '\0')            /* end of string */
2023-09-20T09:43:20.6137522Z       |             ~~~~~~~~^~~~~~~
2023-09-20T09:43:20.6137968Z src/MTString.c: In function ‘wchar_t* mid_cw(MTInt4, MTInt4, wchar_t*)’:
2023-09-20T09:43:20.6138549Z src/MTString.c:2601:28: warning: ‘wchar_t* strcopy_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6138863Z  2601 |        sub_str = strcopy_cw(s + p);
2023-09-20T09:43:20.6139162Z       |                  ~~~~~~~~~~^~~~~~~
2023-09-20T09:43:20.6139654Z src/MTString.c:2372:19: note: declared here
2023-09-20T09:43:20.6139903Z  2372 | wchar_t* FUNCDECL strcopy_cw(wchar_t *s)
2023-09-20T09:43:20.6140221Z       |                   ^~~~~~~~~~
2023-09-20T09:43:20.6140657Z src/MTString.c: In function ‘wchar_t* left_cw(MTInt4, wchar_t*)’:
2023-09-20T09:43:20.6141267Z src/MTString.c:2678:28: warning: ‘wchar_t* strcopy_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6141589Z  2678 |        sub_str = strcopy_cw(s);
2023-09-20T09:43:20.6141876Z       |                  ~~~~~~~~~~^~~
2023-09-20T09:43:20.6142251Z src/MTString.c:2372:19: note: declared here
2023-09-20T09:43:20.6142558Z  2372 | wchar_t* FUNCDECL strcopy_cw(wchar_t *s)
2023-09-20T09:43:20.6142877Z       |                   ^~~~~~~~~~
2023-09-20T09:43:20.6143319Z src/MTString.c: In function ‘wchar_t* right_cw(MTInt4, wchar_t*)’:
2023-09-20T09:43:20.6143895Z src/MTString.c:2753:28: warning: ‘wchar_t* strcopy_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6144257Z  2753 |        sub_str = strcopy_cw(tmp_char);
2023-09-20T09:43:20.6144497Z       |                  ~~~~~~~~~~^~~~~~~~~~
2023-09-20T09:43:20.6144794Z src/MTString.c:2372:19: note: declared here
2023-09-20T09:43:20.6145041Z  2372 | wchar_t* FUNCDECL strcopy_cw(wchar_t *s)
2023-09-20T09:43:20.6145321Z       |                   ^~~~~~~~~~
2023-09-20T09:43:20.6145755Z src/MTString.c: In function ‘MTInt4 span_cw(wchar_t*, wchar_t*)’:
2023-09-20T09:43:20.6146332Z src/MTString.c:2824:21: warning: ‘MTInt4 indx_cw(wchar_t, wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6146864Z  2824 |     while ( (indx_cw(s[indx], pattern) != -1) &&
2023-09-20T09:43:20.6147125Z       |              ~~~~~~~^~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6147481Z src/MTString.c:2507:17: note: declared here
2023-09-20T09:43:20.6147743Z  2507 | MTInt4 FUNCDECL indx_cw(wchar_t c, wchar_t *s)
2023-09-20T09:43:20.6148035Z       |                 ^~~~~~~
2023-09-20T09:43:20.6148479Z src/MTString.c: In function ‘MTInt4 break_cw(wchar_t*, wchar_t*)’:
2023-09-20T09:43:20.6149016Z src/MTString.c:2887:21: warning: ‘MTInt4 indx_cw(wchar_t, wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6149537Z  2887 |     while ( (indx_cw(s[indx], pattern) == -1) &&
2023-09-20T09:43:20.6149810Z       |              ~~~~~~~^~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6150152Z src/MTString.c:2507:17: note: declared here
2023-09-20T09:43:20.6150418Z  2507 | MTInt4 FUNCDECL indx_cw(wchar_t c, wchar_t *s)
2023-09-20T09:43:20.6150704Z       |                 ^~~~~~~
2023-09-20T09:43:20.6151147Z src/MTString.c: In function ‘search_struct search_cw(wchar_t*, wchar_t*)’:
2023-09-20T09:43:20.6151680Z src/MTString.c:3009:37: warning: ISO C++ forbids converting a string constant to ‘wchar_t*’ [-Wwrite-strings]
2023-09-20T09:43:20.6152155Z  3009 |          pat_meta_or_end = break_cw(L"?+*", &pattern[pat_pos]) + pat_pos;
2023-09-20T09:43:20.6152437Z       |                                     ^~~~~~
2023-09-20T09:43:20.6153039Z src/MTString.c:3009:36: warning: ‘MTInt4 break_cw(wchar_t*, wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6153404Z  3009 |          pat_meta_or_end = break_cw(L"?+*", &pattern[pat_pos]) + pat_pos;
2023-09-20T09:43:20.6153752Z       |                            ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6154023Z src/MTString.c:2859:17: note: declared here
2023-09-20T09:43:20.6154284Z  2859 | MTInt4 FUNCDECL break_cw(wchar_t *pattern, wchar_t *s)
2023-09-20T09:43:20.6154598Z       |                 ^~~~~~~~
2023-09-20T09:43:20.6155068Z src/MTString.c:3056:38: warning: ISO C++ forbids converting a string constant to ‘wchar_t*’ [-Wwrite-strings]
2023-09-20T09:43:20.6155472Z  3056 |           pat_meta_or_end = break_cw(L"?+*", &pattern[pat_pos]) + pat_pos;
2023-09-20T09:43:20.6155755Z       |                                      ^~~~~~
2023-09-20T09:43:20.6156240Z src/MTString.c:3056:37: warning: ‘MTInt4 break_cw(wchar_t*, wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6156899Z  3056 |           pat_meta_or_end = break_cw(L"?+*", &pattern[pat_pos]) + pat_pos;
2023-09-20T09:43:20.6157201Z       |                             ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6157530Z src/MTString.c:2859:17: note: declared here
2023-09-20T09:43:20.6157789Z  2859 | MTInt4 FUNCDECL break_cw(wchar_t *pattern, wchar_t *s)
2023-09-20T09:43:20.6158094Z       |                 ^~~~~~~~
2023-09-20T09:43:20.6158539Z src/MTString.c: In function ‘MTInt4 instr_cw(MTInt4, wchar_t*, wchar_t*)’:
2023-09-20T09:43:20.6159092Z src/MTString.c:3169:21: warning: ‘search_struct search_cw(wchar_t*, wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6159539Z  3169 |        f = search_cw(subs, &s[p]);
2023-09-20T09:43:20.6159784Z       |            ~~~~~~~~~^~~~~~~~~~~~~
2023-09-20T09:43:20.6160074Z src/MTString.c:2937:24: note: declared here
2023-09-20T09:43:20.6160343Z  2937 | search_struct FUNCDECL search_cw(wchar_t *pattern, wchar_t *s)
2023-09-20T09:43:20.6160680Z       |                        ^~~~~~~~~
2023-09-20T09:43:20.6160938Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6161367Z src/MTString.c: In function ‘wchar_t* compress_cw(wchar_t*)’:
2023-09-20T09:43:20.6162249Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:770:39: warning: ‘wchar_t* rtrim_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6162611Z   770 | #define trim_cw(s)   ltrim_cw(rtrim_cw(s))
2023-09-20T09:43:20.6162944Z       |                               ~~~~~~~~^~~
2023-09-20T09:43:20.6163380Z src/MTString.c:3388:9: note: in expansion of macro ‘trim_cw’
2023-09-20T09:43:20.6163686Z  3388 |         trim_cw(s);
2023-09-20T09:43:20.6163891Z       |         ^~~~~~~
2023-09-20T09:43:20.6164146Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:777:19: note: declared here
2023-09-20T09:43:20.6164481Z   777 | wchar_t* FUNCDECL rtrim_cw(wchar_t *in_out_s);
2023-09-20T09:43:20.6164717Z       |                   ^~~~~~~~
2023-09-20T09:43:20.6165307Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:770:30: warning: ‘wchar_t* ltrim_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6165658Z   770 | #define trim_cw(s)   ltrim_cw(rtrim_cw(s))
2023-09-20T09:43:20.6165904Z       |                      ~~~~~~~~^~~~~~~~~~~~~
2023-09-20T09:43:20.6166402Z src/MTString.c:3388:9: note: in expansion of macro ‘trim_cw’
2023-09-20T09:43:20.6166769Z  3388 |         trim_cw(s);
2023-09-20T09:43:20.6166997Z       |         ^~~~~~~
2023-09-20T09:43:20.6167253Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:784:19: note: declared here
2023-09-20T09:43:20.6167622Z   784 | wchar_t* FUNCDECL ltrim_cw(wchar_t *in_out_s);
2023-09-20T09:43:20.6167861Z       |                   ^~~~~~~~
2023-09-20T09:43:20.6168392Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:633:22: warning: ISO C++ forbids converting a string constant to ‘wchar_t*’ [-Wwrite-strings]
2023-09-20T09:43:20.6168804Z   633 | #define  whitespacew L" \f\n\r\t"
2023-09-20T09:43:20.6169073Z       |                      ^~~~~~~~~~~~
2023-09-20T09:43:20.6169586Z src/MTString.c:3389:32: note: in expansion of macro ‘whitespacew’
2023-09-20T09:43:20.6169911Z  3389 |         while ( (sp = break_cw(whitespacew, &s[ps])) > 0 )  /* eat a word */
2023-09-20T09:43:20.6170201Z       |                                ^~~~~~~~~~~
2023-09-20T09:43:20.6170742Z src/MTString.c:3389:31: warning: ‘MTInt4 break_cw(wchar_t*, wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6171102Z  3389 |         while ( (sp = break_cw(whitespacew, &s[ps])) > 0 )  /* eat a word */
2023-09-20T09:43:20.6171462Z       |                       ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6171735Z src/MTString.c:2859:17: note: declared here
2023-09-20T09:43:20.6172170Z  2859 | MTInt4 FUNCDECL break_cw(wchar_t *pattern, wchar_t *s)
2023-09-20T09:43:20.6172421Z       |                 ^~~~~~~~
2023-09-20T09:43:20.6172671Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6173542Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:633:22: warning: ISO C++ forbids converting a string constant to ‘wchar_t*’ [-Wwrite-strings]
2023-09-20T09:43:20.6174012Z   633 | #define  whitespacew L" \f\n\r\t"
2023-09-20T09:43:20.6174315Z       |                      ^~~~~~~~~~~~
2023-09-20T09:43:20.6174732Z src/MTString.c:3394:30: note: in expansion of macro ‘whitespacew’
2023-09-20T09:43:20.6175121Z  3394 |                 sp = span_cw(whitespacew, &s[ps]); /* eat more whitespace */
2023-09-20T09:43:20.6175402Z       |                              ^~~~~~~~~~~
2023-09-20T09:43:20.6175888Z src/MTString.c:3394:29: warning: ‘MTInt4 span_cw(wchar_t*, wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6176322Z  3394 |                 sp = span_cw(whitespacew, &s[ps]); /* eat more whitespace */
2023-09-20T09:43:20.6176615Z       |                      ~~~~~~~^~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6176932Z src/MTString.c:2795:17: note: declared here
2023-09-20T09:43:20.6177214Z  2795 | MTInt4 FUNCDECL span_cw(wchar_t *pattern, wchar_t *s)
2023-09-20T09:43:20.6177525Z       |                 ^~~~~~~
2023-09-20T09:43:20.6177751Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6178179Z src/MTString.c: In function ‘wchar_t* squash_cw(wchar_t*)’:
2023-09-20T09:43:20.6178801Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:770:39: warning: ‘wchar_t* rtrim_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6179150Z   770 | #define trim_cw(s)   ltrim_cw(rtrim_cw(s))
2023-09-20T09:43:20.6179508Z       |                               ~~~~~~~~^~~
2023-09-20T09:43:20.6179956Z src/MTString.c:3452:9: note: in expansion of macro ‘trim_cw’
2023-09-20T09:43:20.6180216Z  3452 |         trim_cw(s);
2023-09-20T09:43:20.6180479Z       |         ^~~~~~~
2023-09-20T09:43:20.6180733Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:777:19: note: declared here
2023-09-20T09:43:20.6181064Z   777 | wchar_t* FUNCDECL rtrim_cw(wchar_t *in_out_s);
2023-09-20T09:43:20.6181318Z       |                   ^~~~~~~~
2023-09-20T09:43:20.6181846Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:770:30: warning: ‘wchar_t* ltrim_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6182397Z   770 | #define trim_cw(s)   ltrim_cw(rtrim_cw(s))
2023-09-20T09:43:20.6182650Z       |                      ~~~~~~~~^~~~~~~~~~~~~
2023-09-20T09:43:20.6183130Z src/MTString.c:3452:9: note: in expansion of macro ‘trim_cw’
2023-09-20T09:43:20.6183384Z  3452 |         trim_cw(s);
2023-09-20T09:43:20.6183652Z       |         ^~~~~~~
2023-09-20T09:43:20.6183928Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:784:19: note: declared here
2023-09-20T09:43:20.6184210Z   784 | wchar_t* FUNCDECL ltrim_cw(wchar_t *in_out_s);
2023-09-20T09:43:20.6184496Z       |                   ^~~~~~~~
2023-09-20T09:43:20.6185042Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:633:22: warning: ISO C++ forbids converting a string constant to ‘wchar_t*’ [-Wwrite-strings]
2023-09-20T09:43:20.6185438Z   633 | #define  whitespacew L" \f\n\r\t"
2023-09-20T09:43:20.6185694Z       |                      ^~~~~~~~~~~~
2023-09-20T09:43:20.6186136Z src/MTString.c:3454:32: note: in expansion of macro ‘whitespacew’
2023-09-20T09:43:20.6186445Z  3454 |         while ( (sp = break_cw(whitespacew, &s[ps])) > 0 ) /* eat a word */
2023-09-20T09:43:20.6186723Z       |                                ^~~~~~~~~~~
2023-09-20T09:43:20.6187308Z src/MTString.c:3454:31: warning: ‘MTInt4 break_cw(wchar_t*, wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6187672Z  3454 |         while ( (sp = break_cw(whitespacew, &s[ps])) > 0 ) /* eat a word */
2023-09-20T09:43:20.6188018Z       |                       ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6188278Z src/MTString.c:2859:17: note: declared here
2023-09-20T09:43:20.6188611Z  2859 | MTInt4 FUNCDECL break_cw(wchar_t *pattern, wchar_t *s)
2023-09-20T09:43:20.6188857Z       |                 ^~~~~~~~
2023-09-20T09:43:20.6189081Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6189998Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:633:22: warning: ISO C++ forbids converting a string constant to ‘wchar_t*’ [-Wwrite-strings]
2023-09-20T09:43:20.6190350Z   633 | #define  whitespacew L" \f\n\r\t"
2023-09-20T09:43:20.6190650Z       |                      ^~~~~~~~~~~~
2023-09-20T09:43:20.6191083Z src/MTString.c:3457:30: note: in expansion of macro ‘whitespacew’
2023-09-20T09:43:20.6191397Z  3457 |                 sp = span_cw(whitespacew, &s[ps]); /* eat more whitespace */
2023-09-20T09:43:20.6191726Z       |                              ^~~~~~~~~~~
2023-09-20T09:43:20.6192319Z src/MTString.c:3457:29: warning: ‘MTInt4 span_cw(wchar_t*, wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6192754Z  3457 |                 sp = span_cw(whitespacew, &s[ps]); /* eat more whitespace */
2023-09-20T09:43:20.6193045Z       |                      ~~~~~~~^~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6193376Z src/MTString.c:2795:17: note: declared here
2023-09-20T09:43:20.6193674Z  2795 | MTInt4 FUNCDECL span_cw(wchar_t *pattern, wchar_t *s)
2023-09-20T09:43:20.6193913Z       |                 ^~~~~~~
2023-09-20T09:43:20.6194415Z src/MTString.c: In function ‘wchar_t* lpadc_cw(MTInt4, wchar_t, wchar_t*)’:
2023-09-20T09:43:20.6194950Z src/MTString.c:3658:25: warning: ‘wchar_t* strcopy_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6195298Z  3658 |     newstr1 = strcopy_cw(s);
2023-09-20T09:43:20.6195518Z       |               ~~~~~~~~~~^~~
2023-09-20T09:43:20.6195821Z src/MTString.c:2372:19: note: declared here
2023-09-20T09:43:20.6196072Z  2372 | wchar_t* FUNCDECL strcopy_cw(wchar_t *s)
2023-09-20T09:43:20.6196302Z       |                   ^~~~~~~~~~
2023-09-20T09:43:20.6196859Z src/MTString.c:3659:13: warning: ‘wchar_t* ltrim_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6197167Z  3659 |     ltrim_cw(newstr1);
2023-09-20T09:43:20.6197434Z       |     ~~~~~~~~^~~~~~~~~
2023-09-20T09:43:20.6197864Z src/MTString.c:3551:19: note: declared here
2023-09-20T09:43:20.6198132Z  3551 | wchar_t* FUNCDECL ltrim_cw(wchar_t *s)
2023-09-20T09:43:20.6198413Z       |                   ^~~~~~~~
2023-09-20T09:43:20.6198855Z src/MTString.c: In function ‘wchar_t* rpadc_cw(MTInt4, wchar_t, wchar_t*)’:
2023-09-20T09:43:20.6199506Z src/MTString.c:3738:25: warning: ‘wchar_t* strcopy_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6199834Z  3738 |     newstr1 = strcopy_cw(s);
2023-09-20T09:43:20.6200067Z       |               ~~~~~~~~~~^~~
2023-09-20T09:43:20.6200355Z src/MTString.c:2372:19: note: declared here
2023-09-20T09:43:20.6200700Z  2372 | wchar_t* FUNCDECL strcopy_cw(wchar_t *s)
2023-09-20T09:43:20.6200988Z       |                   ^~~~~~~~~~
2023-09-20T09:43:20.6201457Z src/MTString.c:3739:13: warning: ‘wchar_t* rtrim_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6201812Z  3739 |     rtrim_cw(newstr1);
2023-09-20T09:43:20.6202127Z       |     ~~~~~~~~^~~~~~~~~
2023-09-20T09:43:20.6202387Z src/MTString.c:3487:19: note: declared here
2023-09-20T09:43:20.6202720Z  3487 | wchar_t* FUNCDECL rtrim_cw( wchar_t *trim_string )
2023-09-20T09:43:20.6203015Z       |                   ^~~~~~~~
2023-09-20T09:43:20.6203674Z src/MTString.c: In function ‘wchar_t* ljust_cw(wchar_t*)’:
2023-09-20T09:43:20.6204305Z src/MTString.c:3863:25: warning: ‘wchar_t* ltrim_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6204612Z  3863 |     nl = wcslen(ltrim_cw(s));
2023-09-20T09:43:20.6204892Z       |                 ~~~~~~~~^~~
2023-09-20T09:43:20.6205126Z src/MTString.c:3551:19: note: declared here
2023-09-20T09:43:20.6205450Z  3551 | wchar_t* FUNCDECL ltrim_cw(wchar_t *s)
2023-09-20T09:43:20.6205693Z       |                   ^~~~~~~~
2023-09-20T09:43:20.6206107Z src/MTString.c: In function ‘wchar_t* rjust_cw(wchar_t*)’:
2023-09-20T09:43:20.6206668Z src/MTString.c:3925:25: warning: ‘wchar_t* rtrim_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6207772Z  3925 |     nl = wcslen(rtrim_cw(s));
2023-09-20T09:43:20.6208070Z       |                 ~~~~~~~~^~~
2023-09-20T09:43:20.6208307Z src/MTString.c:3487:19: note: declared here
2023-09-20T09:43:20.6208609Z  3487 | wchar_t* FUNCDECL rtrim_cw( wchar_t *trim_string )
2023-09-20T09:43:20.6208871Z       |                   ^~~~~~~~
2023-09-20T09:43:20.6209100Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6209657Z src/MTString.c: In function ‘wchar_t* just_cw(wchar_t*)’:
2023-09-20T09:43:20.6210249Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:770:39: warning: ‘wchar_t* rtrim_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6210852Z   770 | #define trim_cw(s)   ltrim_cw(rtrim_cw(s))
2023-09-20T09:43:20.6211108Z       |                               ~~~~~~~~^~~
2023-09-20T09:43:20.6211529Z src/MTString.c:3995:17: note: in expansion of macro ‘trim_cw’
2023-09-20T09:43:20.6211871Z  3995 |     tl = wcslen(trim_cw(s));
2023-09-20T09:43:20.6212295Z       |                 ^~~~~~~
2023-09-20T09:43:20.6212614Z src/MTString.c:3487:19: note: declared here
2023-09-20T09:43:20.6212876Z  3487 | wchar_t* FUNCDECL rtrim_cw( wchar_t *trim_string )
2023-09-20T09:43:20.6213168Z       |                   ^~~~~~~~
2023-09-20T09:43:20.6213396Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6213943Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:770:30: warning: ‘wchar_t* ltrim_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6214376Z   770 | #define trim_cw(s)   ltrim_cw(rtrim_cw(s))
2023-09-20T09:43:20.6214637Z       |                      ~~~~~~~~^~~~~~~~~~~~~
2023-09-20T09:43:20.6215117Z src/MTString.c:3995:17: note: in expansion of macro ‘trim_cw’
2023-09-20T09:43:20.6215382Z  3995 |     tl = wcslen(trim_cw(s));
2023-09-20T09:43:20.6215600Z       |                 ^~~~~~~
2023-09-20T09:43:20.6215890Z src/MTString.c:3551:19: note: declared here
2023-09-20T09:43:20.6216133Z  3551 | wchar_t* FUNCDECL ltrim_cw(wchar_t *s)
2023-09-20T09:43:20.6216438Z       |                   ^~~~~~~~
2023-09-20T09:43:20.6216899Z src/MTString.c:3996:20: warning: ‘MTInt4 wrdcnt_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6217401Z  3996 |     wsp = wrdcnt_cw(s) - 1;
2023-09-20T09:43:20.6217644Z       |           ~~~~~~~~~^~~
2023-09-20T09:43:20.6217870Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6218208Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:854:19: note: declared here
2023-09-20T09:43:20.6218491Z   854 | MTInt4   FUNCDECL wrdcnt_cw(wchar_t *in_s);
2023-09-20T09:43:20.6218770Z       |                   ^~~~~~~~~
2023-09-20T09:43:20.6219336Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:817:28: warning: ‘wchar_t* padc_cw(MTInt4, wchar_t)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6219816Z   817 | #define pad_cw(l)   padc_cw(l, ' ')
2023-09-20T09:43:20.6220139Z       |                     ~~~~~~~^~~~~~~~
2023-09-20T09:43:20.6220563Z src/MTString.c:4001:13: note: in expansion of macro ‘pad_cw’
2023-09-20T09:43:20.6220898Z  4001 |     fill1 = pad_cw(nsp);
2023-09-20T09:43:20.6221109Z       |             ^~~~~~
2023-09-20T09:43:20.6221335Z src/MTString.c:3785:19: note: declared here
2023-09-20T09:43:20.6221632Z  3785 | wchar_t* FUNCDECL padc_cw(MTInt4 l, wchar_t c)
2023-09-20T09:43:20.6221867Z       |                   ^~~~~~~
2023-09-20T09:43:20.6222256Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6222825Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:817:28: warning: ‘wchar_t* padc_cw(MTInt4, wchar_t)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6223343Z   817 | #define pad_cw(l)   padc_cw(l, ' ')
2023-09-20T09:43:20.6223587Z       |                     ~~~~~~~^~~~~~~~
2023-09-20T09:43:20.6223980Z src/MTString.c:4002:13: note: in expansion of macro ‘pad_cw’
2023-09-20T09:43:20.6224322Z  4002 |     fill2 = pad_cw(nsp + 1);
2023-09-20T09:43:20.6224533Z       |             ^~~~~~
2023-09-20T09:43:20.6224837Z src/MTString.c:3785:19: note: declared here
2023-09-20T09:43:20.6225339Z  3785 | wchar_t* FUNCDECL padc_cw(MTInt4 l, wchar_t c)
2023-09-20T09:43:20.6225575Z       |                   ^~~~~~~
2023-09-20T09:43:20.6225865Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6226423Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:633:22: warning: ISO C++ forbids converting a string constant to ‘wchar_t*’ [-Wwrite-strings]
2023-09-20T09:43:20.6226814Z   633 | #define  whitespacew L" \f\n\r\t"
2023-09-20T09:43:20.6227045Z       |                      ^~~~~~~~~~~~
2023-09-20T09:43:20.6227499Z src/MTString.c:4006:29: note: in expansion of macro ‘whitespacew’
2023-09-20T09:43:20.6227808Z  4006 |        pos = pos + break_cw(whitespacew, &s[pos]);
2023-09-20T09:43:20.6228062Z       |                             ^~~~~~~~~~~
2023-09-20T09:43:20.6228628Z src/MTString.c:4006:28: warning: ‘MTInt4 break_cw(wchar_t*, wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6228961Z  4006 |        pos = pos + break_cw(whitespacew, &s[pos]);
2023-09-20T09:43:20.6229315Z       |                    ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6229584Z src/MTString.c:2859:17: note: declared here
2023-09-20T09:43:20.6229853Z  2859 | MTInt4 FUNCDECL break_cw(wchar_t *pattern, wchar_t *s)
2023-09-20T09:43:20.6230159Z       |                 ^~~~~~~~
2023-09-20T09:43:20.6230670Z src/MTString.c:4009:21: warning: ‘wchar_t* inserts_cw(wchar_t*, MTInt4, wchar_t*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6231109Z  4009 |           inserts_cw(fill2, pos, s, sl);
2023-09-20T09:43:20.6231360Z       |           ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6231656Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6232001Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:875:19: note: declared here
2023-09-20T09:43:20.6232377Z   875 | wchar_t* FUNCDECL inserts_cw(wchar_t *in_f, MTInt4 in_p, wchar_t *in_out_s, MTInt4 in_l);
2023-09-20T09:43:20.6232729Z       |                   ^~~~~~~~~~
2023-09-20T09:43:20.6233359Z src/MTString.c:4014:21: warning: ‘wchar_t* inserts_cw(wchar_t*, MTInt4, wchar_t*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6233777Z  4014 |           inserts_cw(fill1, pos, s, sl);
2023-09-20T09:43:20.6234021Z       |           ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6234322Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6234599Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:875:19: note: declared here
2023-09-20T09:43:20.6234924Z   875 | wchar_t* FUNCDECL inserts_cw(wchar_t *in_f, MTInt4 in_p, wchar_t *in_out_s, MTInt4 in_l);
2023-09-20T09:43:20.6235257Z       |                   ^~~~~~~~~~
2023-09-20T09:43:20.6235795Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:633:22: warning: ISO C++ forbids converting a string constant to ‘wchar_t*’ [-Wwrite-strings]
2023-09-20T09:43:20.6236209Z   633 | #define  whitespacew L" \f\n\r\t"
2023-09-20T09:43:20.6236455Z       |                      ^~~~~~~~~~~~
2023-09-20T09:43:20.6236940Z src/MTString.c:4016:28: note: in expansion of macro ‘whitespacew’
2023-09-20T09:43:20.6237256Z  4016 |        pos = pos + span_cw(whitespacew, &s[pos]);
2023-09-20T09:43:20.6237506Z       |                            ^~~~~~~~~~~
2023-09-20T09:43:20.6238068Z src/MTString.c:4016:27: warning: ‘MTInt4 span_cw(wchar_t*, wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6238400Z  4016 |        pos = pos + span_cw(whitespacew, &s[pos]);
2023-09-20T09:43:20.6238711Z       |                    ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6238967Z src/MTString.c:2795:17: note: declared here
2023-09-20T09:43:20.6239228Z  2795 | MTInt4 FUNCDECL span_cw(wchar_t *pattern, wchar_t *s)
2023-09-20T09:43:20.6239576Z       |                 ^~~~~~~
2023-09-20T09:43:20.6239816Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6240312Z src/MTString.c: In function ‘wchar_t* center_cw(wchar_t*)’:
2023-09-20T09:43:20.6240876Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:770:39: warning: ‘wchar_t* rtrim_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6241509Z   770 | #define trim_cw(s)   ltrim_cw(rtrim_cw(s))
2023-09-20T09:43:20.6241783Z       |                               ~~~~~~~~^~~
2023-09-20T09:43:20.6242315Z src/MTString.c:4079:17: note: in expansion of macro ‘trim_cw’
2023-09-20T09:43:20.6242654Z  4079 |     tl = wcslen(trim_cw(s));
2023-09-20T09:43:20.6242871Z       |                 ^~~~~~~
2023-09-20T09:43:20.6243155Z src/MTString.c:3487:19: note: declared here
2023-09-20T09:43:20.6243414Z  3487 | wchar_t* FUNCDECL rtrim_cw( wchar_t *trim_string )
2023-09-20T09:43:20.6243654Z       |                   ^~~~~~~~
2023-09-20T09:43:20.6243963Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6244516Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:770:30: warning: ‘wchar_t* ltrim_cw(wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6244943Z   770 | #define trim_cw(s)   ltrim_cw(rtrim_cw(s))
2023-09-20T09:43:20.6245194Z       |                      ~~~~~~~~^~~~~~~~~~~~~
2023-09-20T09:43:20.6245676Z src/MTString.c:4079:17: note: in expansion of macro ‘trim_cw’
2023-09-20T09:43:20.6245938Z  4079 |     tl = wcslen(trim_cw(s));
2023-09-20T09:43:20.6246155Z       |                 ^~~~~~~
2023-09-20T09:43:20.6246457Z src/MTString.c:3551:19: note: declared here
2023-09-20T09:43:20.6246711Z  3551 | wchar_t* FUNCDECL ltrim_cw(wchar_t *s)
2023-09-20T09:43:20.6246988Z       |                   ^~~~~~~~
2023-09-20T09:43:20.6247218Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6247638Z src/MTString.c: In function ‘MTInt4 wrdcnt_cw(wchar_t*)’:
2023-09-20T09:43:20.6248260Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:633:22: warning: ISO C++ forbids converting a string constant to ‘wchar_t*’ [-Wwrite-strings]
2023-09-20T09:43:20.6248603Z   633 | #define  whitespacew L" \f\n\r\t"
2023-09-20T09:43:20.6248900Z       |                      ^~~~~~~~~~~~
2023-09-20T09:43:20.6249305Z src/MTString.c:4139:18: note: in expansion of macro ‘whitespacew’
2023-09-20T09:43:20.6249721Z  4139 |     ps = span_cw(whitespacew, s); /* skip initial whitespace */
2023-09-20T09:43:20.6250009Z       |                  ^~~~~~~~~~~
2023-09-20T09:43:20.6250505Z src/MTString.c:4139:17: warning: ‘MTInt4 span_cw(wchar_t*, wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6250903Z  4139 |     ps = span_cw(whitespacew, s); /* skip initial whitespace */
2023-09-20T09:43:20.6251161Z       |          ~~~~~~~^~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6251486Z src/MTString.c:2795:17: note: declared here
2023-09-20T09:43:20.6251747Z  2795 | MTInt4 FUNCDECL span_cw(wchar_t *pattern, wchar_t *s)
2023-09-20T09:43:20.6252073Z       |                 ^~~~~~~
2023-09-20T09:43:20.6252365Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6252921Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:633:22: warning: ISO C++ forbids converting a string constant to ‘wchar_t*’ [-Wwrite-strings]
2023-09-20T09:43:20.6253324Z   633 | #define  whitespacew L" \f\n\r\t"
2023-09-20T09:43:20.6253580Z       |                      ^~~~~~~~~~~~
2023-09-20T09:43:20.6254030Z src/MTString.c:4141:28: note: in expansion of macro ‘whitespacew’
2023-09-20T09:43:20.6254337Z  4141 |     while ( (sp = break_cw(whitespacew, &s[ps])) > 0 ) /* eat a word */
2023-09-20T09:43:20.6254606Z       |                            ^~~~~~~~~~~
2023-09-20T09:43:20.6255185Z src/MTString.c:4141:27: warning: ‘MTInt4 break_cw(wchar_t*, wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6255544Z  4141 |     while ( (sp = break_cw(whitespacew, &s[ps])) > 0 ) /* eat a word */
2023-09-20T09:43:20.6255887Z       |                   ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6256143Z src/MTString.c:2859:17: note: declared here
2023-09-20T09:43:20.6256457Z  2859 | MTInt4 FUNCDECL break_cw(wchar_t *pattern, wchar_t *s)
2023-09-20T09:43:20.6256704Z       |                 ^~~~~~~~
2023-09-20T09:43:20.6256929Z In file included from src/MTString.c:35:
2023-09-20T09:43:20.6257515Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:633:22: warning: ISO C++ forbids converting a string constant to ‘wchar_t*’ [-Wwrite-strings]
2023-09-20T09:43:20.6258067Z   633 | #define  whitespacew L" \f\n\r\t"
2023-09-20T09:43:20.6258377Z       |                      ^~~~~~~~~~~~
2023-09-20T09:43:20.6258807Z src/MTString.c:4144:26: note: in expansion of macro ‘whitespacew’
2023-09-20T09:43:20.6259116Z  4144 |        ps = ps + span_cw(whitespacew, &s[ps]); /* eat more whitespace */
2023-09-20T09:43:20.6259457Z       |                          ^~~~~~~~~~~
2023-09-20T09:43:20.6259952Z src/MTString.c:4144:25: warning: ‘MTInt4 span_cw(wchar_t*, wchar_t*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:20.6260390Z  4144 |        ps = ps + span_cw(whitespacew, &s[ps]); /* eat more whitespace */
2023-09-20T09:43:20.6260679Z       |                  ~~~~~~~^~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:20.6260998Z src/MTString.c:2795:17: note: declared here
2023-09-20T09:43:20.6261261Z  2795 | MTInt4 FUNCDECL span_cw(wchar_t *pattern, wchar_t *s)
2023-09-20T09:43:20.6261527Z       |                 ^~~~~~~
2023-09-20T09:43:20.6262197Z src/MTString.c: In function ‘MTInt4 str_elementw(MTInt4, wchar_t*, wchar_t*, MTInt4, wchar_t*, MTInt4*)’:
2023-09-20T09:43:20.6262778Z src/MTString.c:4455:26: warning: ISO C++ forbids comparison between pointer and integer [-fpermissive]
2023-09-20T09:43:20.6263635Z  4455 |         while ( (end_elm != L'\0') && (ele_cnt < element_no_in) )
2023-09-20T09:43:20.6263927Z       |                  ~~~~~~~~^~~~~~~~
2023-09-20T09:43:20.6264452Z src/MTString.c:4462:21: warning: ISO C++ forbids comparison between pointer and integer [-fpermissive]
2023-09-20T09:43:20.6264924Z  4462 |         if (end_elm == L'\0')            /* end of string */
2023-09-20T09:43:20.6265184Z       |             ~~~~~~~~^~~~~~~~
2023-09-20T09:43:20.6265451Z COPRPLIB ompilation completed
2023-09-20T09:43:20.6265749Z rm -f *.so.*
2023-09-20T09:43:20.6267036Z /mu/bin/g++ -shared -o libMTString.so.14.0.0 src/MTString.o -pthread -Wl,--enable-new-dtags -Wl,-rpath,/mu/mtsdk/corplib/gcc1131/lib:/home/sysprog/libraries/build/gcc1131-rhel9/libmtcrypto_static:/mu/dev/gcc/1131/lib64 -L. -L/home/sysprog/libraries/stage/Linux/MU-RHEL90/gcc1131/lib -L/mu/mtsdk/corplib/gcc1131/lib -L/home/sysprog/libraries/build/gcc1131-rhel9/libmtcrypto_static -L/mu/dev/gcc/1131/lib64
2023-09-20T09:43:20.6267785Z rm -f libmtstring.so 
2023-09-20T09:43:20.6268202Z ln -s libMTString.so.14.0.0 libmtstring.so  
2023-09-20T09:43:20.6268563Z Please use below command test-case
2023-09-20T09:43:20.6268681Z 
2023-09-20T09:43:20.6268937Z make test
2023-09-20T09:43:20.6269326Z Makefile:262: warning: overriding recipe for target 'TEST_SC'
2023-09-20T09:43:20.6269844Z Makefile:222: warning: ignoring old recipe for target 'TEST_SC'
2023-09-20T09:43:20.6270112Z test compilation starts 
2023-09-20T09:43:20.6271290Z /mu/bin/g++ -c -g3 -O2 -fexceptions -shared -fpermissive  -fPIC -D_REENTRANT -DNDEBUG -D_M_DLL -DUNICODE -DMTSTRING_LIBRARY_BUILD -I/mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include -I/home/sysprog/libraries/stage/Linux/MU-RHEL90/gcc1131/include -I/mu/mtsdk/corplib/gcc1131/include -I/opt/ADO_Agent_0803/_work/6/s/include -o src/UnitTests/MTStringUnitTest.o src/UnitTests/MTStringUnitTest.cpp
2023-09-20T09:43:20.7196209Z In file included from /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:72,
2023-09-20T09:43:20.7197352Z                  from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:20.7198463Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:20.7199369Z /mu/mtsdk/corplib/gcc1131/include/rtldll.h:169: warning: "DllExport" redefined
2023-09-20T09:43:20.7200781Z   169 | #            define DllExport __attribute__ ((visibility("default")))
2023-09-20T09:43:20.7404196Z       | 
2023-09-20T09:43:20.7405027Z /mu/mtsdk/corplib/gcc1131/include/rtldll.h:161: note: this is the location of the previous definition
2023-09-20T09:43:20.7405399Z   161 | #    define DllExport
2023-09-20T09:43:20.7405670Z       | 
2023-09-20T09:43:21.2038007Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2210414Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2211687Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2213511Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testBreakNormal()’:
2023-09-20T09:43:21.2283204Z src/UnitTests/MTStringUnitTest.cpp:349:48: warning: ‘MTInt4 break_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2284744Z   349 |         CPPUNIT_ASSERT_EQUAL((MTInt4)8, break_c(MTSTRING_TEXT_ARG("a"), normalTestData));
2023-09-20T09:43:21.2285765Z       |                                         ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2286906Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2287783Z   335 |                               (actual),                \
2023-09-20T09:43:21.2288741Z       |                                ^~~~~~
2023-09-20T09:43:21.2289469Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2290193Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2290905Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:364:19: note: declared here
2023-09-20T09:43:21.2291609Z   364 | MTInt4   FUNCDECL break_c(char *pattern, char *s);
2023-09-20T09:43:21.2292409Z       |                   ^~~~~~~
2023-09-20T09:43:21.2293143Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2293704Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2294230Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2294970Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testBreakNotFound()’:
2023-09-20T09:43:21.2295848Z src/UnitTests/MTStringUnitTest.cpp:354:48: warning: ‘MTInt4 break_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2296597Z   354 |         CPPUNIT_ASSERT_EQUAL((MTInt4)0, break_c(MTSTRING_TEXT_ARG("x"), normalTestData));
2023-09-20T09:43:21.2297177Z       |                                         ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2297965Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2298548Z   335 |                               (actual),                \
2023-09-20T09:43:21.2299037Z       |                                ^~~~~~
2023-09-20T09:43:21.2299484Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2299983Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2300495Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:364:19: note: declared here
2023-09-20T09:43:21.2301319Z   364 | MTInt4   FUNCDECL break_c(char *pattern, char *s);
2023-09-20T09:43:21.2301812Z       |                   ^~~~~~~
2023-09-20T09:43:21.2302342Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2302724Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2303023Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2303564Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testBreakEmpty()’:
2023-09-20T09:43:21.2304183Z src/UnitTests/MTStringUnitTest.cpp:359:48: warning: ‘MTInt4 break_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2304602Z   359 |         CPPUNIT_ASSERT_EQUAL((MTInt4)0, break_c(emptyTestData, normalTestData));
2023-09-20T09:43:21.2304942Z       |                                         ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2305532Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2306644Z   335 |                               (actual),                \
2023-09-20T09:43:21.2306915Z       |                                ^~~~~~
2023-09-20T09:43:21.2307199Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2307493Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2307822Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:364:19: note: declared here
2023-09-20T09:43:21.2308127Z   364 | MTInt4   FUNCDECL break_c(char *pattern, char *s);
2023-09-20T09:43:21.2308387Z       |                   ^~~~~~~
2023-09-20T09:43:21.2309017Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2309368Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2309680Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2310221Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testBreakNull()’:
2023-09-20T09:43:21.2310946Z src/UnitTests/MTStringUnitTest.cpp:364:49: warning: ‘MTInt4 break_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2311507Z   364 |         CPPUNIT_ASSERT_EQUAL((MTInt4)-1, break_c(nullTestData, nullTestData));
2023-09-20T09:43:21.2311873Z       |                                          ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2312524Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2312904Z   335 |                               (actual),                \
2023-09-20T09:43:21.2313188Z       |                                ^~~~~~
2023-09-20T09:43:21.2313456Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2313762Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2314081Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:364:19: note: declared here
2023-09-20T09:43:21.2314461Z   364 | MTInt4   FUNCDECL break_c(char *pattern, char *s);
2023-09-20T09:43:21.2314708Z       |                   ^~~~~~~
2023-09-20T09:43:21.2315156Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2315504Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2315798Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2316339Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testCapitalNormal()’:
2023-09-20T09:43:21.2316949Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* capital_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2317376Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2317973Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2318436Z   335 |                               (actual),                \
2023-09-20T09:43:21.2318706Z       |                                ^~~~~~
2023-09-20T09:43:21.2319165Z src/UnitTests/MTStringUnitTest.cpp:369:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2319561Z   369 |         DO_STRING_TEST(capital_c, MTSTRING_STRING(capitalTestData), normalTestData, tempString);
2023-09-20T09:43:21.2319856Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2320140Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2320447Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2320776Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:420:16: note: declared here
2023-09-20T09:43:21.2321080Z   420 | char* FUNCDECL capital_c(char *s);
2023-09-20T09:43:21.2321310Z       |                ^~~~~~~~~
2023-09-20T09:43:21.2321768Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2322411Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2322728Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2323282Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testCapitalEmpty()’:
2023-09-20T09:43:21.2323893Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* capital_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2324323Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2324919Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2325316Z   335 |                               (actual),                \
2023-09-20T09:43:21.2325582Z       |                                ^~~~~~
2023-09-20T09:43:21.2326050Z src/UnitTests/MTStringUnitTest.cpp:374:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2326486Z   374 |         DO_STRING_TEST(capital_c, MTSTRING_STRING(emptyTestData), emptyTestData, tempString);
2023-09-20T09:43:21.2326794Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2327048Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2327342Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2327671Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:420:16: note: declared here
2023-09-20T09:43:21.2327959Z   420 | char* FUNCDECL capital_c(char *s);
2023-09-20T09:43:21.2328203Z       |                ^~~~~~~~~
2023-09-20T09:43:21.2328649Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2328985Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2329301Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2329821Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testCapitalNull()’:
2023-09-20T09:43:21.2330520Z src/UnitTests/MTStringUnitTest.cpp:379:53: warning: ‘char* capital_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2330917Z   379 |         CPPUNIT_ASSERT_EQUAL(nullTestData, capital_c(nullTestData));
2023-09-20T09:43:21.2331256Z       |                                            ~~~~~~~~~^~~~~~~~~~~~~~
2023-09-20T09:43:21.2331825Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2332271Z   335 |                               (actual),                \
2023-09-20T09:43:21.2332540Z       |                                ^~~~~~
2023-09-20T09:43:21.2332847Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2333158Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2333475Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:420:16: note: declared here
2023-09-20T09:43:21.2333810Z   420 | char* FUNCDECL capital_c(char *s);
2023-09-20T09:43:21.2334066Z       |                ^~~~~~~~~
2023-09-20T09:43:21.2334518Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2334864Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2335159Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2335691Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testCenterNormal()’:
2023-09-20T09:43:21.2336299Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* center_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2336725Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2337325Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2337722Z   335 |                               (actual),                \
2023-09-20T09:43:21.2338233Z       |                                ^~~~~~
2023-09-20T09:43:21.2338702Z src/UnitTests/MTStringUnitTest.cpp:384:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2339099Z   384 |         DO_STRING_TEST(center_c, MTSTRING_STRING(centeredTestData), normalTestData, tempString);
2023-09-20T09:43:21.2339395Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2339663Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2339973Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2340301Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:513:16: note: declared here
2023-09-20T09:43:21.2340613Z   513 | char* FUNCDECL center_c(char *s);
2023-09-20T09:43:21.2340845Z       |                ^~~~~~~~
2023-09-20T09:43:21.2341302Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2341632Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2342097Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2342632Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testCenterEmpty()’:
2023-09-20T09:43:21.2343238Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* center_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2343666Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2344263Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2344654Z   335 |                               (actual),                \
2023-09-20T09:43:21.2344921Z       |                                ^~~~~~
2023-09-20T09:43:21.2345388Z src/UnitTests/MTStringUnitTest.cpp:389:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2345769Z   389 |         DO_STRING_TEST(center_c, MTSTRING_STRING(centeredEmptyData), emptyTestData, tempString);
2023-09-20T09:43:21.2346099Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2346352Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2346646Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2346977Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:513:16: note: declared here
2023-09-20T09:43:21.2347263Z   513 | char* FUNCDECL center_c(char *s);
2023-09-20T09:43:21.2347502Z       |                ^~~~~~~~
2023-09-20T09:43:21.2347945Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2348278Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2348586Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2349102Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testCenterNull()’:
2023-09-20T09:43:21.2349728Z src/UnitTests/MTStringUnitTest.cpp:394:52: warning: ‘char* center_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2350141Z   394 |         CPPUNIT_ASSERT_EQUAL(nullTestData, center_c(nullTestData));
2023-09-20T09:43:21.2350481Z       |                                            ~~~~~~~~^~~~~~~~~~~~~~
2023-09-20T09:43:21.2351054Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2351438Z   335 |                               (actual),                \
2023-09-20T09:43:21.2351719Z       |                                ^~~~~~
2023-09-20T09:43:21.2422321Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2422896Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2423227Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:513:16: note: declared here
2023-09-20T09:43:21.2423530Z   513 | char* FUNCDECL center_c(char *s);
2023-09-20T09:43:21.2424138Z       |                ^~~~~~~~
2023-09-20T09:43:21.2425015Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2425372Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2425667Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2426219Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testCharRepNormal()’:
2023-09-20T09:43:21.2426857Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* char_rep_c(char, char, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2427299Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2427894Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2428287Z   335 |                               (actual),                \
2023-09-20T09:43:21.2428567Z       |                                ^~~~~~
2023-09-20T09:43:21.2429033Z src/UnitTests/MTStringUnitTest.cpp:399:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2429414Z   399 |         DO_STRING_TEST(char_rep_c, MTSTRING_STRING(replacedTestData), normalTestData,
2023-09-20T09:43:21.2429695Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2429960Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2430276Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2430604Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:531:16: note: declared here
2023-09-20T09:43:21.2430954Z   531 | char* FUNCDECL char_rep_c (char new_char, char old_char, char *str);
2023-09-20T09:43:21.2431227Z       |                ^~~~~~~~~~
2023-09-20T09:43:21.2431689Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2432103Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2432426Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2432961Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testCharRepEmpty()’:
2023-09-20T09:43:21.2433592Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* char_rep_c(char, char, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2434034Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2434629Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2435024Z   335 |                               (actual),                \
2023-09-20T09:43:21.2435292Z       |                                ^~~~~~
2023-09-20T09:43:21.2435763Z src/UnitTests/MTStringUnitTest.cpp:405:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2436125Z   405 |         DO_STRING_TEST(char_rep_c, MTSTRING_STRING(emptyTestData), emptyTestData,
2023-09-20T09:43:21.2436441Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2436691Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2436983Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2437313Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:531:16: note: declared here
2023-09-20T09:43:21.2437636Z   531 | char* FUNCDECL char_rep_c (char new_char, char old_char, char *str);
2023-09-20T09:43:21.2437916Z       |                ^~~~~~~~~~
2023-09-20T09:43:21.2438359Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2438691Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2438999Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2439520Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testCharRepNull()’:
2023-09-20T09:43:21.2440180Z src/UnitTests/MTStringUnitTest.cpp:411:54: warning: ‘char* char_rep_c(char, char, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2441311Z   411 |         CPPUNIT_ASSERT_EQUAL(nullTestData, char_rep_c(MTSTRING_CHAR('x'), MTSTRING_CHAR(' '), nullTestData));
2023-09-20T09:43:21.2441746Z       |                                            ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2442471Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2442878Z   335 |                               (actual),                \
2023-09-20T09:43:21.2443148Z       |                                ^~~~~~
2023-09-20T09:43:21.2443417Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2443727Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2444043Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:531:16: note: declared here
2023-09-20T09:43:21.2444405Z   531 | char* FUNCDECL char_rep_c (char new_char, char old_char, char *str);
2023-09-20T09:43:21.2444673Z       |                ^~~~~~~~~~
2023-09-20T09:43:21.2445134Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2445466Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2445759Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2446297Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testCompressNormal()’:
2023-09-20T09:43:21.2446909Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* compress_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2447339Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2447934Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2448344Z   335 |                               (actual),                \
2023-09-20T09:43:21.2448611Z       |                                ^~~~~~
2023-09-20T09:43:21.2449063Z src/UnitTests/MTStringUnitTest.cpp:416:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2449459Z   416 |         DO_STRING_TEST(compress_c, MTSTRING_STRING(compressedTestData), normalTestData, tempString);
2023-09-20T09:43:21.2449757Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2450023Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2450333Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2450675Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:428:16: note: declared here
2023-09-20T09:43:21.2450974Z   428 | char* FUNCDECL compress_c(char *s);
2023-09-20T09:43:21.2451209Z       |                ^~~~~~~~~~
2023-09-20T09:43:21.2451670Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2452079Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2452389Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2452915Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testCompressEmpty()’:
2023-09-20T09:43:21.2453541Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* compress_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2453955Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2454547Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2454940Z   335 |                               (actual),                \
2023-09-20T09:43:21.2455208Z       |                                ^~~~~~
2023-09-20T09:43:21.2455673Z src/UnitTests/MTStringUnitTest.cpp:421:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2456285Z   421 |         DO_STRING_TEST(compress_c, MTSTRING_STRING(emptyTestData), emptyTestData, tempString);
2023-09-20T09:43:21.2456597Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2456846Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2457137Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2457466Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:428:16: note: declared here
2023-09-20T09:43:21.2457752Z   428 | char* FUNCDECL compress_c(char *s);
2023-09-20T09:43:21.2457996Z       |                ^~~~~~~~~~
2023-09-20T09:43:21.2458457Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2458811Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2459105Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2459628Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testCompressNull()’:
2023-09-20T09:43:21.2460292Z src/UnitTests/MTStringUnitTest.cpp:426:54: warning: ‘char* compress_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2460692Z   426 |         CPPUNIT_ASSERT_EQUAL(nullTestData, compress_c(nullTestData));
2023-09-20T09:43:21.2461036Z       |                                            ~~~~~~~~~~^~~~~~~~~~~~~~
2023-09-20T09:43:21.2461604Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2462066Z   335 |                               (actual),                \
2023-09-20T09:43:21.2462347Z       |                                ^~~~~~
2023-09-20T09:43:21.2462616Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2462924Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2463239Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:428:16: note: declared here
2023-09-20T09:43:21.2463554Z   428 | char* FUNCDECL compress_c(char *s);
2023-09-20T09:43:21.2463795Z       |                ^~~~~~~~~~
2023-09-20T09:43:21.2464313Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testConcatNormal()’:
2023-09-20T09:43:21.2464971Z src/UnitTests/MTStringUnitTest.cpp:438:45: warning: ‘char* concat_c(MTInt4*, char**, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2465407Z   438 |         MTSTRING_STRCPY(testString, concat_c(&tempStrLen, &tempStrPtr, normalTestData, 1));
2023-09-20T09:43:21.2465782Z       |                                     ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2466108Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2466414Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2466727Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:321:16: note: declared here
2023-09-20T09:43:21.2467076Z   321 | char* FUNCDECL concat_c(MTInt4 *length, char **s1, char *s2, MTInt4 inc_fact);
2023-09-20T09:43:21.2467371Z       |                ^~~~~~~~
2023-09-20T09:43:21.2467852Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testConcatEmpty()’:
2023-09-20T09:43:21.2468517Z src/UnitTests/MTStringUnitTest.cpp:448:45: warning: ‘char* concat_c(MTInt4*, char**, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2468967Z   448 |         MTSTRING_STRCPY(testString, concat_c(&tempStrLen, &tempStrPtr, emptyTestData, 1));
2023-09-20T09:43:21.2469328Z       |                                     ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2469667Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2469958Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2470303Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:321:16: note: declared here
2023-09-20T09:43:21.2470650Z   321 | char* FUNCDECL concat_c(MTInt4 *length, char **s1, char *s2, MTInt4 inc_fact);
2023-09-20T09:43:21.2471137Z       |                ^~~~~~~~
2023-09-20T09:43:21.2471593Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2471976Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2472286Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2472807Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testConcatNull()’:
2023-09-20T09:43:21.2473486Z src/UnitTests/MTStringUnitTest.cpp:457:52: warning: ‘char* concat_c(MTInt4*, char**, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2473927Z   457 |         CPPUNIT_ASSERT_EQUAL(nullTestData, concat_c(&tempStrLen, &tempStrPtr, nullTestData, 1));
2023-09-20T09:43:21.2474316Z       |                                            ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2474913Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2475311Z   335 |                               (actual),                \
2023-09-20T09:43:21.2475594Z       |                                ^~~~~~
2023-09-20T09:43:21.2475861Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2476167Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2476482Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:321:16: note: declared here
2023-09-20T09:43:21.2476830Z   321 | char* FUNCDECL concat_c(MTInt4 *length, char **s1, char *s2, MTInt4 inc_fact);
2023-09-20T09:43:21.2477106Z       |                ^~~~~~~~
2023-09-20T09:43:21.2477551Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2477896Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2478190Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2478737Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testIndxNormal()’:
2023-09-20T09:43:21.2479354Z src/UnitTests/MTStringUnitTest.cpp:462:47: warning: ‘MTInt4 indx_c(char, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2479904Z   462 |         CPPUNIT_ASSERT_EQUAL((MTInt4)8, indx_c('a', normalTestData));
2023-09-20T09:43:21.2480240Z       |                                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2480817Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2481219Z   335 |                               (actual),                \
2023-09-20T09:43:21.2481490Z       |                                ^~~~~~
2023-09-20T09:43:21.2481769Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2482126Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2482481Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:398:19: note: declared here
2023-09-20T09:43:21.2482850Z   398 | MTInt4   FUNCDECL indx_c(char c, char *s);
2023-09-20T09:43:21.2483092Z       |                   ^~~~~~
2023-09-20T09:43:21.2483578Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2483915Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2484222Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2484742Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testIndxNotFound()’:
2023-09-20T09:43:21.2485376Z src/UnitTests/MTStringUnitTest.cpp:467:48: warning: ‘MTInt4 indx_c(char, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2485909Z   467 |         CPPUNIT_ASSERT_EQUAL((MTInt4)-1, indx_c('x', normalTestData));
2023-09-20T09:43:21.2486236Z       |                                          ~~~~~~^~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2487008Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2487390Z   335 |                               (actual),                \
2023-09-20T09:43:21.2487675Z       |                                ^~~~~~
2023-09-20T09:43:21.2487941Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2488250Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2488566Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:398:19: note: declared here
2023-09-20T09:43:21.2488862Z   398 | MTInt4   FUNCDECL indx_c(char c, char *s);
2023-09-20T09:43:21.2489114Z       |                   ^~~~~~
2023-09-20T09:43:21.2489557Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2489907Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2490220Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2490786Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testIndxEmpty()’:
2023-09-20T09:43:21.2491415Z src/UnitTests/MTStringUnitTest.cpp:472:48: warning: ‘MTInt4 indx_c(char, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2562314Z   472 |         CPPUNIT_ASSERT_EQUAL((MTInt4)-1, indx_c('z', emptyTestData));
2023-09-20T09:43:21.2562975Z       |                                          ~~~~~~^~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2563871Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2564276Z   335 |                               (actual),                \
2023-09-20T09:43:21.2564543Z       |                                ^~~~~~
2023-09-20T09:43:21.2564826Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2565117Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2565510Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:398:19: note: declared here
2023-09-20T09:43:21.2565816Z   398 | MTInt4   FUNCDECL indx_c(char c, char *s);
2023-09-20T09:43:21.2566050Z       |                   ^~~~~~
2023-09-20T09:43:21.2566508Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2566842Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2567145Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2567667Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testIndxNull()’:
2023-09-20T09:43:21.2568277Z src/UnitTests/MTStringUnitTest.cpp:477:48: warning: ‘MTInt4 indx_c(char, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2568820Z   477 |         CPPUNIT_ASSERT_EQUAL((MTInt4)-1, indx_c('z', nullTestData));
2023-09-20T09:43:21.2569137Z       |                                          ~~~~~~^~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2569729Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2570102Z   335 |                               (actual),                \
2023-09-20T09:43:21.2570402Z       |                                ^~~~~~
2023-09-20T09:43:21.2570680Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2570981Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2571311Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:398:19: note: declared here
2023-09-20T09:43:21.2571603Z   398 | MTInt4   FUNCDECL indx_c(char c, char *s);
2023-09-20T09:43:21.2571850Z       |                   ^~~~~~
2023-09-20T09:43:21.2572411Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2572816Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2573111Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2574430Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testInsertsNormal()’:
2023-09-20T09:43:21.2575106Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* inserts_c(char*, MTInt4, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2575541Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2576145Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2576517Z   335 |                               (actual),                \
2023-09-20T09:43:21.2576797Z       |                                ^~~~~~
2023-09-20T09:43:21.2577243Z src/UnitTests/MTStringUnitTest.cpp:482:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2577625Z   482 |         DO_STRING_TEST(inserts_c, MTSTRING_STRING(insertedTestData), normalTestData,
2023-09-20T09:43:21.2577926Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2578174Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2578481Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2578793Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:542:16: note: declared here
2023-09-20T09:43:21.2579121Z   542 | char* FUNCDECL inserts_c(char *f, MTInt4 p, char *s, MTInt4 l);
2023-09-20T09:43:21.2579378Z       |                ^~~~~~~~~
2023-09-20T09:43:21.2579817Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2580157Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2580465Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2581008Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testInsertsEmpty()’:
2023-09-20T09:43:21.2581663Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* inserts_c(char*, MTInt4, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2582199Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2582815Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2583203Z   335 |                               (actual),                \
2023-09-20T09:43:21.2583467Z       |                                ^~~~~~
2023-09-20T09:43:21.2583917Z src/UnitTests/MTStringUnitTest.cpp:488:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2584289Z   488 |         DO_STRING_TEST(inserts_c, MTSTRING_STRING(insertString), emptyTestData,
2023-09-20T09:43:21.2584564Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2584827Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2585116Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2585465Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:542:16: note: declared here
2023-09-20T09:43:21.2585783Z   542 | char* FUNCDECL inserts_c(char *f, MTInt4 p, char *s, MTInt4 l);
2023-09-20T09:43:21.2586040Z       |                ^~~~~~~~~
2023-09-20T09:43:21.2586494Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2586823Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2587127Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2587651Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testInsertsOverflow()’:
2023-09-20T09:43:21.2588293Z src/UnitTests/MTStringUnitTest.h:130:62: warning: ‘char* inserts_c(char*, MTInt4, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2588718Z   130 |                 CPPUNIT_ASSERT_EQUAL(compareValue, methodName(__VA_ARGS__)); \
2023-09-20T09:43:21.2589507Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2590004Z   335 |                               (actual),                \
2023-09-20T09:43:21.2590270Z       |                                ^~~~~~
2023-09-20T09:43:21.2590759Z src/UnitTests/MTStringUnitTest.cpp:494:9: note: in expansion of macro ‘DO_VALUE_TEST’
2023-09-20T09:43:21.2591145Z   494 |         DO_VALUE_TEST(inserts_c, nullTestData, emptyTestData, insertString, 0, tempString, 2);
2023-09-20T09:43:21.2591459Z       |         ^~~~~~~~~~~~~
2023-09-20T09:43:21.2591708Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2592059Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2592387Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:542:16: note: declared here
2023-09-20T09:43:21.2592704Z   542 | char* FUNCDECL inserts_c(char *f, MTInt4 p, char *s, MTInt4 l);
2023-09-20T09:43:21.2592989Z       |                ^~~~~~~~~
2023-09-20T09:43:21.2593446Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2593789Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2594082Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2594594Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testInsertsNull()’:
2023-09-20T09:43:21.2595250Z src/UnitTests/MTStringUnitTest.cpp:499:53: warning: ‘char* inserts_c(char*, MTInt4, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2595678Z   499 |         CPPUNIT_ASSERT_EQUAL(nullTestData, inserts_c(insertString, 0, nullTestData, 2));
2023-09-20T09:43:21.2596041Z       |                                            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2596620Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2597024Z   335 |                               (actual),                \
2023-09-20T09:43:21.2597286Z       |                                ^~~~~~
2023-09-20T09:43:21.2597550Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2597855Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2598166Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:542:16: note: declared here
2023-09-20T09:43:21.2598496Z   542 | char* FUNCDECL inserts_c(char *f, MTInt4 p, char *s, MTInt4 l);
2023-09-20T09:43:21.2598752Z       |                ^~~~~~~~~
2023-09-20T09:43:21.2599206Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2599531Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2599824Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2600347Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testInstrNormal()’:
2023-09-20T09:43:21.2601240Z src/UnitTests/MTStringUnitTest.cpp:504:49: warning: ‘MTInt4 instr_c(MTInt4, char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2601689Z   504 |         CPPUNIT_ASSERT_EQUAL((MTInt4)11, instr_c(0, MTSTRING_TEXT_ARG("Normal"), normalTestData));
2023-09-20T09:43:21.2602229Z       |                                          ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2602846Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2603220Z   335 |                               (actual),                \
2023-09-20T09:43:21.2603497Z       |                                ^~~~~~
2023-09-20T09:43:21.2603765Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2604054Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2604380Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:390:19: note: declared here
2023-09-20T09:43:21.2604714Z   390 | MTInt4   FUNCDECL instr_c(MTInt4 p, char *subs, char *s);
2023-09-20T09:43:21.2604980Z       |                   ^~~~~~~
2023-09-20T09:43:21.2605421Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2605747Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2606053Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2606570Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testInstrNotFound()’:
2023-09-20T09:43:21.2607217Z src/UnitTests/MTStringUnitTest.cpp:509:49: warning: ‘MTInt4 instr_c(MTInt4, char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2607777Z   509 |         CPPUNIT_ASSERT_EQUAL((MTInt4)-1, instr_c(0, emptyTestData, normalTestData));
2023-09-20T09:43:21.2608143Z       |                                          ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2608733Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2609119Z   335 |                               (actual),                \
2023-09-20T09:43:21.2609382Z       |                                ^~~~~~
2023-09-20T09:43:21.2609645Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2609950Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2610262Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:390:19: note: declared here
2023-09-20T09:43:21.2610600Z   390 | MTInt4   FUNCDECL instr_c(MTInt4 p, char *subs, char *s);
2023-09-20T09:43:21.2610863Z       |                   ^~~~~~~
2023-09-20T09:43:21.2611328Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2611660Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2612008Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2612547Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testInstrEmpty()’:
2023-09-20T09:43:21.2613217Z src/UnitTests/MTStringUnitTest.cpp:514:49: warning: ‘MTInt4 instr_c(MTInt4, char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2613818Z   514 |         CPPUNIT_ASSERT_EQUAL((MTInt4)-1, instr_c(0, MTSTRING_TEXT_ARG("Normal"), emptyTestData));
2023-09-20T09:43:21.2614197Z       |                                          ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2614796Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2615169Z   335 |                               (actual),                \
2023-09-20T09:43:21.2615446Z       |                                ^~~~~~
2023-09-20T09:43:21.2615709Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2616225Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2616561Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:390:19: note: declared here
2023-09-20T09:43:21.2616872Z   390 | MTInt4   FUNCDECL instr_c(MTInt4 p, char *subs, char *s);
2023-09-20T09:43:21.2617139Z       |                   ^~~~~~~
2023-09-20T09:43:21.2617607Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2617933Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2618243Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2618751Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testInstrNull()’:
2023-09-20T09:43:21.2619390Z src/UnitTests/MTStringUnitTest.cpp:519:49: warning: ‘MTInt4 instr_c(MTInt4, char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2619944Z   519 |         CPPUNIT_ASSERT_EQUAL((MTInt4)-1, instr_c(0, nullTestData, nullTestData));
2023-09-20T09:43:21.2620318Z       |                                          ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2620907Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2621306Z   335 |                               (actual),                \
2023-09-20T09:43:21.2621579Z       |                                ^~~~~~
2023-09-20T09:43:21.2621845Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2622214Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2622526Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:390:19: note: declared here
2023-09-20T09:43:21.2622850Z   390 | MTInt4   FUNCDECL instr_c(MTInt4 p, char *subs, char *s);
2023-09-20T09:43:21.2623101Z       |                   ^~~~~~~
2023-09-20T09:43:21.2623542Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2623900Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2624191Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2624713Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testJustNormal()’:
2023-09-20T09:43:21.2625307Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* just_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2625726Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2626316Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2626703Z   335 |                               (actual),                \
2023-09-20T09:43:21.2626969Z       |                                ^~~~~~
2023-09-20T09:43:21.2627412Z src/UnitTests/MTStringUnitTest.cpp:524:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2627822Z   524 |         DO_STRING_TEST(just_c, MTSTRING_STRING(justifiedTestData), normalTestData, tempString);
2023-09-20T09:43:21.2628111Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2628373Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2628663Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2628987Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:506:16: note: declared here
2023-09-20T09:43:21.2629267Z   506 | char* FUNCDECL just_c(char *s);
2023-09-20T09:43:21.2629484Z       |                ^~~~~~
2023-09-20T09:43:21.2629935Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2630262Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2630580Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2631102Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testJustEmpty()’:
2023-09-20T09:43:21.2631998Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* just_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2632438Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2633051Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2633438Z   335 |                               (actual),                \
2023-09-20T09:43:21.2633702Z       |                                ^~~~~~
2023-09-20T09:43:21.2634163Z src/UnitTests/MTStringUnitTest.cpp:529:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2634529Z   529 |         DO_STRING_TEST(just_c, MTSTRING_STRING(emptyTestData), emptyTestData, tempString);
2023-09-20T09:43:21.2634828Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2635076Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2635390Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2635715Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:506:16: note: declared here
2023-09-20T09:43:21.2635995Z   506 | char* FUNCDECL just_c(char *s);
2023-09-20T09:43:21.2636229Z       |                ^~~~~~
2023-09-20T09:43:21.2636665Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2636990Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2637296Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2637800Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testJustNull()’:
2023-09-20T09:43:21.2638524Z src/UnitTests/MTStringUnitTest.cpp:534:50: warning: ‘char* just_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2638907Z   534 |         CPPUNIT_ASSERT_EQUAL(nullTestData, just_c(nullTestData));
2023-09-20T09:43:21.2639238Z       |                                            ~~~~~~^~~~~~~~~~~~~~
2023-09-20T09:43:21.2639799Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2640184Z   335 |                               (actual),                \
2023-09-20T09:43:21.2640449Z       |                                ^~~~~~
2023-09-20T09:43:21.2640815Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2641159Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2641481Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:506:16: note: declared here
2023-09-20T09:43:21.2641778Z   506 | char* FUNCDECL just_c(char *s);
2023-09-20T09:43:21.2642060Z       |                ^~~~~~
2023-09-20T09:43:21.2642541Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2642926Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2643243Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2643781Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testLeftNormal()’:
2023-09-20T09:43:21.2644389Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* left_c(MTInt4, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2644816Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2645401Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2645789Z   335 |                               (actual),                \
2023-09-20T09:43:21.2646053Z       |                                ^~~~~~
2023-09-20T09:43:21.2646498Z src/UnitTests/MTStringUnitTest.cpp:539:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2646910Z   539 |         DO_STRING_TEST(left_c, MTSTRING_STRING(leftTestData), normalTestData, MTSTRING_STRLEN(leftTestData), tempString);
2023-09-20T09:43:21.2647447Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2647710Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2648000Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2648324Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:339:16: note: declared here
2023-09-20T09:43:21.2648615Z   339 | char* FUNCDECL left_c(MTInt4 l, char *s);
2023-09-20T09:43:21.2648844Z       |                ^~~~~~
2023-09-20T09:43:21.2649306Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2649633Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2649943Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2650451Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testLeftEmpty()’:
2023-09-20T09:43:21.2651096Z src/UnitTests/MTStringUnitTest.h:130:62: warning: ‘char* left_c(MTInt4, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2651511Z   130 |                 CPPUNIT_ASSERT_EQUAL(compareValue, methodName(__VA_ARGS__)); \
2023-09-20T09:43:21.2652150Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2652541Z   335 |                               (actual),                \
2023-09-20T09:43:21.2652805Z       |                                ^~~~~~
2023-09-20T09:43:21.2653269Z src/UnitTests/MTStringUnitTest.cpp:544:9: note: in expansion of macro ‘DO_VALUE_TEST’
2023-09-20T09:43:21.2653617Z   544 |         DO_VALUE_TEST(left_c, nullTestData, emptyTestData, 5, tempString);
2023-09-20T09:43:21.2653895Z       |         ^~~~~~~~~~~~~
2023-09-20T09:43:21.2654143Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2654432Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2654777Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:339:16: note: declared here
2023-09-20T09:43:21.2655067Z   339 | char* FUNCDECL left_c(MTInt4 l, char *s);
2023-09-20T09:43:21.2655308Z       |                ^~~~~~
2023-09-20T09:43:21.2655744Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2656070Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2656373Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2656879Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testLeftNull()’:
2023-09-20T09:43:21.2657501Z src/UnitTests/MTStringUnitTest.cpp:549:50: warning: ‘char* left_c(MTInt4, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2657887Z   549 |         CPPUNIT_ASSERT_EQUAL(nullTestData, left_c(0, nullTestData));
2023-09-20T09:43:21.2658206Z       |                                            ~~~~~~^~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2658778Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2659164Z   335 |                               (actual),                \
2023-09-20T09:43:21.2659428Z       |                                ^~~~~~
2023-09-20T09:43:21.2659690Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2659991Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2660304Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:339:16: note: declared here
2023-09-20T09:43:21.2660606Z   339 | char* FUNCDECL left_c(MTInt4 l, char *s);
2023-09-20T09:43:21.2660852Z       |                ^~~~~~
2023-09-20T09:43:21.2661300Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2661653Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2662002Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2662737Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testLjustNormal()’:
2023-09-20T09:43:21.2663336Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* ljust_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2663762Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2664350Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2664737Z   335 |                               (actual),                \
2023-09-20T09:43:21.2665002Z       |                                ^~~~~~
2023-09-20T09:43:21.2665449Z src/UnitTests/MTStringUnitTest.cpp:554:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2665834Z   554 |         DO_STRING_TEST(ljust_c, MTSTRING_STRING(leftJustTestData), unjustTestData, tempString);
2023-09-20T09:43:21.2666146Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2666407Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2666695Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2667023Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:492:16: note: declared here
2023-09-20T09:43:21.2667302Z   492 | char* FUNCDECL ljust_c(char *s);
2023-09-20T09:43:21.2667523Z       |                ^~~~~~~
2023-09-20T09:43:21.2667972Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2668298Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2668600Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2669111Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testLjustEmpty()’:
2023-09-20T09:43:21.2669700Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* ljust_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2670129Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2670733Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2671131Z   335 |                               (actual),                \
2023-09-20T09:43:21.2671404Z       |                                ^~~~~~
2023-09-20T09:43:21.2671867Z src/UnitTests/MTStringUnitTest.cpp:559:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2793023Z   559 |         DO_STRING_TEST(ljust_c, MTSTRING_STRING(emptyTestData), emptyTestData, tempString);
2023-09-20T09:43:21.2793443Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2793694Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2793985Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2794311Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:492:16: note: declared here
2023-09-20T09:43:21.2794660Z   492 | char* FUNCDECL ljust_c(char *s);
2023-09-20T09:43:21.2794898Z       |                ^~~~~~~
2023-09-20T09:43:21.2795783Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2796120Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2796410Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2796923Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testLjustNull()’:
2023-09-20T09:43:21.2797533Z src/UnitTests/MTStringUnitTest.cpp:564:51: warning: ‘char* ljust_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2797905Z   564 |         CPPUNIT_ASSERT_EQUAL(nullTestData, ljust_c(nullTestData));
2023-09-20T09:43:21.2798227Z       |                                            ~~~~~~~^~~~~~~~~~~~~~
2023-09-20T09:43:21.2798777Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2799610Z   335 |                               (actual),                \
2023-09-20T09:43:21.2799873Z       |                                ^~~~~~
2023-09-20T09:43:21.2800134Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2800442Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2800753Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:492:16: note: declared here
2023-09-20T09:43:21.2801068Z   492 | char* FUNCDECL ljust_c(char *s);
2023-09-20T09:43:21.2801299Z       |                ^~~~~~~
2023-09-20T09:43:21.2801758Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2802177Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2802466Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2803049Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testLowcaseNormal()’:
2023-09-20T09:43:21.2803665Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* lowcase_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2804089Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2804671Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2805053Z   335 |                               (actual),                \
2023-09-20T09:43:21.2805314Z       |                                ^~~~~~
2023-09-20T09:43:21.2805754Z src/UnitTests/MTStringUnitTest.cpp:569:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2806142Z   569 |         DO_STRING_TEST(lowcase_c, MTSTRING_STRING(lowcaseTestData), normalTestData, tempString);
2023-09-20T09:43:21.2806431Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2806706Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2807006Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2807332Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:413:16: note: declared here
2023-09-20T09:43:21.2807613Z   413 | char* FUNCDECL lowcase_c(char *s);
2023-09-20T09:43:21.2807835Z       |                ^~~~~~~~~
2023-09-20T09:43:21.2808281Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2808600Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2808902Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2809409Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testLowcaseEmpty()’:
2023-09-20T09:43:21.2810001Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* lowcase_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2810418Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2811031Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2811428Z   335 |                               (actual),                \
2023-09-20T09:43:21.2811700Z       |                                ^~~~~~
2023-09-20T09:43:21.2812209Z src/UnitTests/MTStringUnitTest.cpp:574:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2812581Z   574 |         DO_STRING_TEST(lowcase_c, MTSTRING_STRING(emptyTestData), emptyTestData, tempString);
2023-09-20T09:43:21.2812880Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2813125Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2813412Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2813733Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:413:16: note: declared here
2023-09-20T09:43:21.2814104Z   413 | char* FUNCDECL lowcase_c(char *s);
2023-09-20T09:43:21.2814435Z       |                ^~~~~~~~~
2023-09-20T09:43:21.2814906Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2815230Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2815533Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2816038Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testLowcaseNull()’:
2023-09-20T09:43:21.2816649Z src/UnitTests/MTStringUnitTest.cpp:579:53: warning: ‘char* lowcase_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2817023Z   579 |         CPPUNIT_ASSERT_EQUAL(nullTestData, lowcase_c(nullTestData));
2023-09-20T09:43:21.2817348Z       |                                            ~~~~~~~~~^~~~~~~~~~~~~~
2023-09-20T09:43:21.2817899Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2818304Z   335 |                               (actual),                \
2023-09-20T09:43:21.2818565Z       |                                ^~~~~~
2023-09-20T09:43:21.2818828Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2819129Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2819439Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:413:16: note: declared here
2023-09-20T09:43:21.2819734Z   413 | char* FUNCDECL lowcase_c(char *s);
2023-09-20T09:43:21.2819957Z       |                ^~~~~~~~~
2023-09-20T09:43:21.2820390Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2820726Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2821028Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2821558Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testLpadNormal()’:
2023-09-20T09:43:21.2822263Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* lpadc_c(MTInt4, char, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2822695Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2823277Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2823657Z   335 |                               (actual),                \
2023-09-20T09:43:21.2823920Z       |                                ^~~~~~
2023-09-20T09:43:21.2824358Z src/UnitTests/MTStringUnitTest.cpp:584:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2824723Z   584 |         DO_STRING_TEST(lpadc_c, MTSTRING_STRING(unjustTestData), normalTestData,
2023-09-20T09:43:21.2824993Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2825252Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2825553Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2825887Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:461:16: note: declared here
2023-09-20T09:43:21.2826184Z   461 | char* FUNCDECL lpadc_c(MTInt4 l, char c, char *s);
2023-09-20T09:43:21.2826420Z       |                ^~~~~~~
2023-09-20T09:43:21.2826863Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2827187Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2827487Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2827990Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testLpadEmpty()’:
2023-09-20T09:43:21.2828596Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* lpadc_c(MTInt4, char, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2829028Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2829966Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2830352Z   335 |                               (actual),                \
2023-09-20T09:43:21.2830615Z       |                                ^~~~~~
2023-09-20T09:43:21.2831079Z src/UnitTests/MTStringUnitTest.cpp:590:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2831439Z   590 |         DO_STRING_TEST(lpadc_c, MTSTRING_STRING(emptyTestData), emptyTestData,
2023-09-20T09:43:21.2831733Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2832042Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2832347Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2832675Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:461:16: note: declared here
2023-09-20T09:43:21.2832973Z   461 | char* FUNCDECL lpadc_c(MTInt4 l, char c, char *s);
2023-09-20T09:43:21.2833248Z       |                ^~~~~~~
2023-09-20T09:43:21.2833708Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2834043Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2834330Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2834830Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testLpadNull()’:
2023-09-20T09:43:21.2835457Z src/UnitTests/MTStringUnitTest.cpp:596:51: warning: ‘char* lpadc_c(MTInt4, char, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2836068Z   596 |         CPPUNIT_ASSERT_EQUAL(nullTestData, lpadc_c(MTSTRING_STRLEN(emptyTestData), MTSTRING_CHAR(' '), nullTestData));
2023-09-20T09:43:21.2836503Z       |                                            ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2837114Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2837514Z   335 |                               (actual),                \
2023-09-20T09:43:21.2837775Z       |                                ^~~~~~
2023-09-20T09:43:21.2838034Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2838334Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2838642Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:461:16: note: declared here
2023-09-20T09:43:21.2838950Z   461 | char* FUNCDECL lpadc_c(MTInt4 l, char c, char *s);
2023-09-20T09:43:21.2839187Z       |                ^~~~~~~
2023-09-20T09:43:21.2839629Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2839952Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2840240Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2840765Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testLtrimNormal()’:
2023-09-20T09:43:21.2841394Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* ltrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2841820Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2842474Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2842861Z   335 |                               (actual),                \
2023-09-20T09:43:21.2843122Z       |                                ^~~~~~
2023-09-20T09:43:21.2843573Z src/UnitTests/MTStringUnitTest.cpp:601:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2843937Z   601 |         DO_STRING_TEST(ltrim_c, MTSTRING_STRING(normalTestData), unjustTestData, tempString);
2023-09-20T09:43:21.2844222Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2844590Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2844940Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2845264Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:451:16: note: declared here
2023-09-20T09:43:21.2845541Z   451 | char* FUNCDECL ltrim_c(char *s);
2023-09-20T09:43:21.2845757Z       |                ^~~~~~~
2023-09-20T09:43:21.2846212Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2846535Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2846838Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2847341Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testLtrimEmpty()’:
2023-09-20T09:43:21.2847941Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* ltrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2848344Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2848944Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2849326Z   335 |                               (actual),                \
2023-09-20T09:43:21.2849587Z       |                                ^~~~~~
2023-09-20T09:43:21.2850046Z src/UnitTests/MTStringUnitTest.cpp:606:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2850411Z   606 |         DO_STRING_TEST(ltrim_c, MTSTRING_STRING(emptyTestData), emptyTestData, tempString);
2023-09-20T09:43:21.2850710Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2850954Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2851257Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2851593Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:451:16: note: declared here
2023-09-20T09:43:21.2851879Z   451 | char* FUNCDECL ltrim_c(char *s);
2023-09-20T09:43:21.2852179Z       |                ^~~~~~~
2023-09-20T09:43:21.2852616Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2852988Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2853275Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2853781Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testLtrimNull()’:
2023-09-20T09:43:21.2854380Z src/UnitTests/MTStringUnitTest.cpp:611:51: warning: ‘char* ltrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2854751Z   611 |         CPPUNIT_ASSERT_EQUAL(nullTestData, ltrim_c(nullTestData));
2023-09-20T09:43:21.2855069Z       |                                            ~~~~~~~^~~~~~~~~~~~~~
2023-09-20T09:43:21.2855618Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2856021Z   335 |                               (actual),                \
2023-09-20T09:43:21.2856281Z       |                                ^~~~~~
2023-09-20T09:43:21.2856539Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2856844Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2857153Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:451:16: note: declared here
2023-09-20T09:43:21.2857444Z   451 | char* FUNCDECL ltrim_c(char *s);
2023-09-20T09:43:21.2857661Z       |                ^~~~~~~
2023-09-20T09:43:21.2858105Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2858424Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2858710Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2859226Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMidNormal()’:
2023-09-20T09:43:21.2859983Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* mid_c(MTInt4, MTInt4, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2860527Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2861137Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2861532Z   335 |                               (actual),                \
2023-09-20T09:43:21.2861803Z       |                                ^~~~~~
2023-09-20T09:43:21.2862301Z src/UnitTests/MTStringUnitTest.cpp:616:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2862704Z   616 |         DO_STRING_TEST(mid_c, MTSTRING_STRING(MTSTRING_TEXT_ARG("Normal")), normalTestData, 11, 6, tempString);
2023-09-20T09:43:21.2863007Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2863268Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2863580Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2863903Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:331:16: note: declared here
2023-09-20T09:43:21.2864202Z   331 | char* FUNCDECL mid_c(MTInt4 p, MTInt4 l, char *s);
2023-09-20T09:43:21.2864436Z       |                ^~~~~
2023-09-20T09:43:21.2864880Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2865199Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2865499Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2865997Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMidEmpty()’:
2023-09-20T09:43:21.2866619Z src/UnitTests/MTStringUnitTest.h:130:62: warning: ‘char* mid_c(MTInt4, MTInt4, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2867018Z   130 |                 CPPUNIT_ASSERT_EQUAL(compareValue, methodName(__VA_ARGS__)); \
2023-09-20T09:43:21.2867598Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2867981Z   335 |                               (actual),                \
2023-09-20T09:43:21.2868240Z       |                                ^~~~~~
2023-09-20T09:43:21.2868696Z src/UnitTests/MTStringUnitTest.cpp:621:9: note: in expansion of macro ‘DO_VALUE_TEST’
2023-09-20T09:43:21.2869042Z   621 |         DO_VALUE_TEST(mid_c, nullTestData, emptyTestData, 11, 6, tempString);
2023-09-20T09:43:21.2869325Z       |         ^~~~~~~~~~~~~
2023-09-20T09:43:21.2869568Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2869856Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2870180Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:331:16: note: declared here
2023-09-20T09:43:21.2870477Z   331 | char* FUNCDECL mid_c(MTInt4 p, MTInt4 l, char *s);
2023-09-20T09:43:21.2870736Z       |                ^~~~~
2023-09-20T09:43:21.2871189Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2871535Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2871835Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2872384Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMidNull()’:
2023-09-20T09:43:21.2873013Z src/UnitTests/MTStringUnitTest.cpp:626:49: warning: ‘char* mid_c(MTInt4, MTInt4, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2873412Z   626 |         CPPUNIT_ASSERT_EQUAL(nullTestData, mid_c(0, 0, nullTestData));
2023-09-20T09:43:21.2873734Z       |                                            ~~~~~^~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2874287Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2874764Z   335 |                               (actual),                \
2023-09-20T09:43:21.2875085Z       |                                ^~~~~~
2023-09-20T09:43:21.2875366Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2875653Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2875961Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:331:16: note: declared here
2023-09-20T09:43:21.2876271Z   331 | char* FUNCDECL mid_c(MTInt4 p, MTInt4 l, char *s);
2023-09-20T09:43:21.2876504Z       |                ^~~~~
2023-09-20T09:43:21.2876957Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2877277Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2877563Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2878095Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTMBSHexConNormal()’:
2023-09-20T09:43:21.2878769Z src/UnitTests/MTStringUnitTest.cpp:633:40: warning: ‘char* MTMBSHexCon(const char*, MTInt4, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2879256Z   633 |                 std::string(MTMBSHexCon(narrowTestData, testStrLen, narrowString, TEMPSTRINGSIZE)));
2023-09-20T09:43:21.2879645Z       |                             ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2880244Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2880611Z   335 |                               (actual),                \
2023-09-20T09:43:21.2880885Z       |                                ^~~~~~
2023-09-20T09:43:21.2881161Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2881458Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2881792Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:281:16: note: declared here
2023-09-20T09:43:21.2882177Z   281 | char* FUNCDECL MTMBSHexCon ( const char *inbuf,
2023-09-20T09:43:21.2882437Z       |                ^~~~~~~~~~~
2023-09-20T09:43:21.2882965Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2883307Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2883594Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2884120Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTMBSHexConOverflow()’:
2023-09-20T09:43:21.2884795Z src/UnitTests/MTStringUnitTest.cpp:642:40: warning: ‘char* MTMBSHexCon(const char*, MTInt4, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2885256Z   642 |                 std::string(MTMBSHexCon(narrowTestData, testStrLen, narrowString, strlen(tempString))));
2023-09-20T09:43:21.2885666Z       |                             ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2886277Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2886659Z   335 |                               (actual),                \
2023-09-20T09:43:21.2886921Z       |                                ^~~~~~
2023-09-20T09:43:21.2887197Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2887486Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2887797Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:281:16: note: declared here
2023-09-20T09:43:21.2888107Z   281 | char* FUNCDECL MTMBSHexCon ( const char *inbuf,
2023-09-20T09:43:21.2888347Z       |                ^~~~~~~~~~~
2023-09-20T09:43:21.2889637Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2889963Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2890421Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2891021Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTMBSHexConEmpty()’:
2023-09-20T09:43:21.2891702Z src/UnitTests/MTStringUnitTest.cpp:648:70: warning: ‘char* MTMBSHexCon(const char*, MTInt4, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2892300Z   648 |         CPPUNIT_ASSERT_EQUAL(std::string(""), std::string(MTMBSHexCon("", 0, narrowString, TEMPSTRINGSIZE)));
2023-09-20T09:43:21.2892727Z       |                                                           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2893366Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2893733Z   335 |                               (actual),                \
2023-09-20T09:43:21.2894009Z       |                                ^~~~~~
2023-09-20T09:43:21.2894287Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2894598Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2894908Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:281:16: note: declared here
2023-09-20T09:43:21.2895204Z   281 | char* FUNCDECL MTMBSHexCon ( const char *inbuf,
2023-09-20T09:43:21.2895460Z       |                ^~~~~~~~~~~
2023-09-20T09:43:21.2895896Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2896234Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2896521Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2897034Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTMBSHexConNull()’:
2023-09-20T09:43:21.2897709Z src/UnitTests/MTStringUnitTest.cpp:655:61: warning: ‘char* MTMBSHexCon(const char*, MTInt4, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2898186Z   655 |         CPPUNIT_ASSERT_EQUAL(narrowNullTestData, MTMBSHexCon(narrowNullTestData, 0, narrowString, TEMPSTRINGSIZE));
2023-09-20T09:43:21.2898618Z       |                                                  ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2899223Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2899606Z   335 |                               (actual),                \
2023-09-20T09:43:21.2899868Z       |                                ^~~~~~
2023-09-20T09:43:21.2900143Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2900431Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2900742Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:281:16: note: declared here
2023-09-20T09:43:21.2901050Z   281 | char* FUNCDECL MTMBSHexCon ( const char *inbuf,
2023-09-20T09:43:21.2901312Z       |                ^~~~~~~~~~~
2023-09-20T09:43:21.2901830Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTMBSToWCSNormal()’:
2023-09-20T09:43:21.2902571Z src/UnitTests/MTStringUnitTest.cpp:664:45: warning: ‘int MTMBSToWCS(const char*, MTInt4, wchar_t*, MTInt4, ERR*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2903057Z   664 |         MTInt4 conversionResult = MTMBSToWCS(narrowString, strlen(narrowString), wideString, TEMPSTRINGSIZE, &err);
2023-09-20T09:43:21.2903469Z       |                                   ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2903828Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2904116Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2904425Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:182:20: note: declared here
2023-09-20T09:43:21.2904736Z   182 | MTRETCODE FUNCDECL MTMBSToWCS   ( const char *inbuf,
2023-09-20T09:43:21.2905191Z       |                    ^~~~~~~~~~
2023-09-20T09:43:21.2905719Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTMBSToWCSOverflow()’:
2023-09-20T09:43:21.2906399Z src/UnitTests/MTStringUnitTest.cpp:674:45: warning: ‘int MTMBSToWCS(const char*, MTInt4, wchar_t*, MTInt4, ERR*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2906895Z   674 |         MTInt4 conversionResult = MTMBSToWCS(narrowString, strlen(narrowString), wideString, strlen(narrowString) / 2, &err);
2023-09-20T09:43:21.2907330Z       |                                   ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2907700Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2907988Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2908299Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:182:20: note: declared here
2023-09-20T09:43:21.2908626Z   182 | MTRETCODE FUNCDECL MTMBSToWCS   ( const char *inbuf,
2023-09-20T09:43:21.2908882Z       |                    ^~~~~~~~~~
2023-09-20T09:43:21.2909384Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTMBSToWCSEmpty()’:
2023-09-20T09:43:21.2910052Z src/UnitTests/MTStringUnitTest.cpp:683:45: warning: ‘int MTMBSToWCS(const char*, MTInt4, wchar_t*, MTInt4, ERR*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2910513Z   683 |         MTInt4 conversionResult = MTMBSToWCS(narrowString, 0, wideString, TEMPSTRINGSIZE, &err);
2023-09-20T09:43:21.2910885Z       |                                   ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2911225Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2911541Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2911861Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:182:20: note: declared here
2023-09-20T09:43:21.2912256Z   182 | MTRETCODE FUNCDECL MTMBSToWCS   ( const char *inbuf,
2023-09-20T09:43:21.2912523Z       |                    ^~~~~~~~~~
2023-09-20T09:43:21.2913043Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTMBSToWCSNull()’:
2023-09-20T09:43:21.2913712Z src/UnitTests/MTStringUnitTest.cpp:692:45: warning: ‘int MTMBSToWCS(const char*, MTInt4, wchar_t*, MTInt4, ERR*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2914165Z   692 |         MTInt4 conversionResult = MTMBSToWCS(narrowNullTestData, 0, wideString, TEMPSTRINGSIZE, &err);
2023-09-20T09:43:21.2914563Z       |                                   ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2914893Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2915198Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2915507Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:182:20: note: declared here
2023-09-20T09:43:21.2915839Z   182 | MTRETCODE FUNCDECL MTMBSToWCS   ( const char *inbuf,
2023-09-20T09:43:21.2916085Z       |                    ^~~~~~~~~~
2023-09-20T09:43:21.2916520Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2916854Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2917142Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2917677Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTWCSHexConNormal()’:
2023-09-20T09:43:21.2918342Z src/UnitTests/MTStringUnitTest.cpp:700:40: warning: ‘char* MTWCSHexCon(const wchar_t*, MTInt4, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2918815Z   700 |                 std::string(MTWCSHexCon(wideTestData, testStrLen, narrowString, TEMPSTRINGSIZE)));
2023-09-20T09:43:21.2919199Z       |                             ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2919950Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2920318Z   335 |                               (actual),                \
2023-09-20T09:43:21.2920578Z       |                                ^~~~~~
2023-09-20T09:43:21.2920853Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2921154Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2921490Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:294:16: note: declared here
2023-09-20T09:43:21.2921796Z   294 | char* FUNCDECL MTWCSHexCon ( const wchar_t *inbuf,
2023-09-20T09:43:21.2922105Z       |                ^~~~~~~~~~~
2023-09-20T09:43:21.2922545Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2922868Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2923182Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2923714Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTWCSHexConOverflow()’:
2023-09-20T09:43:21.2924395Z src/UnitTests/MTStringUnitTest.cpp:709:40: warning: ‘char* MTWCSHexCon(const wchar_t*, MTInt4, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2924862Z   709 |                 std::string(MTWCSHexCon(wideTestData, testStrLen, narrowString, strlen(tempString))));
2023-09-20T09:43:21.2925271Z       |                             ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2925857Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2926237Z   335 |                               (actual),                \
2023-09-20T09:43:21.2926498Z       |                                ^~~~~~
2023-09-20T09:43:21.2926759Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2927079Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2927392Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:294:16: note: declared here
2023-09-20T09:43:21.2927711Z   294 | char* FUNCDECL MTWCSHexCon ( const wchar_t *inbuf,
2023-09-20T09:43:21.2927952Z       |                ^~~~~~~~~~~
2023-09-20T09:43:21.2928401Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2928722Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2929010Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2929538Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTWCSHexConEmpty()’:
2023-09-20T09:43:21.2930203Z src/UnitTests/MTStringUnitTest.cpp:715:70: warning: ‘char* MTWCSHexCon(const wchar_t*, MTInt4, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2930708Z   715 |         CPPUNIT_ASSERT_EQUAL(std::string(""), std::string(MTWCSHexCon(L"", 0, narrowString, TEMPSTRINGSIZE)));
2023-09-20T09:43:21.2931138Z       |                                                           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2931761Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2932225Z   335 |                               (actual),                \
2023-09-20T09:43:21.2932507Z       |                                ^~~~~~
2023-09-20T09:43:21.2932809Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2933098Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2933426Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:294:16: note: declared here
2023-09-20T09:43:21.2933723Z   294 | char* FUNCDECL MTWCSHexCon ( const wchar_t *inbuf,
2023-09-20T09:43:21.2933979Z       |                ^~~~~~~~~~~
2023-09-20T09:43:21.2934600Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2934923Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2935226Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2935741Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTWCSHexConNull()’:
2023-09-20T09:43:21.2936420Z src/UnitTests/MTStringUnitTest.cpp:721:61: warning: ‘char* MTWCSHexCon(const wchar_t*, MTInt4, char*, MTInt4)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2936884Z   721 |         CPPUNIT_ASSERT_EQUAL(narrowNullTestData, MTWCSHexCon(wideNullTestData, 0, narrowString, TEMPSTRINGSIZE));
2023-09-20T09:43:21.2937305Z       |                                                  ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2937902Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2938305Z   335 |                               (actual),                \
2023-09-20T09:43:21.2938566Z       |                                ^~~~~~
2023-09-20T09:43:21.2938828Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2939130Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2939451Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:294:16: note: declared here
2023-09-20T09:43:21.2939770Z   294 | char* FUNCDECL MTWCSHexCon ( const wchar_t *inbuf,
2023-09-20T09:43:21.2940012Z       |                ^~~~~~~~~~~
2023-09-20T09:43:21.2940508Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTWCSToMBSNormal()’:
2023-09-20T09:43:21.2941191Z src/UnitTests/MTStringUnitTest.cpp:730:45: warning: ‘int MTWCSToMBS(const wchar_t*, MTInt4, char*, MTInt4, ERR*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2941671Z   730 |         MTInt4 conversionResult = MTWCSToMBS(wideString, wcslen(wideString), narrowString, TEMPSTRINGSIZE, &err);
2023-09-20T09:43:21.2942178Z       |                                   ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2942525Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2942826Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2943135Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:166:20: note: declared here
2023-09-20T09:43:21.2943451Z   166 | MTRETCODE FUNCDECL MTWCSToMBS   ( const wchar_t *inbuf,
2023-09-20T09:43:21.2943701Z       |                    ^~~~~~~~~~
2023-09-20T09:43:21.2944200Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTWCSToMBSInvalidData()’:
2023-09-20T09:43:21.2944895Z src/UnitTests/MTStringUnitTest.cpp:741:45: warning: ‘int MTWCSToMBS(const wchar_t*, MTInt4, char*, MTInt4, ERR*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2945378Z   741 |         MTInt4 conversionResult = MTWCSToMBS(wideString, wcslen(wideString), narrowString, TEMPSTRINGSIZE, &err);
2023-09-20T09:43:21.2945798Z       |                                   ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2946140Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2946445Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2946754Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:166:20: note: declared here
2023-09-20T09:43:21.2947077Z   166 | MTRETCODE FUNCDECL MTWCSToMBS   ( const wchar_t *inbuf,
2023-09-20T09:43:21.2947326Z       |                    ^~~~~~~~~~
2023-09-20T09:43:21.2947808Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTWCSToMBSEmpty()’:
2023-09-20T09:43:21.2948490Z src/UnitTests/MTStringUnitTest.cpp:750:45: warning: ‘int MTWCSToMBS(const wchar_t*, MTInt4, char*, MTInt4, ERR*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2949113Z   750 |         MTInt4 conversionResult = MTWCSToMBS(wideString, 0, narrowString, TEMPSTRINGSIZE, &err);
2023-09-20T09:43:21.2949501Z       |                                   ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2949826Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2950126Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2950436Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:166:20: note: declared here
2023-09-20T09:43:21.2950751Z   166 | MTRETCODE FUNCDECL MTWCSToMBS   ( const wchar_t *inbuf,
2023-09-20T09:43:21.2951000Z       |                    ^~~~~~~~~~
2023-09-20T09:43:21.2951522Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTWCSToMBSNull()’:
2023-09-20T09:43:21.2952287Z src/UnitTests/MTStringUnitTest.cpp:759:45: warning: ‘int MTWCSToMBS(const wchar_t*, MTInt4, char*, MTInt4, ERR*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2952765Z   759 |         MTInt4 conversionResult = MTWCSToMBS(wideNullTestData, 0, narrowString, TEMPSTRINGSIZE, &err);
2023-09-20T09:43:21.2953163Z       |                                   ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2953494Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2953798Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2954108Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:166:20: note: declared here
2023-09-20T09:43:21.2954424Z   166 | MTRETCODE FUNCDECL MTWCSToMBS   ( const wchar_t *inbuf,
2023-09-20T09:43:21.2954673Z       |                    ^~~~~~~~~~
2023-09-20T09:43:21.2955162Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTWCSToUTF8Normal()’:
2023-09-20T09:43:21.2955851Z src/UnitTests/MTStringUnitTest.cpp:769:46: warning: ‘int MTWCSToUTF8(const wchar_t*, MTInt4, char*, MTInt4, ERR*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2956337Z   769 |         MTInt4 conversionResult = MTWCSToUTF8(wideString, wcslen(wideString), narrowString, TEMPSTRINGSIZE, &err);
2023-09-20T09:43:21.2956760Z       |                                   ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2957106Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2957408Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2957717Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:198:20: note: declared here
2023-09-20T09:43:21.2958019Z   198 | MTRETCODE FUNCDECL MTWCSToUTF8  ( const wchar_t *inbuf,
2023-09-20T09:43:21.2958282Z       |                    ^~~~~~~~~~~
2023-09-20T09:43:21.2958775Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTWCSToUTF8Overflow()’:
2023-09-20T09:43:21.2959466Z src/UnitTests/MTStringUnitTest.cpp:779:46: warning: ‘int MTWCSToUTF8(const wchar_t*, MTInt4, char*, MTInt4, ERR*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2959961Z   779 |         MTInt4 conversionResult = MTWCSToUTF8(wideString, wcslen(wideString), narrowString, wcslen(wideString) / 2, &err);
2023-09-20T09:43:21.2960404Z       |                                   ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2960757Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2961058Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2961383Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:198:20: note: declared here
2023-09-20T09:43:21.2961696Z   198 | MTRETCODE FUNCDECL MTWCSToUTF8  ( const wchar_t *inbuf,
2023-09-20T09:43:21.2962040Z       |                    ^~~~~~~~~~~
2023-09-20T09:43:21.2962562Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTWCSToUTF8Empty()’:
2023-09-20T09:43:21.2963465Z src/UnitTests/MTStringUnitTest.cpp:788:46: warning: ‘int MTWCSToUTF8(const wchar_t*, MTInt4, char*, MTInt4, ERR*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2963917Z   788 |         MTInt4 conversionResult = MTWCSToUTF8(wideString, 0, narrowString, TEMPSTRINGSIZE, &err);
2023-09-20T09:43:21.2964306Z       |                                   ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2964632Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2964931Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2965241Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:198:20: note: declared here
2023-09-20T09:43:21.2965542Z   198 | MTRETCODE FUNCDECL MTWCSToUTF8  ( const wchar_t *inbuf,
2023-09-20T09:43:21.2965807Z       |                    ^~~~~~~~~~~
2023-09-20T09:43:21.2966293Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTWCSToUTF8Null()’:
2023-09-20T09:43:21.2966997Z src/UnitTests/MTStringUnitTest.cpp:797:46: warning: ‘int MTWCSToUTF8(const wchar_t*, MTInt4, char*, MTInt4, ERR*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2967452Z   797 |         MTInt4 conversionResult = MTWCSToUTF8(wideNullTestData, 0, narrowString, TEMPSTRINGSIZE, &err);
2023-09-20T09:43:21.2967849Z       |                                   ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2968181Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2968468Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2968793Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:198:20: note: declared here
2023-09-20T09:43:21.2969094Z   198 | MTRETCODE FUNCDECL MTWCSToUTF8  ( const wchar_t *inbuf,
2023-09-20T09:43:21.2969358Z       |                    ^~~~~~~~~~~
2023-09-20T09:43:21.2969848Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTUTF8ToWCSNormal()’:
2023-09-20T09:43:21.2970548Z src/UnitTests/MTStringUnitTest.cpp:807:46: warning: ‘int MTUTF8ToWCS(const char*, MTInt4, wchar_t*, MTInt4, ERR*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2971017Z   807 |         MTInt4 conversionResult = MTUTF8ToWCS(narrowString, strlen(narrowString), wideString, TEMPSTRINGSIZE, &err);
2023-09-20T09:43:21.2971460Z       |                                   ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2971821Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2972173Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2972501Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:214:20: note: declared here
2023-09-20T09:43:21.2972801Z   214 | MTRETCODE FUNCDECL MTUTF8ToWCS  ( const char *inbuf,
2023-09-20T09:43:21.2973061Z       |                    ^~~~~~~~~~~
2023-09-20T09:43:21.2973571Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTUTF8ToWCSOverflow()’:
2023-09-20T09:43:21.2974271Z src/UnitTests/MTStringUnitTest.cpp:817:46: warning: ‘int MTUTF8ToWCS(const char*, MTInt4, wchar_t*, MTInt4, ERR*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2974753Z   817 |         MTInt4 conversionResult = MTUTF8ToWCS(narrowString, strlen(narrowString), wideString, strlen(narrowString) / 2, &err);
2023-09-20T09:43:21.2975202Z       |                                   ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2975562Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2975850Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2976172Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:214:20: note: declared here
2023-09-20T09:43:21.2976469Z   214 | MTRETCODE FUNCDECL MTUTF8ToWCS  ( const char *inbuf,
2023-09-20T09:43:21.2976732Z       |                    ^~~~~~~~~~~
2023-09-20T09:43:21.2977491Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTUTF8ToWCSEmpty()’:
2023-09-20T09:43:21.2978185Z src/UnitTests/MTStringUnitTest.cpp:826:46: warning: ‘int MTUTF8ToWCS(const char*, MTInt4, wchar_t*, MTInt4, ERR*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2978636Z   826 |         MTInt4 conversionResult = MTUTF8ToWCS(narrowString, 0, wideString, TEMPSTRINGSIZE, &err);
2023-09-20T09:43:21.2979011Z       |                                   ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2979351Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2979640Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2979966Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:214:20: note: declared here
2023-09-20T09:43:21.2980265Z   214 | MTRETCODE FUNCDECL MTUTF8ToWCS  ( const char *inbuf,
2023-09-20T09:43:21.2980528Z       |                    ^~~~~~~~~~~
2023-09-20T09:43:21.2981026Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testMTUTF8ToWCSNull()’:
2023-09-20T09:43:21.2981713Z src/UnitTests/MTStringUnitTest.cpp:834:46: warning: ‘int MTUTF8ToWCS(const char*, MTInt4, wchar_t*, MTInt4, ERR*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2982264Z   834 |         MTInt4 conversionResult = MTUTF8ToWCS(narrowNullTestData, 0, wideString, TEMPSTRINGSIZE, &err);
2023-09-20T09:43:21.2982651Z       |                                   ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.2983045Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2983330Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2983652Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:214:20: note: declared here
2023-09-20T09:43:21.2983952Z   214 | MTRETCODE FUNCDECL MTUTF8ToWCS  ( const char *inbuf,
2023-09-20T09:43:21.2984212Z       |                    ^~~~~~~~~~~
2023-09-20T09:43:21.2984676Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2984994Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2985292Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2985794Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testPadNormal()’:
2023-09-20T09:43:21.2986400Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* padc_c(MTInt4, char)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2986809Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2987407Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2987771Z   335 |                               (actual),                \
2023-09-20T09:43:21.2988037Z       |                                ^~~~~~
2023-09-20T09:43:21.2988501Z src/UnitTests/MTStringUnitTest.cpp:917:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2989030Z   917 |         DO_STRING_TEST(padc_c, MTSTRING_STRING(blankTestData), emptyTestData, 4, MTSTRING_CHAR(' '));
2023-09-20T09:43:21.2989340Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2989584Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2989884Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2990192Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:478:16: note: declared here
2023-09-20T09:43:21.2990476Z   478 | char* FUNCDECL padc_c(MTInt4 l, char c);
2023-09-20T09:43:21.2990715Z       |                ^~~~~~
2023-09-20T09:43:21.2991145Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2991497Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2991797Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2992569Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testPadEmpty()’:
2023-09-20T09:43:21.2993164Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* padc_c(MTInt4, char)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.2993572Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.2994171Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.2994542Z   335 |                               (actual),                \
2023-09-20T09:43:21.2994816Z       |                                ^~~~~~
2023-09-20T09:43:21.2995259Z src/UnitTests/MTStringUnitTest.cpp:922:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.2995805Z   922 |         DO_STRING_TEST(padc_c, MTSTRING_STRING(emptyTestData), emptyTestData, 0, MTSTRING_CHAR(' '));
2023-09-20T09:43:21.2996116Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.2996360Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.2996661Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2996968Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:478:16: note: declared here
2023-09-20T09:43:21.2997267Z   478 | char* FUNCDECL padc_c(MTInt4 l, char c);
2023-09-20T09:43:21.2997491Z       |                ^~~~~~
2023-09-20T09:43:21.2997932Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.2998251Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.2998537Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.2999056Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testRightNormal()’:
2023-09-20T09:43:21.2999653Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* right_c(MTInt4, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3000085Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.3000669Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3001053Z   335 |                               (actual),                \
2023-09-20T09:43:21.3001326Z       |                                ^~~~~~
2023-09-20T09:43:21.3001779Z src/UnitTests/MTStringUnitTest.cpp:927:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.3002226Z   927 |         DO_STRING_TEST(right_c, MTSTRING_STRING(blankTestData), normalTestData, 4, tempString);
2023-09-20T09:43:21.3002512Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.3002800Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3003088Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3003416Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:347:16: note: declared here
2023-09-20T09:43:21.3003709Z   347 | char* FUNCDECL right_c(MTInt4 l, char *s);
2023-09-20T09:43:21.3003937Z       |                ^~~~~~~
2023-09-20T09:43:21.3004387Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3004708Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3005010Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3005510Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testRightEmpty()’:
2023-09-20T09:43:21.3006121Z src/UnitTests/MTStringUnitTest.h:130:62: warning: ‘char* right_c(MTInt4, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3006511Z   130 |                 CPPUNIT_ASSERT_EQUAL(compareValue, methodName(__VA_ARGS__)); \
2023-09-20T09:43:21.3007072Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3007612Z   335 |                               (actual),                \
2023-09-20T09:43:21.3007874Z       |                                ^~~~~~
2023-09-20T09:43:21.3008362Z src/UnitTests/MTStringUnitTest.cpp:932:9: note: in expansion of macro ‘DO_VALUE_TEST’
2023-09-20T09:43:21.3008706Z   932 |         DO_VALUE_TEST(right_c, nullTestData, emptyTestData, 4, tempString);
2023-09-20T09:43:21.3008986Z       |         ^~~~~~~~~~~~~
2023-09-20T09:43:21.3009229Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3009517Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3009841Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:347:16: note: declared here
2023-09-20T09:43:21.3010129Z   347 | char* FUNCDECL right_c(MTInt4 l, char *s);
2023-09-20T09:43:21.3010370Z       |                ^~~~~~~
2023-09-20T09:43:21.3010799Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3011143Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3011447Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3012027Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testRightNull()’:
2023-09-20T09:43:21.3012658Z src/UnitTests/MTStringUnitTest.cpp:937:51: warning: ‘char* right_c(MTInt4, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3013040Z   937 |         CPPUNIT_ASSERT_EQUAL(nullTestData, right_c(0, nullTestData));
2023-09-20T09:43:21.3013368Z       |                                            ~~~~~~~^~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.3013918Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3014302Z   335 |                               (actual),                \
2023-09-20T09:43:21.3014563Z       |                                ^~~~~~
2023-09-20T09:43:21.3014836Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3015140Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3015450Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:347:16: note: declared here
2023-09-20T09:43:21.3015757Z   347 | char* FUNCDECL right_c(MTInt4 l, char *s);
2023-09-20T09:43:21.3015986Z       |                ^~~~~~~
2023-09-20T09:43:21.3016429Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3016749Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3017034Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3017551Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testRjustNormal()’:
2023-09-20T09:43:21.3018139Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* rjust_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3018560Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.3019146Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3019528Z   335 |                               (actual),                \
2023-09-20T09:43:21.3019787Z       |                                ^~~~~~
2023-09-20T09:43:21.3020227Z src/UnitTests/MTStringUnitTest.cpp:942:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.3020613Z   942 |         DO_STRING_TEST(rjust_c, MTSTRING_STRING(rightJustTestData), unjustTestData, tempString);
2023-09-20T09:43:21.3020899Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.3021156Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3021458Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3021791Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:499:16: note: declared here
2023-09-20T09:43:21.3022498Z   499 | char* FUNCDECL rjust_c(char *s);
2023-09-20T09:43:21.3022719Z       |                ^~~~~~~
2023-09-20T09:43:21.3023198Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3023520Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3023822Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3024324Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testRjustEmpty()’:
2023-09-20T09:43:21.3024923Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* rjust_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3025324Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.3025905Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3026297Z   335 |                               (actual),                \
2023-09-20T09:43:21.3026562Z       |                                ^~~~~~
2023-09-20T09:43:21.3027135Z src/UnitTests/MTStringUnitTest.cpp:947:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.3027504Z   947 |         DO_STRING_TEST(rjust_c, MTSTRING_STRING(emptyTestData), emptyTestData, tempString);
2023-09-20T09:43:21.3027800Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.3028046Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3028333Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3028655Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:499:16: note: declared here
2023-09-20T09:43:21.3028931Z   499 | char* FUNCDECL rjust_c(char *s);
2023-09-20T09:43:21.3029160Z       |                ^~~~~~~
2023-09-20T09:43:21.3029587Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3029922Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3030221Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3030728Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testRjustNull()’:
2023-09-20T09:43:21.3031329Z src/UnitTests/MTStringUnitTest.cpp:952:51: warning: ‘char* rjust_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3031714Z   952 |         CPPUNIT_ASSERT_EQUAL(nullTestData, rjust_c(nullTestData));
2023-09-20T09:43:21.3032131Z       |                                            ~~~~~~~^~~~~~~~~~~~~~
2023-09-20T09:43:21.3032685Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3033064Z   335 |                               (actual),                \
2023-09-20T09:43:21.3033324Z       |                                ^~~~~~
2023-09-20T09:43:21.3033583Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3033900Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3034208Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:499:16: note: declared here
2023-09-20T09:43:21.3034499Z   499 | char* FUNCDECL rjust_c(char *s);
2023-09-20T09:43:21.3034715Z       |                ^~~~~~~
2023-09-20T09:43:21.3035157Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3035476Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3035764Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3036281Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testRpadNormal()’:
2023-09-20T09:43:21.3036891Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* rpadc_c(MTInt4, char, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3037325Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.3038157Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3038542Z   335 |                               (actual),                \
2023-09-20T09:43:21.3038803Z       |                                ^~~~~~
2023-09-20T09:43:21.3039241Z src/UnitTests/MTStringUnitTest.cpp:957:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.3039608Z   957 |         DO_STRING_TEST(rpadc_c, MTSTRING_STRING(leftJustTestData), normalTestData,
2023-09-20T09:43:21.3039881Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.3040137Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3040422Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3040744Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:470:16: note: declared here
2023-09-20T09:43:21.3041040Z   470 | char* FUNCDECL rpadc_c(MTInt4 l, char c, char *s);
2023-09-20T09:43:21.3041285Z       |                ^~~~~~~
2023-09-20T09:43:21.3041745Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3042159Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3042466Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3043152Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testRpadEmpty()’:
2023-09-20T09:43:21.3043781Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* rpadc_c(MTInt4, char, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3044196Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.3044779Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3045159Z   335 |                               (actual),                \
2023-09-20T09:43:21.3045432Z       |                                ^~~~~~
2023-09-20T09:43:21.3045891Z src/UnitTests/MTStringUnitTest.cpp:963:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.3046240Z   963 |         DO_STRING_TEST(rpadc_c, MTSTRING_STRING(emptyTestData), emptyTestData,
2023-09-20T09:43:21.3046522Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.3046766Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3047055Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3047378Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:470:16: note: declared here
2023-09-20T09:43:21.3047673Z   470 | char* FUNCDECL rpadc_c(MTInt4 l, char c, char *s);
2023-09-20T09:43:21.3047924Z       |                ^~~~~~~
2023-09-20T09:43:21.3048349Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3048684Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3048980Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3049481Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testRpadNull()’:
2023-09-20T09:43:21.3050104Z src/UnitTests/MTStringUnitTest.cpp:969:51: warning: ‘char* rpadc_c(MTInt4, char, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3050663Z   969 |         CPPUNIT_ASSERT_EQUAL(nullTestData, rpadc_c(0, MTSTRING_CHAR(' '), nullTestData));
2023-09-20T09:43:21.3051033Z       |                                            ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.3051620Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3052193Z   335 |                               (actual),                \
2023-09-20T09:43:21.3052463Z       |                                ^~~~~~
2023-09-20T09:43:21.3052743Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3053196Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3053507Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:470:16: note: declared here
2023-09-20T09:43:21.3053818Z   470 | char* FUNCDECL rpadc_c(MTInt4 l, char c, char *s);
2023-09-20T09:43:21.3054054Z       |                ^~~~~~~
2023-09-20T09:43:21.3054526Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3054845Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3055133Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3055661Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testRtrimNormal()’:
2023-09-20T09:43:21.3056245Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* rtrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3056661Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.3057252Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3057640Z   335 |                               (actual),                \
2023-09-20T09:43:21.3057902Z       |                                ^~~~~~
2023-09-20T09:43:21.3058356Z src/UnitTests/MTStringUnitTest.cpp:974:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.3058719Z   974 |         DO_STRING_TEST(rtrim_c, MTSTRING_STRING(emptyTestData), blankTestData, tempString);
2023-09-20T09:43:21.3059001Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.3059259Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3059546Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3059871Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:444:16: note: declared here
2023-09-20T09:43:21.3060147Z   444 | char* FUNCDECL rtrim_c(char *s);
2023-09-20T09:43:21.3060373Z       |                ^~~~~~~
2023-09-20T09:43:21.3060815Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3061134Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3061453Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3062045Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testRtrimEmpty()’:
2023-09-20T09:43:21.3062691Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* rtrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3063094Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.3063692Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3064059Z   335 |                               (actual),                \
2023-09-20T09:43:21.3064332Z       |                                ^~~~~~
2023-09-20T09:43:21.3064785Z src/UnitTests/MTStringUnitTest.cpp:979:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.3065148Z   979 |         DO_STRING_TEST(rtrim_c, MTSTRING_STRING(emptyTestData), emptyTestData, tempString);
2023-09-20T09:43:21.3065444Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.3065689Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3065989Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3066300Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:444:16: note: declared here
2023-09-20T09:43:21.3066579Z   444 | char* FUNCDECL rtrim_c(char *s);
2023-09-20T09:43:21.3066810Z       |                ^~~~~~~
2023-09-20T09:43:21.3067238Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3067571Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3067947Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3068512Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testRtrimNull()’:
2023-09-20T09:43:21.3069113Z src/UnitTests/MTStringUnitTest.cpp:984:51: warning: ‘char* rtrim_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3069483Z   984 |         CPPUNIT_ASSERT_EQUAL(nullTestData, rtrim_c(nullTestData));
2023-09-20T09:43:21.3069797Z       |                                            ~~~~~~~^~~~~~~~~~~~~~
2023-09-20T09:43:21.3070344Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3070724Z   335 |                               (actual),                \
2023-09-20T09:43:21.3070985Z       |                                ^~~~~~
2023-09-20T09:43:21.3071257Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3071561Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3071892Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:444:16: note: declared here
2023-09-20T09:43:21.3072250Z   444 | char* FUNCDECL rtrim_c(char *s);
2023-09-20T09:43:21.3072465Z       |                ^~~~~~~
2023-09-20T09:43:21.3073002Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testSearchNormal()’:
2023-09-20T09:43:21.3073636Z src/UnitTests/MTStringUnitTest.cpp:990:34: warning: ‘search_struct search_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3074053Z   990 |         search_results = search_c(MTSTRING_TEXT_ARG("*Normal*"), normalTestData);
2023-09-20T09:43:21.3074388Z       |                          ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.3074696Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3074996Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3075304Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:379:24: note: declared here
2023-09-20T09:43:21.3075633Z   379 | search_struct FUNCDECL search_c(char *pattern, char *s);
2023-09-20T09:43:21.3075887Z       |                        ^~~~~~~~
2023-09-20T09:43:21.3076361Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testSearchEmpty()’:
2023-09-20T09:43:21.3076993Z src/UnitTests/MTStringUnitTest.cpp:997:34: warning: ‘search_struct search_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3077392Z   997 |         search_results = search_c(MTSTRING_TEXT_ARG("xyzzy"), emptyTestData);
2023-09-20T09:43:21.3077732Z       |                          ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.3078036Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3078337Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3078647Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:379:24: note: declared here
2023-09-20T09:43:21.3078974Z   379 | search_struct FUNCDECL search_c(char *pattern, char *s);
2023-09-20T09:43:21.3079228Z       |                        ^~~~~~~~
2023-09-20T09:43:21.3079702Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testSearchNull()’:
2023-09-20T09:43:21.3080332Z src/UnitTests/MTStringUnitTest.cpp:1004:34: warning: ‘search_struct search_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3080714Z  1004 |         search_results = search_c(nullTestData, nullTestData);
2023-09-20T09:43:21.3081020Z       |                          ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.3081309Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3081623Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3082015Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:379:24: note: declared here
2023-09-20T09:43:21.3082336Z   379 | search_struct FUNCDECL search_c(char *pattern, char *s);
2023-09-20T09:43:21.3082768Z       |                        ^~~~~~~~
2023-09-20T09:43:21.3083254Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3083590Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3083879Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3084382Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testSpanNormal()’:
2023-09-20T09:43:21.3085003Z src/UnitTests/MTStringUnitTest.cpp:1010:47: warning: ‘MTInt4 span_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3085410Z  1010 |         CPPUNIT_ASSERT_EQUAL((MTInt4)4, span_c(MTSTRING_TEXT_ARG("this"), normalTestData));
2023-09-20T09:43:21.3085781Z       |                                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.3086360Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3086755Z   335 |                               (actual),                \
2023-09-20T09:43:21.3087017Z       |                                ^~~~~~
2023-09-20T09:43:21.3087292Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3087582Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3087889Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:356:19: note: declared here
2023-09-20T09:43:21.3088199Z   356 | MTInt4   FUNCDECL span_c(char *pattern, char *s);
2023-09-20T09:43:21.3088440Z       |                   ^~~~~~
2023-09-20T09:43:21.3088884Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3089207Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3089516Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3090015Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testSpanEmpty()’:
2023-09-20T09:43:21.3090626Z src/UnitTests/MTStringUnitTest.cpp:1015:47: warning: ‘MTInt4 span_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3091037Z  1015 |         CPPUNIT_ASSERT_EQUAL((MTInt4)0, span_c(emptyTestData, emptyTestData));
2023-09-20T09:43:21.3091367Z       |                                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.3092041Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3092425Z   335 |                               (actual),                \
2023-09-20T09:43:21.3092703Z       |                                ^~~~~~
2023-09-20T09:43:21.3092966Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3093254Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3093578Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:356:19: note: declared here
2023-09-20T09:43:21.3093885Z   356 | MTInt4   FUNCDECL span_c(char *pattern, char *s);
2023-09-20T09:43:21.3094138Z       |                   ^~~~~~
2023-09-20T09:43:21.3094595Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3094927Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3095214Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3095712Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testSpanNull()’:
2023-09-20T09:43:21.3096327Z src/UnitTests/MTStringUnitTest.cpp:1020:47: warning: ‘MTInt4 span_c(char*, char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3096720Z  1020 |         CPPUNIT_ASSERT_EQUAL((MTInt4)0, span_c(nullTestData, nullTestData));
2023-09-20T09:43:21.3097056Z       |                                         ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.3097613Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3098144Z   335 |                               (actual),                \
2023-09-20T09:43:21.3098406Z       |                                ^~~~~~
2023-09-20T09:43:21.3098666Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3098970Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3099279Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:356:19: note: declared here
2023-09-20T09:43:21.3099588Z   356 | MTInt4   FUNCDECL span_c(char *pattern, char *s);
2023-09-20T09:43:21.3099825Z       |                   ^~~~~~
2023-09-20T09:43:21.3100281Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3100602Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3100888Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3101418Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testSquashNormal()’:
2023-09-20T09:43:21.3102112Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* squash_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3102548Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.3103208Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3103593Z   335 |                               (actual),                \
2023-09-20T09:43:21.3103853Z       |                                ^~~~~~
2023-09-20T09:43:21.3104311Z src/UnitTests/MTStringUnitTest.cpp:1025:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.3104683Z  1025 |         DO_STRING_TEST(squash_c, MTSTRING_STRING(squashedTestData), unjustTestData, tempString);
2023-09-20T09:43:21.3104972Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.3105247Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3105535Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3105862Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:435:16: note: declared here
2023-09-20T09:43:21.3106143Z   435 | char* FUNCDECL squash_c(char *s);
2023-09-20T09:43:21.3106361Z       |                ^~~~~~~~
2023-09-20T09:43:21.3106805Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3107127Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3107427Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3107937Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testSquashEmpty()’:
2023-09-20T09:43:21.3108538Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* squash_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3108943Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.3109529Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3109910Z   335 |                               (actual),                \
2023-09-20T09:43:21.3110171Z       |                                ^~~~~~
2023-09-20T09:43:21.3110626Z src/UnitTests/MTStringUnitTest.cpp:1030:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.3110992Z  1030 |         DO_STRING_TEST(squash_c, MTSTRING_STRING(emptyTestData), emptyTestData, tempString);
2023-09-20T09:43:21.3111291Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.3111550Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3111848Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3112240Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:435:16: note: declared here
2023-09-20T09:43:21.3112674Z   435 | char* FUNCDECL squash_c(char *s);
2023-09-20T09:43:21.3112911Z       |                ^~~~~~~~
2023-09-20T09:43:21.3113371Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3113710Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3113998Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3114501Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testSquashNull()’:
2023-09-20T09:43:21.3115112Z src/UnitTests/MTStringUnitTest.cpp:1035:52: warning: ‘char* squash_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3115483Z  1035 |         CPPUNIT_ASSERT_EQUAL(nullTestData, squash_c(nullTestData));
2023-09-20T09:43:21.3115802Z       |                                            ~~~~~~~~^~~~~~~~~~~~~~
2023-09-20T09:43:21.3116348Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3116740Z   335 |                               (actual),                \
2023-09-20T09:43:21.3117001Z       |                                ^~~~~~
2023-09-20T09:43:21.3117262Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3117568Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3117877Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:435:16: note: declared here
2023-09-20T09:43:21.3118172Z   435 | char* FUNCDECL squash_c(char *s);
2023-09-20T09:43:21.3118392Z       |                ^~~~~~~~
2023-09-20T09:43:21.3118838Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3119158Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3119443Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3119973Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testStrElementNormal()’:
2023-09-20T09:43:21.3120666Z src/UnitTests/MTStringUnitTest.h:130:62: warning: ‘MTInt4 str_element(MTInt4, char*, char*, MTInt4, char*, MTInt4*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3121114Z   130 |                 CPPUNIT_ASSERT_EQUAL(compareValue, methodName(__VA_ARGS__)); \
2023-09-20T09:43:21.3121694Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3122301Z   335 |                               (actual),                \
2023-09-20T09:43:21.3122564Z       |                                ^~~~~~
2023-09-20T09:43:21.3123031Z src/UnitTests/MTStringUnitTest.cpp:1042:9: note: in expansion of macro ‘DO_VALUE_TEST’
2023-09-20T09:43:21.3123367Z  1042 |         DO_VALUE_TEST(str_element, (MTInt4)1, replacedTestData, 4,
2023-09-20T09:43:21.3123620Z       |         ^~~~~~~~~~~~~
2023-09-20T09:43:21.3123879Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3124178Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3124504Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:619:17: note: declared here
2023-09-20T09:43:21.3124802Z   619 | MTInt4 FUNCDECL str_element (MTInt4 element_no_in,
2023-09-20T09:43:21.3125047Z       |                 ^~~~~~~~~~~
2023-09-20T09:43:21.3125498Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3125816Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3126116Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3126627Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testStrElementEmpty()’:
2023-09-20T09:43:21.3127316Z src/UnitTests/MTStringUnitTest.h:130:62: warning: ‘MTInt4 str_element(MTInt4, char*, char*, MTInt4, char*, MTInt4*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3127748Z   130 |                 CPPUNIT_ASSERT_EQUAL(compareValue, methodName(__VA_ARGS__)); \
2023-09-20T09:43:21.3128522Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3128896Z   335 |                               (actual),                \
2023-09-20T09:43:21.3129157Z       |                                ^~~~~~
2023-09-20T09:43:21.3129613Z src/UnitTests/MTStringUnitTest.cpp:1051:9: note: in expansion of macro ‘DO_VALUE_TEST’
2023-09-20T09:43:21.3129943Z  1051 |         DO_VALUE_TEST(str_element, (MTInt4)1, emptyTestData, 0,
2023-09-20T09:43:21.3130208Z       |         ^~~~~~~~~~~~~
2023-09-20T09:43:21.3130450Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3130756Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3131073Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:619:17: note: declared here
2023-09-20T09:43:21.3131374Z   619 | MTInt4 FUNCDECL str_element (MTInt4 element_no_in,
2023-09-20T09:43:21.3131656Z       |                 ^~~~~~~~~~~
2023-09-20T09:43:21.3132168Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3132507Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3132837Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3133355Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testStrElementNull()’:
2023-09-20T09:43:21.3134045Z src/UnitTests/MTStringUnitTest.cpp:1061:28: warning: ‘MTInt4 str_element(MTInt4, char*, char*, MTInt4, char*, MTInt4*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3134514Z  1061 |                 str_element(0, nullTestData, nullTestData, TEMPSTRINGSIZE, returnString, &returnLength));
2023-09-20T09:43:21.3134917Z       |                 ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.3135532Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3135921Z   335 |                               (actual),                \
2023-09-20T09:43:21.3136183Z       |                                ^~~~~~
2023-09-20T09:43:21.3136459Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3136747Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3137074Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:619:17: note: declared here
2023-09-20T09:43:21.3137372Z   619 | MTInt4 FUNCDECL str_element (MTInt4 element_no_in,
2023-09-20T09:43:21.3137628Z       |                 ^~~~~~~~~~~
2023-09-20T09:43:21.3138061Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3138379Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3138681Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3139198Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testStrFreeNormal()’:
2023-09-20T09:43:21.3139816Z src/UnitTests/MTStringUnitTest.cpp:1068:43: warning: ‘void str_free_c(char**)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3140182Z  1068 |         CPPUNIT_ASSERT_NO_THROW(str_free_c(&tempString));
2023-09-20T09:43:21.3140477Z       |                                 ~~~~~~~~~~^~~~~~~~~~~~~
2023-09-20T09:43:21.3141037Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:592:10: note: in definition of macro ‘CPPUNIT_ASSERT_NO_THROW_MESSAGE’
2023-09-20T09:43:21.3141443Z   592 |          expression;                                                          \
2023-09-20T09:43:21.3141738Z       |          ^~~~~~~~~~
2023-09-20T09:43:21.3142291Z src/UnitTests/MTStringUnitTest.cpp:1068:9: note: in expansion of macro ‘CPPUNIT_ASSERT_NO_THROW’
2023-09-20T09:43:21.3142653Z  1068 |         CPPUNIT_ASSERT_NO_THROW(str_free_c(&tempString));
2023-09-20T09:43:21.3143049Z       |         ^~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.3143319Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3143606Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3143920Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:550:16: note: declared here
2023-09-20T09:43:21.3144219Z   550 | void  FUNCDECL str_free_c (char **s);
2023-09-20T09:43:21.3144444Z       |                ^~~~~~~~~~
2023-09-20T09:43:21.3144904Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3145224Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3145511Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3146031Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testStrFreeNull()’:
2023-09-20T09:43:21.3146630Z src/UnitTests/MTStringUnitTest.cpp:1074:43: warning: ‘void str_free_c(char**)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3147021Z  1074 |         CPPUNIT_ASSERT_NO_THROW(str_free_c(&tempString));
2023-09-20T09:43:21.3147304Z       |                                 ~~~~~~~~~~^~~~~~~~~~~~~
2023-09-20T09:43:21.3147879Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:592:10: note: in definition of macro ‘CPPUNIT_ASSERT_NO_THROW_MESSAGE’
2023-09-20T09:43:21.3148282Z   592 |          expression;                                                          \
2023-09-20T09:43:21.3148562Z       |          ^~~~~~~~~~
2023-09-20T09:43:21.3149003Z src/UnitTests/MTStringUnitTest.cpp:1074:9: note: in expansion of macro ‘CPPUNIT_ASSERT_NO_THROW’
2023-09-20T09:43:21.3149340Z  1074 |         CPPUNIT_ASSERT_NO_THROW(str_free_c(&tempString));
2023-09-20T09:43:21.3149608Z       |         ^~~~~~~~~~~~~~~~~~~~~~~
2023-09-20T09:43:21.3149864Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3150163Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3150484Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:550:16: note: declared here
2023-09-20T09:43:21.3150783Z   550 | void  FUNCDECL str_free_c (char **s);
2023-09-20T09:43:21.3151009Z       |                ^~~~~~~~~~
2023-09-20T09:43:21.3151439Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3151796Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3152178Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3152742Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testStrCopyNormal()’:
2023-09-20T09:43:21.3153338Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* strcopy_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3153753Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.3154344Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3154718Z   335 |                               (actual),                \
2023-09-20T09:43:21.3154989Z       |                                ^~~~~~
2023-09-20T09:43:21.3155430Z src/UnitTests/MTStringUnitTest.cpp:1079:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.3155815Z  1079 |         DO_STRING_TEST(strcopy_c, MTSTRING_STRING(normalTestData), normalTestData, tempString);
2023-09-20T09:43:21.3156103Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.3156360Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3156647Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3156957Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:308:16: note: declared here
2023-09-20T09:43:21.3157250Z   308 | char* FUNCDECL strcopy_c(char *s);
2023-09-20T09:43:21.3157471Z       |                ^~~~~~~~~
2023-09-20T09:43:21.3158075Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3158399Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3158834Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3159360Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testStrCopyEmpty()’:
2023-09-20T09:43:21.3159950Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* strcopy_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3160368Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.3160949Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3161331Z   335 |                               (actual),                \
2023-09-20T09:43:21.3161608Z       |                                ^~~~~~
2023-09-20T09:43:21.3162173Z src/UnitTests/MTStringUnitTest.cpp:1084:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.3162553Z  1084 |         DO_STRING_TEST(strcopy_c, MTSTRING_STRING(emptyTestData), emptyTestData, tempString);
2023-09-20T09:43:21.3162897Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.3163156Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3163440Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3163764Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:308:16: note: declared here
2023-09-20T09:43:21.3164044Z   308 | char* FUNCDECL strcopy_c(char *s);
2023-09-20T09:43:21.3164282Z       |                ^~~~~~~~~
2023-09-20T09:43:21.3164728Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3165043Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3165345Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3165864Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testStrCopyNull()’:
2023-09-20T09:43:21.3166474Z src/UnitTests/MTStringUnitTest.cpp:1089:53: warning: ‘char* strcopy_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3166849Z  1089 |         CPPUNIT_ASSERT_EQUAL(nullTestData, strcopy_c(nullTestData));
2023-09-20T09:43:21.3167174Z       |                                            ~~~~~~~~~^~~~~~~~~~~~~~
2023-09-20T09:43:21.3167726Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3168089Z   335 |                               (actual),                \
2023-09-20T09:43:21.3168370Z       |                                ^~~~~~
2023-09-20T09:43:21.3168632Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3168932Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3169248Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:308:16: note: declared here
2023-09-20T09:43:21.3169546Z   308 | char* FUNCDECL strcopy_c(char *s);
2023-09-20T09:43:21.3169767Z       |                ^~~~~~~~~
2023-09-20T09:43:21.3170197Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3170531Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3170816Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3171339Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testUpcaseNormal()’:
2023-09-20T09:43:21.3172021Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* upcase_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3172442Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.3173031Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3173587Z   335 |                               (actual),                \
2023-09-20T09:43:21.3173866Z       |                                ^~~~~~
2023-09-20T09:43:21.3174338Z src/UnitTests/MTStringUnitTest.cpp:1094:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.3174724Z  1094 |         DO_STRING_TEST(upcase_c, MTSTRING_STRING(upcaseTestData), normalTestData, tempString);
2023-09-20T09:43:21.3175010Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.3175267Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3175554Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3175870Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:406:16: note: declared here
2023-09-20T09:43:21.3176161Z   406 | char* FUNCDECL upcase_c(char *s);
2023-09-20T09:43:21.3176379Z       |                ^~~~~~~~
2023-09-20T09:43:21.3176829Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3177163Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3177451Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3177974Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testUpcaseEmpty()’:
2023-09-20T09:43:21.3178561Z src/UnitTests/MTStringUnitTest.h:124:79: warning: ‘char* upcase_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3178976Z   124 |                 CPPUNIT_ASSERT_EQUAL(compareString, MTSTRING_STRING(methodName(__VA_ARGS__))); \
2023-09-20T09:43:21.3179561Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3179940Z   335 |                               (actual),                \
2023-09-20T09:43:21.3180201Z       |                                ^~~~~~
2023-09-20T09:43:21.3180659Z src/UnitTests/MTStringUnitTest.cpp:1099:9: note: in expansion of macro ‘DO_STRING_TEST’
2023-09-20T09:43:21.3181034Z  1099 |         DO_STRING_TEST(upcase_c, MTSTRING_STRING(emptyTestData), emptyTestData, tempString);
2023-09-20T09:43:21.3181315Z       |         ^~~~~~~~~~~~~~
2023-09-20T09:43:21.3181571Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3181877Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3182276Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:406:16: note: declared here
2023-09-20T09:43:21.3182555Z   406 | char* FUNCDECL upcase_c(char *s);
2023-09-20T09:43:21.3182797Z       |                ^~~~~~~~
2023-09-20T09:43:21.3183251Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3183572Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3183875Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3184379Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testUpcaseNull()’:
2023-09-20T09:43:21.3185185Z src/UnitTests/MTStringUnitTest.cpp:1104:52: warning: ‘char* upcase_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3185562Z  1104 |         CPPUNIT_ASSERT_EQUAL(nullTestData, upcase_c(nullTestData));
2023-09-20T09:43:21.3185883Z       |                                            ~~~~~~~~^~~~~~~~~~~~~~
2023-09-20T09:43:21.3186434Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3186801Z   335 |                               (actual),                \
2023-09-20T09:43:21.3187077Z       |                                ^~~~~~
2023-09-20T09:43:21.3187338Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3187642Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3187951Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:406:16: note: declared here
2023-09-20T09:43:21.3188254Z   406 | char* FUNCDECL upcase_c(char *s);
2023-09-20T09:43:21.3188473Z       |                ^~~~~~~~
2023-09-20T09:43:21.3188901Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3189232Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3189518Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3190040Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testWrdcntNormal()’:
2023-09-20T09:43:21.3190636Z src/UnitTests/MTStringUnitTest.h:130:62: warning: ‘MTInt4 wrdcnt_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3191037Z   130 |                 CPPUNIT_ASSERT_EQUAL(compareValue, methodName(__VA_ARGS__)); \
2023-09-20T09:43:21.3191602Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3192067Z   335 |                               (actual),                \
2023-09-20T09:43:21.3192347Z       |                                ^~~~~~
2023-09-20T09:43:21.3192835Z src/UnitTests/MTStringUnitTest.cpp:1109:9: note: in expansion of macro ‘DO_VALUE_TEST’
2023-09-20T09:43:21.3193191Z  1109 |         DO_VALUE_TEST(wrdcnt_c, (MTInt4)5, normalTestData, tempString);
2023-09-20T09:43:21.3193450Z       |         ^~~~~~~~~~~~~
2023-09-20T09:43:21.3193710Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3193996Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3194305Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:521:19: note: declared here
2023-09-20T09:43:21.3194600Z   521 | MTInt4   FUNCDECL wrdcnt_c(char *s);
2023-09-20T09:43:21.3194826Z       |                   ^~~~~~~~
2023-09-20T09:43:21.3195273Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3195594Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3195891Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3196414Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testWrdcntEmpty()’:
2023-09-20T09:43:21.3197003Z src/UnitTests/MTStringUnitTest.h:130:62: warning: ‘MTInt4 wrdcnt_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3197401Z   130 |                 CPPUNIT_ASSERT_EQUAL(compareValue, methodName(__VA_ARGS__)); \
2023-09-20T09:43:21.3197963Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3198343Z   335 |                               (actual),                \
2023-09-20T09:43:21.3198603Z       |                                ^~~~~~
2023-09-20T09:43:21.3199056Z src/UnitTests/MTStringUnitTest.cpp:1114:9: note: in expansion of macro ‘DO_VALUE_TEST’
2023-09-20T09:43:21.3199400Z  1114 |         DO_VALUE_TEST(wrdcnt_c, (MTInt4)0, emptyTestData, tempString);
2023-09-20T09:43:21.3199849Z       |         ^~~~~~~~~~~~~
2023-09-20T09:43:21.3200111Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3200399Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3200724Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:521:19: note: declared here
2023-09-20T09:43:21.3201005Z   521 | MTInt4   FUNCDECL wrdcnt_c(char *s);
2023-09-20T09:43:21.3201231Z       |                   ^~~~~~~~
2023-09-20T09:43:21.3201720Z In file included from /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestCase.h:6,
2023-09-20T09:43:21.3202118Z                  from src/UnitTests/MTStringUnitTest.h:31,
2023-09-20T09:43:21.3202419Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3202927Z src/UnitTests/MTStringUnitTest.cpp: In member function ‘void MTStringUnitTests::testWrdcntNull()’:
2023-09-20T09:43:21.3203538Z src/UnitTests/MTStringUnitTest.cpp:1119:49: warning: ‘MTInt4 wrdcnt_c(char*)’ is deprecated [-Wdeprecated-declarations]
2023-09-20T09:43:21.3203921Z  1119 |         CPPUNIT_ASSERT_EQUAL((MTInt4)0, wrdcnt_c(nullTestData));
2023-09-20T09:43:21.3204220Z       |                                         ~~~~~~~~^~~~~~~~~~~~~~
2023-09-20T09:43:21.3204787Z /mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/include/cppunit/TestAssert.h:335:32: note: in definition of macro ‘CPPUNIT_ASSERT_EQUAL’
2023-09-20T09:43:21.3205154Z   335 |                               (actual),                \
2023-09-20T09:43:21.3205430Z       |                                ^~~~~~
2023-09-20T09:43:21.3205692Z In file included from src/UnitTests/MTStringUnitTest.h:40,
2023-09-20T09:43:21.3205994Z                  from src/UnitTests/MTStringUnitTest.cpp:29:
2023-09-20T09:43:21.3206303Z /opt/ADO_Agent_0803/_work/6/s/include/mtstring.h:521:19: note: declared here
2023-09-20T09:43:21.3206584Z   521 | MTInt4   FUNCDECL wrdcnt_c(char *s);
2023-09-20T09:43:21.3206824Z       |                   ^~~~~~~~
2023-09-20T09:43:24.0577534Z test compilation completed
2023-09-20T09:43:24.0616258Z Test linking starts ...!!!
2023-09-20T09:43:24.0621550Z /mu/bin/g++ -o  libmtstring_shared_tester src/UnitTests/MTStringUnitTest.o -pthread -Wl,--enable-new-dtags -Wl,-rpath,.,-rpath,/mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/lib:/home/sysprog/libraries/stage/Linux/MU-RHEL90/gcc1131/lib:/mu/mtsdk/corplib/gcc1131/lib:/home/sysprog/libraries/build/gcc1131-rhel9/libmtcrypto_static:/mu/mtsdk/corplib/gcc1131/lib:/mu/dev/gcc/1131/lib64 -L/mu/dev/cppunit/1.15.2-gcc1131-rhel9-64/lib -L/home/sysprog/libraries/stage/Linux/MU-RHEL90/gcc1131/lib -L/mu/mtsdk/corplib/gcc1131/lib -L/home/sysprog/libraries/build/gcc1131-rhel9/libmtcrypto_static -L/mu/dev/gcc/1131/lib64 -lmtstring -lcppunit -ldl
2023-09-20T09:43:24.1035739Z /usr/bin/ld: cannot find -lmtstring
2023-09-20T09:43:24.1248342Z collect2: error: ld returned 1 exit status
2023-09-20T09:43:24.1255510Z make: *** [Makefile:206: depends] Error 1
2023-09-20T09:43:24.1325021Z ##[error]Bash exited with code '2'.
2023-09-20T09:43:24.1357126Z ##[section]Finishing: Build with UT execution






what are some notable differences you can see in these two configurations
COLLECT_GCC=g++
COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/11/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-redhat-linux
Configured with: ../configure --enable-bootstrap --enable-host-pie --enable-host-bind-now --enable-languages=c,c++,fortran,lto --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-shared --enable-threads=posix --enable-checking=release --enable-multilib --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-gcc-major-version-only --with-linker-hash-style=gnu --enable-plugin --enable-initfini-array --without-isl --enable-offload-targets=nvptx-none --without-cuda-driver --enable-gnu-indirect-function --enable-cet --with-tune=generic --with-arch_64=x86-64-v2 --with-arch_32=x86-64 --build=x86_64-redhat-linux --with-build-config=bootstrap-lto --enable-link-serialization=1
Thread model: posix
Supported LTO compression algorithms: zlib zstd
gcc version 11.3.1 20220421 (Red Hat 11.3.1-2) (GCC)





COLLECT_GCC=g++
COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/lto-wrapper
Target: x86_64-redhat-linux
Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-linker-hash-style=gnu --enable-languages=c,c++,objc,obj-c++,java,fortran,ada,go,lto --enable-plugin --enable-initfini-array --disable-libgcj --with-isl=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/isl-install --with-cloog=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/cloog-install --enable-gnu-indirect-function --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux
Thread model: posix
gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC)







linux-vdso.so.1 (0x00007fff999b9000)
        libdl.so.2 => /usr/lib64/libdl.so.2 (0x00007f471b60d000)
        libstdc++.so.6 => /mu/dev/gcc/540/lib/../lib64/libstdc++.so.6 (0x00007f471b292000)
        libm.so.6 => /usr/lib64/libm.so.6 (0x00007f471b1b7000)
        libc.so.6 => /usr/lib64/libc.so.6 (0x00007f471afae000)
        libgcc_s.so.1 => /mu/dev/gcc/540/lib/../lib64/libgcc_s.so.1 (0x00007f471ad97000)
        /lib64/ld-linux-x86-64.so.2 (0x00007f471b85d000)





2023-09-19T05:18:55.1531495Z ##[section]Starting: Build with UT execution
2023-09-19T05:18:55.1536497Z ==============================================================================
2023-09-19T05:18:55.1536899Z Task         : Command line
2023-09-19T05:18:55.1537137Z Description  : Run a command line script using Bash on Linux and macOS and cmd.exe on Windows
2023-09-19T05:18:55.1537346Z Version      : 2.178.0
2023-09-19T05:18:55.1537499Z Author       : Microsoft Corporation
2023-09-19T05:18:55.1537855Z Help         : https://docs.microsoft.com/azure/devops/pipelines/tasks/utility/command-line
2023-09-19T05:18:55.1538113Z ==============================================================================
2023-09-19T05:18:55.8244226Z Generating script.
2023-09-19T05:18:55.8246738Z ========================== Starting Command Output ===========================
2023-09-19T05:18:55.8258006Z [command]/usr/bin/bash --noprofile --norc /opt/ADO_Agent_0803/_work/_temp/6418643d-4bed-43a5-a401-b8529ba91e16.sh
2023-09-19T05:18:55.8258957Z Building TESTREPORHEL9 Linux
2023-09-19T05:18:55.8259684Z /opt/ADO_Agent_0803/_work/4/s
2023-09-19T05:18:55.8261212Z /opt/ADO_Agent_0803/_work/_temp/6418643d-4bed-43a5-a401-b8529ba91e16.sh: line 3: Agent.ReleaseDirectory: command not found
2023-09-19T05:18:55.8261905Z 
2023-09-19T05:18:55.8278085Z rm -f myMathTests main.o mymath.o test_mymath.o
2023-09-19T05:18:55.8279184Z /mu/bin/g++ -c mymath.cpp -o mymath.o
2023-09-19T05:18:55.8280333Z /mu/bin/g++ -I./cppunit/include -c test_mymath.cpp -o test_mymath.o
2023-09-19T05:18:55.9950448Z /mu/bin/g++ mymath.o test_mymath.o -L./cppunit/lib -ldl -Wl,--enable-new-dtags -Wl,-rpath,.,-rpath,./cppunit/lib -o myMathTests -lcppunit
2023-09-19T05:18:56.0661514Z /usr/bin/ld: test_mymath.o: in function `main':
2023-09-19T05:18:56.0694203Z test_mymath.cpp:(.text+0x49): undefined reference to `CppUnit::TestFactoryRegistry::getRegistry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'
2023-09-19T05:18:56.0762190Z /usr/bin/ld: test_mymath.cpp:(.text+0xd5): undefined reference to `CppUnit::TextTestRunner::run(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, bool, bool)'
2023-09-19T05:18:56.0769320Z /usr/bin/ld: test_mymath.o: in function `MyMathTest::addTestsToSuite(CppUnit::TestSuiteBuilderContextBase&)':
2023-09-19T05:18:56.0771364Z test_mymath.cpp:(.text._ZN10MyMathTest15addTestsToSuiteERN7CppUnit27TestSuiteBuilderContextBaseE[_ZN10MyMathTest15addTestsToSuiteERN7CppUnit27TestSuiteBuilderContextBaseE]+0x69): undefined reference to `CppUnit::TestSuiteBuilderContextBase::getTestNameFor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'
2023-09-19T05:18:56.0773038Z /usr/bin/ld: test_mymath.o: in function `MyMathTest::suite()':
2023-09-19T05:18:56.0774422Z test_mymath.cpp:(.text._ZN10MyMathTest5suiteEv[_ZN10MyMathTest5suiteEv]+0x4f): undefined reference to `CppUnit::TestSuite::TestSuite(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)'
2023-09-19T05:18:56.0775768Z /usr/bin/ld: test_mymath.o: in function `MyMathTest::testAdd()':
2023-09-19T05:18:56.0777147Z test_mymath.cpp:(.text._ZN10MyMathTest7testAddEv[_ZN10MyMathTest7testAddEv]+0x57): undefined reference to `CppUnit::SourceLine::SourceLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)'
2023-09-19T05:18:56.0779098Z /usr/bin/ld: test_mymath.cpp:(.text._ZN10MyMathTest7testAddEv[_ZN10MyMathTest7testAddEv]+0xcb): undefined reference to `CppUnit::Message::Message(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'
2023-09-19T05:18:56.0780765Z /usr/bin/ld: test_mymath.cpp:(.text._ZN10MyMathTest7testAddEv[_ZN10MyMathTest7testAddEv]+0x1bb): undefined reference to `CppUnit::SourceLine::SourceLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)'
2023-09-19T05:18:56.0802971Z /usr/bin/ld: test_mymath.cpp:(.text._ZN10MyMathTest7testAddEv[_ZN10MyMathTest7testAddEv]+0x22f): undefined reference to `CppUnit::Message::Message(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'
2023-09-19T05:18:56.0808539Z /usr/bin/ld: test_mymath.cpp:(.text._ZN10MyMathTest7testAddEv[_ZN10MyMathTest7testAddEv]+0x31f): undefined reference to `CppUnit::SourceLine::SourceLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)'
2023-09-19T05:18:56.0810351Z /usr/bin/ld: test_mymath.cpp:(.text._ZN10MyMathTest7testAddEv[_ZN10MyMathTest7testAddEv]+0x37b): undefined reference to `CppUnit::Message::Message(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'
2023-09-19T05:18:56.0812020Z /usr/bin/ld: test_mymath.o: in function `CppUnit::TestCaller<MyMathTest>::TestCaller(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (MyMathTest::*)(), MyMathTest*)':
2023-09-19T05:18:56.0813959Z test_mymath.cpp:(.text._ZN7CppUnit10TestCallerI10MyMathTestEC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEMS1_FvvEPS1_[_ZN7CppUnit10TestCallerI10MyMathTestEC5ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEMS1_FvvEPS1_]+0x2c): undefined reference to `CppUnit::TestCase::TestCase(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'
2023-09-19T05:18:56.0815158Z /usr/bin/ld: test_mymath.o: in function `CppUnit::AutoRegisterSuite<MyMathTest>::AutoRegisterSuite()':
2023-09-19T05:18:56.0816367Z test_mymath.cpp:(.text._ZN7CppUnit17AutoRegisterSuiteI10MyMathTestEC2Ev[_ZN7CppUnit17AutoRegisterSuiteI10MyMathTestEC5Ev]+0x36): undefined reference to `CppUnit::TestFactoryRegistry::getRegistry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'
2023-09-19T05:18:56.0817647Z /usr/bin/ld: test_mymath.o:(.rodata._ZTVN7CppUnit10TestCallerI10MyMathTestEE[_ZTVN7CppUnit10TestCallerI10MyMathTestEE]+0x40): undefined reference to `CppUnit::TestCase::getName[abi:cxx11]() const'
2023-09-19T05:18:56.0819095Z /usr/bin/ld: test_mymath.o:(.rodata._ZTVN7CppUnit10TestCallerI10MyMathTestEE[_ZTVN7CppUnit10TestCallerI10MyMathTestEE]+0x48): undefined reference to `CppUnit::Test::findTestPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CppUnit::TestPath&) const'
2023-09-19T05:18:56.0820522Z /usr/bin/ld: test_mymath.o:(.rodata._ZTVN7CppUnit10TestCallerI10MyMathTestEE[_ZTVN7CppUnit10TestCallerI10MyMathTestEE]+0x58): undefined reference to `CppUnit::Test::findTest(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'
2023-09-19T05:18:56.0822026Z /usr/bin/ld: test_mymath.o:(.rodata._ZTVN7CppUnit10TestCallerI10MyMathTestEE[_ZTVN7CppUnit10TestCallerI10MyMathTestEE]+0x60): undefined reference to `CppUnit::Test::resolveTestPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'
2023-09-19T05:18:56.0822972Z collect2: error: ld returned 1 exit status
2023-09-19T05:18:56.0823542Z make: *** [Makefile:13: build] Error 1
2023-09-19T05:18:56.0851442Z ##[error]Bash exited with code '2'.
2023-09-19T05:18:56.0877838Z ##[section]Finishing: Build with UT execution







CXX = /mu/bin/g++

RUNTIMEPATH=./cppunit/lib
TEST_SHARED_LIBS = -Wl,--enable-new-dtags -Wl,-rpath,.,-rpath,$(RUNTIMEPATH)
SOURCES = mymath.cpp main.cpp test_mymath.cpp
CPPFLAGS = -I./cppunit/include
CXXFLAGS = -std=c++11
LDFLAGS = -L./cppunit/lib -ldl
LDLIBS = -lcppunit
EXECUTABLE = myMathTests

build: mymath.o test_mymath.o
	$(CXX) $(LDFLAGS) $(TEST_SHARED_LIBS) mymath.o test_mymath.o $(LDLIBS) -o myMathTests
	echo "Compilation completed"

main.o:
	$(CXX) -c main.cpp -o main.o

mymath.o:
	$(CXX) -c mymath.cpp -o mymath.o

test_mymath.o:
	$(CXX) $(CPPFLAGS) -c test_mymath.cpp -o test_mymath.o

clean:
	rm -f $(EXECUTABLE) main.o mymath.o test_mymath.o

test: build $(EXECUTABLE)
	./$(EXECUTABLE)






2023-09-18T05:53:44.6605584Z ##[section]Starting: Build with UT execution
2023-09-18T05:53:44.6610360Z ==============================================================================
2023-09-18T05:53:44.6610575Z Task         : Command line
2023-09-18T05:53:44.6610791Z Description  : Run a command line script using Bash on Linux and macOS and cmd.exe on Windows
2023-09-18T05:53:44.6611013Z Version      : 2.178.0
2023-09-18T05:53:44.6611165Z Author       : Microsoft Corporation
2023-09-18T05:53:44.6611413Z Help         : https://docs.microsoft.com/azure/devops/pipelines/tasks/utility/command-line
2023-09-18T05:53:44.6611694Z ==============================================================================
2023-09-18T05:53:45.5770732Z Generating script.
2023-09-18T05:53:45.5771678Z ========================== Starting Command Output ===========================
2023-09-18T05:53:45.5775664Z [command]/usr/bin/bash --noprofile --norc /opt/ADO_Agent_0803/_work/_temp/e5baa3f1-3613-4423-ab3b-2937b8e1a9fd.sh
2023-09-18T05:53:45.5775997Z Building TESTREPORHEL9 Linux
2023-09-18T05:53:45.5776276Z /opt/ADO_Agent_0803/_work/4/s
2023-09-18T05:53:45.5776799Z /opt/ADO_Agent_0803/_work/_temp/e5baa3f1-3613-4423-ab3b-2937b8e1a9fd.sh: line 3: Agent.ReleaseDirectory: command not found
2023-09-18T05:53:45.5777019Z 
2023-09-18T05:53:45.5777349Z rm -f myMathTests main.o mymath.o test_mymath.o
2023-09-18T05:53:45.5777698Z /mu/bin/g++ -c mymath.cpp -o mymath.o
2023-09-18T05:53:45.5778086Z /mu/bin/g++ -I./cppunit/include -c test_mymath.cpp -o test_mymath.o
2023-09-18T05:53:45.5778538Z /mu/bin/g++ -L./cppunit/lib   mymath.o test_mymath.o -o myMathTests -lcppunit
2023-09-18T05:53:45.5778944Z /usr/bin/ld: test_mymath.o: in function `main':
2023-09-18T05:53:45.5779616Z test_mymath.cpp:(.text+0x49): undefined reference to `CppUnit::TestFactoryRegistry::getRegistry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'
2023-09-18T05:53:45.5780459Z /usr/bin/ld: test_mymath.cpp:(.text+0xd5): undefined reference to `CppUnit::TextTestRunner::run(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, bool, bool)'
2023-09-18T05:53:45.5781172Z /usr/bin/ld: test_mymath.o: in function `MyMathTest::addTestsToSuite(CppUnit::TestSuiteBuilderContextBase&)':
2023-09-18T05:53:45.5782960Z test_mymath.cpp:(.text._ZN10MyMathTest15addTestsToSuiteERN7CppUnit27TestSuiteBuilderContextBaseE[_ZN10MyMathTest15addTestsToSuiteERN7CppUnit27TestSuiteBuilderContextBaseE]+0x69): undefined reference to `CppUnit::TestSuiteBuilderContextBase::getTestNameFor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'
2023-09-18T05:53:45.5783846Z /usr/bin/ld: test_mymath.o: in function `MyMathTest::suite()':
2023-09-18T05:53:45.5784643Z test_mymath.cpp:(.text._ZN10MyMathTest5suiteEv[_ZN10MyMathTest5suiteEv]+0x4f): undefined reference to `CppUnit::TestSuite::TestSuite(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)'
2023-09-18T05:53:45.5785310Z /usr/bin/ld: test_mymath.o: in function `MyMathTest::testAdd()':
2023-09-18T05:53:45.5786110Z test_mymath.cpp:(.text._ZN10MyMathTest7testAddEv[_ZN10MyMathTest7testAddEv]+0x57): undefined reference to `CppUnit::SourceLine::SourceLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)'
2023-09-18T05:53:45.5787287Z /usr/bin/ld: test_mymath.cpp:(.text._ZN10MyMathTest7testAddEv[_ZN10MyMathTest7testAddEv]+0xcb): undefined reference to `CppUnit::Message::Message(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'
2023-09-18T05:53:45.5788430Z /usr/bin/ld: test_mymath.cpp:(.text._ZN10MyMathTest7testAddEv[_ZN10MyMathTest7testAddEv]+0x1bb): undefined reference to `CppUnit::SourceLine::SourceLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)'
2023-09-18T05:53:45.5789598Z /usr/bin/ld: test_mymath.cpp:(.text._ZN10MyMathTest7testAddEv[_ZN10MyMathTest7testAddEv]+0x22f): undefined reference to `CppUnit::Message::Message(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'
2023-09-18T05:53:45.5791080Z /usr/bin/ld: test_mymath.cpp:(.text._ZN10MyMathTest7testAddEv[_ZN10MyMathTest7testAddEv]+0x31f): undefined reference to `CppUnit::SourceLine::SourceLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)'
2023-09-18T05:53:45.5792323Z /usr/bin/ld: test_mymath.cpp:(.text._ZN10MyMathTest7testAddEv[_ZN10MyMathTest7testAddEv]+0x37b): undefined reference to `CppUnit::Message::Message(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'
2023-09-18T05:53:45.5793392Z /usr/bin/ld: test_mymath.o: in function `CppUnit::TestCaller<MyMathTest>::TestCaller(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void (MyMathTest::*)(), MyMathTest*)':
2023-09-18T05:53:45.5794705Z test_mymath.cpp:(.text._ZN7CppUnit10TestCallerI10MyMathTestEC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEMS1_FvvEPS1_[_ZN7CppUnit10TestCallerI10MyMathTestEC5ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEMS1_FvvEPS1_]+0x2c): undefined reference to `CppUnit::TestCase::TestCase(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'
2023-09-18T05:53:45.5795658Z /usr/bin/ld: test_mymath.o: in function `CppUnit::AutoRegisterSuite<MyMathTest>::AutoRegisterSuite()':
2023-09-18T05:53:45.5796595Z test_mymath.cpp:(.text._ZN7CppUnit17AutoRegisterSuiteI10MyMathTestEC2Ev[_ZN7CppUnit17AutoRegisterSuiteI10MyMathTestEC5Ev]+0x36): undefined reference to `CppUnit::TestFactoryRegistry::getRegistry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'
2023-09-18T05:53:45.5797593Z /usr/bin/ld: test_mymath.o:(.rodata._ZTVN7CppUnit10TestCallerI10MyMathTestEE[_ZTVN7CppUnit10TestCallerI10MyMathTestEE]+0x40): undefined reference to `CppUnit::TestCase::getName[abi:cxx11]() const'
2023-09-18T05:53:45.5798673Z /usr/bin/ld: test_mymath.o:(.rodata._ZTVN7CppUnit10TestCallerI10MyMathTestEE[_ZTVN7CppUnit10TestCallerI10MyMathTestEE]+0x48): undefined reference to `CppUnit::Test::findTestPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CppUnit::TestPath&) const'
2023-09-18T05:53:45.5799805Z /usr/bin/ld: test_mymath.o:(.rodata._ZTVN7CppUnit10TestCallerI10MyMathTestEE[_ZTVN7CppUnit10TestCallerI10MyMathTestEE]+0x58): undefined reference to `CppUnit::Test::findTest(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'
2023-09-18T05:53:45.5800921Z /usr/bin/ld: test_mymath.o:(.rodata._ZTVN7CppUnit10TestCallerI10MyMathTestEE[_ZTVN7CppUnit10TestCallerI10MyMathTestEE]+0x60): undefined reference to `CppUnit::Test::resolveTestPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'
2023-09-18T05:53:45.5801748Z collect2: error: ld returned 1 exit status
2023-09-18T05:53:45.5802089Z make: *** [Makefile:11: build] Error 1
2023-09-18T05:53:45.5826912Z ##[error]Bash exited with code '2'.
2023-09-18T05:53:45.5872668Z ##[section]Finishing: Build with UT execution

#include <cppunit/TestCase.h>
#include <cppunit/TestResult.h>
#include <cppunit/TestResultCollector.h>
#include <cppunit/TestRunner.h>
#include <cppunit/TextTestRunner.h>
#include <cppunit/extensions/TestFactoryRegistry.h>



test_mymath.cpp: In function ‘int main()’:
test_mymath.cpp:22:14: error: ‘CppUnit::TextUi’ has not been declared
   22 |     CppUnit::TextUi::TestRunner runner;
      |              ^~~~~~
test_mymath.cpp:24:5: error: ‘runner’ was not declared in this scope
   24 |     runner.addTest(registry.makeTest());


This ismy make file
CXX = /mu/bin/g++

SOURCES = mymath.cpp main.cpp test_mymath.cpp
CPPFLAGS = -I -I./cppunit/include -I./cppunit
CXXFLAGS = -std=c++11
LDFLAGS = -L -L./cppunit -L./cppunit/lib
LDLIBS = -lcppunit
EXECUTABLE = myMathTests

build: main.o mymath.o test_mymath.o
	$(CXX) $(LDFLAGS)  main.o mymath.o test_mymath.o -o myMathTests $(LDLIBS)

main.o:
	$(CXX) -c main.cpp -o main.o

mymath.o:
	$(CXX) -c mymath.cpp -o mymath.o

test_mymath.o:
	$(CXX) $(CPPFLAGS) -c test_mymath.cpp -o test_mymath.o

clean:
	rm -f $(EXECUTABLE) main.o mymath.o test_mymath.o

test: $(EXECUTABLE)
	./$(EXECUTABLE)


this is my test_mymath.cpp
#include "./cppunit/include/cppunit/extensions/HelperMacros.h"
#include "mymath.h"
#include "./cppunit/include/cppunit/TestCase.h"
#include "./cppunit/include/cppunit/TestSuite.h"
class MyMathTest:public
CppUnit::TestFixture{

    CPPUNIT_TEST_SUITE(MyMathTest);
    CPPUNIT_TEST(testAdd);
    CPPUNIT_TEST_SUITE_END();

    public:
        void testAdd(){
            CPPUNIT_ASSERT(add(2,3)==5);
            CPPUNIT_ASSERT(add(4,3)==7);
            CPPUNIT_ASSERT(add(5,3)==8);
        }
};
CPPUNIT_TEST_SUITE_REGISTRATION(MyMathTest);
int main() {
    // Create the test suite and run the tests
    CppUnit::TextUi::TestRunner runner;
    CppUnit::TestFactoryRegistry &registry = CppUnit::TestFactoryRegistry::getRegistry();
    runner.addTest(registry.makeTest());
    bool wasSuccessful = runner.run("", false);

    return wasSuccessful ? 0 : 1;
}

This is my directory structure
maindirectory
cppunit
 include
  cppunit
   include files
   include folders
 lib
  library files


Getting this error
In file included from test_mymath.cpp:1:
./cppunit/include/cppunit/extensions/HelperMacros.h:9:10: fatal error: cppunit/TestCaller.h: No such file or directory
    9 | #include <cppunit/TestCaller.h>
      |          ^~~~~~~~~~~~~~~~~~~~~~



CXX = /mu/bin/g++

SOURCES = mymath.cpp main.cpp test_mymath.cpp
#OBJECTS = $(SOURCES:.cpp=.o)
EXECUTABLE = myMathTests

build: main.o mymath.o
	$(CXX) $(LDFLAGS)  main.o mymath.o -o myMathTests

main.o:
	$(CXX) -c main.cpp -o main.o

mymath.o:
	$(CXX) -c mymath.cpp -o mymath.o



clean:
	rm -f $(EXECUTABLE) $(OBJECTS)

test: $(EXECUTABLE)
	./$(EXECUTABLE)









#include <iostream>
#include "myMath.h"

int main() {
    int result = add(2, 3);
    std::cout << "Result: " << result << std::endl;
    return 0;
}


int main() {
    // Create the test suite and run the tests
    CppUnit::TextUi::TestRunner runner;
    CppUnit::TestFactoryRegistry &registry = CppUnit::TestFactoryRegistry::getRegistry();
    runner.addTest(registry.makeTest());
    bool wasSuccessful = runner.run("", false);

    return wasSuccessful ? 0 : 1;
}



#---------------------------------------------------------------------------#
#  Makefile created for build and test CORPLIBS(mtxml)
#  
#  Created by: dmajhi@micron.com
#  Date: 06/01/2023
#---------------------------------------------------------------------------#

#-----------------------------------#
# Common variables Declration 
#-----------------------------------#

CXX=/mu/bin/g++
TARGET_DEFINITIONS = _REENTRANT NDEBUG _M_DLL MTXML2_LIBRARY_BUILD 
LIBRARY_NAME = mtxml2
LIB_NAME = libmtxml2
TEST_TARGET = libmtxml2_shared_tester
LINK = -shared
LNS = ln -s
LS	= ls -al
CP	=	cp -a
CHMOD = chmod 644
CPPFLAGS = -g3 -O2 -fvisibility=hidden -fexceptions -shared -fpermissive -fPIC
TEST_CPPFLAGS	= -g3 -O2 -fexceptions -shared -fpermissive  -fPIC
TARGET_LDFLAGS = -pthread
CURR_DIR	=	$(PWD)
CORPBUILD	=	/home/hemahanumaku/corpbuild
#CORPBUILD	=	/mu/mtapps/corp/test_common.sh
#CORPBUILD	=	/mu/mtapps/corp/
SH_FILE	=	test_common.sh

#source $(CORPBUILD)/$(SH_FILE)


#-------------------------------------#
# Shared libraries mtxml variables
#-------------------------------------#
RUNTIME_PATH = /mu/mtsdk/corplib/gcc540/lib:/home/sysprog/libraries/build/gcc540-rhel7/libmtcrypto_static:/mu/mtsdk/corplib/gcc540/lib:/mu/sdk/xerces/3.2.3-gcc540-rhel7-64/lib:/mu/sdk/xalan/1.12-gcc540-rhel7-64/lib:/mu/dev/gcc/540/lib64 -L.
LIBDIRS = /home/sysprog/libraries/stage/Linux/MU-RHEL70/gcc540/lib /mu/mtsdk/corplib/gcc540/lib /home/sysprog/libraries/build/gcc540-rhel7/libmtcrypto_static /mu/mtsdk/corplib/gcc540/lib /mu/sdk/xerces/3.2.3-gcc540-rhel7-64/lib /mu/sdk/xalan/1.12-gcc540-rhel7-64/lib /mu/dev/gcc/540/lib64
LIBRARIES = mtcrypto xerces-c xalan-c mipc 

SHARED_LIBS        = -Wl,--enable-new-dtags -Wl,-rpath,$(RUNTIME_PATH) $(addprefix -L,$(LIBDIRS)) $(addprefix -l,$(LIBRARIES))
INCS += /mu/sdk/xerces/3.2.3-gcc540-rhel7-64/include /mu/sdk/xalan/1.12-gcc540-rhel7-64/include /home/sysprog/libraries/stage/Linux/MU-RHEL70/gcc540/include /mu/mtsdk/corplib/gcc540/include /opt/Agent_21722/_work/1/s/include

#---------------------------------
# Make install
#--------------------------------
#INC_DESTINATION	= /home/sysprog/libraries/stage/Linux/MU-RHEL70/gcc540/include 
#LIB_DESTINATION	= /home/sysprog/libraries/stage/Linux/MU-RHEL70/gcc540/lib 
#INC_DIRS     += /mu/sdk/xerces/3.2.3-gcc540-rhel7-64/include /mu/sdk/xalan/1.12-gcc540-rhel7-64/include
#LIB_DIRS     += /mu/sdk/xerces/3.2.3-gcc540-rhel7-64/lib /mu/sdk/xalan/1.12-gcc540-rhel7-64/lib


INC_DESTINATION	= /home/hemahanumaku/stage/Linux/MU-RHEL70/gcc540/include 
LIB_DESTINATION	= /home/hemahanumaku/stage/Linux/MU-RHEL70/gcc540/lib


MU_INC_DEST	= /home/hemahanumaku/mu/mtsdk/corplib/gcc540/include 
MU_LIB_DEST	= /home/hemahanumaku/mu/mtsdk/corplib/gcc540/lib 


# Make stage_promote 
#--------------------------------
#INC_DESTINATION	= /mu/mtsdk/corplib/gcc540/include 
#LIB_DESTINATION	= /mu/mtsdk/corplib/gcc540/lib 

#INC_DESTINATION	= /home/corplib/dmajhi/mu/mtsdk/corplib/gcc540/include 
#LIB_DESTINATION	= /home/corplib/dmajhi/mu/mtsdk/corplib/gcc540/lib 
#----------------------------------------#
# test libraries variables
#----------------------------------------#

TEST_RUNTIIME_PATH	= /mu/dev/cppunit/1.10.2-gcc443-rhel5-64/lib:/home/sysprog/libraries/stage/Linux/MU-RHEL70/gcc540/lib:/mu/mtsdk/corplib/gcc540/lib:/home/sysprog/libraries/build/gcc540-rhel7/libmtcrypto_static:/mu/mtsdk/corplib/gcc540/lib:/mu/sdk/xerces/3.2.3-gcc540-rhel7-64/lib:/mu/sdk/xalan/1.12-gcc540-rhel7-64/lib:/mu/dev/gcc/540/lib64:/mu/mtsdk/corplib/gcc540/lib:/home/sysprog/libraries/build/gcc540-rhel7/libmtcrypto_static:/mu/mtsdk/corplib/gcc540/lib:/mu/sdk/xerces/3.2.3-gcc540-rhel7-64/lib:/mu/sdk/xalan/1.12-gcc540-rhel7-64/lib:/mu/dev/gcc/540/lib64

TEST_LIBDIRS	=	/mu/dev/cppunit/1.10.2-gcc443-rhel5-64/lib \
					/home/sysprog/libraries/stage/Linux/MU-RHEL70/gcc540/lib \
					/mu/mtsdk/corplib/gcc540/lib \
					/home/sysprog/libraries/build/gcc540-rhel7/libmtcrypto_static \
					/mu/mtsdk/corplib/gcc540/lib /mu/sdk/xerces/3.2.3-gcc540-rhel7-64/lib \
					/mu/sdk/xalan/1.12-gcc540-rhel7-64/lib /mu/dev/gcc/540/lib64

TEST_LIBRARIES	=	mtxml2 cppunit mipc mtmessage cmtexception

TEST_SHARED_LIBS = -Wl,--enable-new-dtags -Wl,-rpath,.,-rpath,$(TEST_RUNTIIME_PATH) $(addprefix -L,$(TEST_LIBDIRS)) $(addprefix -l,$(TEST_LIBRARIES))

TEST_INCS =	/mu/dev/cppunit/1.10.2-gcc443-rhel5-64/include \
			/home/sysprog/libraries/stage/Linux/MU-RHEL70/gcc540/include \
			/mu/mtsdk/corplib/gcc540/include \
			/mu/sdk/xerces/3.2.3-gcc540-rhel7-64/include \
			/mu/sdk/xalan/1.12-gcc540-rhel7-64/include

#--------------#
# Sorce files
#--------------#

SRC_FILES = src/cmtxmlattr2w.cpp src/cmtxmlcdata2w.cpp src/cmtxmlcomment2w.cpp src/cmtxmldata.cpp \
			src/cmtxmldata2.cpp src/cmtxmldata2w.cpp src/cmtxmldataimpl2w.cpp src/cmtxmldataimplw.cpp \
			src/cmtxmldocument2w.cpp src/cmtxmlelement2w.cpp src/cmtxmlerrhandlerw.cpp src/cmtxmlimplutils2.cpp \
			src/cmtxmlmsg.cpp src/cmtxmlmsg2.cpp src/cmtxmlmsg2w.cpp src/cmtxmlmsgheader.cpp \
			src/cmtxmlmsgheaderimpl.cpp src/cmtxmlmsgimpl.cpp src/cmtxmlmsgimpl2.cpp src/cmtxmlnode2.cpp \
			src/cmtxmlnode2w.cpp src/cmtxmlnodeimpl2.cpp src/cmtxmlpi2w.cpp src/cmtxmlutils2.cpp src/cmtxsl2.cpp \
			src/cmtxsl2w.cpp src/cmtxslimpl2w.cpp src/cmtxmlmsgutil.cpp

#SRC_FILES = cmtxmlattr2w.cpp cmtxmlcdata2w.cpp cmtxmlcomment2w.cpp cmtxmldata.cpp \
			cmtxmldata2.cpp cmtxmldata2w.cpp cmtxmldataimpl2w.cpp cmtxmldataimplw.cpp \
			cmtxmldocument2w.cpp cmtxmlelement2w.cpp cmtxmlerrhandlerw.cpp cmtxmlimplutils2.cpp \
			cmtxmlmsg.cpp cmtxmlmsg2.cpp cmtxmlmsg2w.cpp cmtxmlmsgheader.cpp \
			cmtxmlmsgheaderimpl.cpp cmtxmlmsgimpl.cpp cmtxmlmsgimpl2.cpp cmtxmlnode2.cpp \
			cmtxmlnode2w.cpp cmtxmlnodeimpl2.cpp cmtxmlpi2w.cpp cmtxmlutils2.cpp cmtxsl2.cpp \
			cmtxsl2w.cpp cmtxslimpl2w.cpp cmtxmlmsgutil.cpp
#------------------#
#header files:
#------------------#
#HEADERS = include/cmtxmlattr2.h include/cmtxmlcdata2.h include/cmtxmlcomment2.h include/cmtxmldata.h \
		  include/cmtxmldata2.h include/cmtxmldocument2.h include/cmtxmlelement2.h include/cmtxmlexception.h \
		  include/cmtxmlexception2.h include/cmtxmlmsg.h include/cmtxmlmsg2.h include/cmtxmlmsgexception.h \
		  include/cmtxmlmsgheader.h include/cmtxmlnode2.h include/cmtxmlpi2.h include/cmtxmlutils2.h \
		  include/cmtxsl2.h include/cmtxmlmsgutil.h

DEPLOYABLE_HEADERS=include/cmtxmlattr2.h include/cmtxmlcdata2.h include/cmtxmlcomment2.h include/cmtxmldata.h \
		  include/cmtxmldata2.h include/cmtxmldocument2.h include/cmtxmlelement2.h include/cmtxmlexception.h \
		  include/cmtxmlexception2.h include/cmtxmlmsg.h include/cmtxmlmsg2.h include/cmtxmlmsgexception.h \
		  include/cmtxmlmsgheader.h include/cmtxmlnode2.h include/cmtxmlpi2.h include/cmtxmlutils2.h \
		  include/cmtxsl2.h include/cmtxmlmsgutil.h

NON_DEPLOYABLE_HEADERS =  include/auto_ptr_array.h include/cmtxmldataimpl2w.h include/cmtxmldataimplw.h \
			include/cmtxmlerrhandlerw.h include/cmtxmlimplutils2.h include/cmtxmlmsgheaderimpl.h \
			include/cmtxmlmsgimpl.h include/cmtxmlmsgimpl2.h include/cmtxmlnodeimpl2.h \
			include/cmtxslimpl2w.h include/hexbincv.hpp include/mtxml2_resource.h
#-------------------#
#Test source files
#------------------#

TEST_SRCS = src/UnitTests/MTXML2CppUnitTests.cpp src/UnitTests/CMTXMLDocument2Tests.cpp src/UnitTests/CMTXMLNode2Tests.cpp src/UnitTests/CMTXMLMsg2Tests.cpp \
            src/UnitTests/CMTXMLData2Tests.cpp src/UnitTests/CMTXMLElement2Tests.cpp src/UnitTests/CMTXSL2Tests.cpp src/UnitTests/CMTXMLDataTests.cpp

#------------------#
# Test header files:
#------------------#

TEST_HDRS = MTXML2CppUnitTests.h CMTXMLDocument2Tests.h CMTXMLNode2Tests.h CMTXMLMsg2Tests.h \
			CMTXMLData2Tests.h CMTXMLElement2Tests.h CMTXSL2Tests.h employees.xml employees.xsl \
			mtxml2test.xml mtxml2test.xsd mtxml2testInvalid.xml mtxml2testns.xml mtxml2testns.xsd \
			xsltest1.xml xsltest1.xsl xsltest2.xml xsltest2.xsl xsltest3.xml CMTXMLDataTests.h

TEST_DEFINITIONS = _REENTRANT NDEBUG _M_DLL MTXML2_LIBRARY_BUILD XERCES3_ERRMSG

ifdef WIDE_TEST
    TEST_DEFINITIONS += MTXML2W_TEST
endif


TEST_LIBS = cppunit mipc mtmessage cmtexception

#-----------------------------------#
# Version tag updation for CORPLIB
#-----------------------------------#

ifeq ($(strip $(RELEASE)),)
override LIB_EXT := dev
else
	ifneq (,$(findstring _,$(RELEASE)))
		RELEASE_TEMP := $(RELEASE)
		ifneq (,$(findstring /,$(RELEASE_TEMP)))
			RELEASE_TEMP := $(shell echo $(RELEASE_TEMP) | awk -F\/ '{print $$1}')
		endif
			override LIB_EXT := $(shell echo $(RELEASE_TEMP) | awk -F\_ '{print $$2}')
	else
		override LIB_EXT := $(RELEASE)
	endif
endif

override LIB_NAME          := lib$(LIBRARY_NAME)
override SHARED_LIB        := $(LIB_NAME).so.$(LIB_EXT)

#-----------------------------------------#
# Make all libs
#-----------------------------------------#
#.PHONY: all 
#all: build depends 
all: build 

#----------------------------------------#
#Builing shared object (.so) for CORPLIB:
#----------------------------------------#



OBJS = $(SRC_FILES:%.cpp=%.o)

build: $(OBJS)
	$(RM) *.so.*
	$(CXX) $(LINK) -o $(SHARED_LIB) $(OBJS) $(TARGET_LDFLAGS) $(SHARED_LIBS)
	$(RM) libmtxml2.so 
	$(LNS) $(SHARED_LIB) libmtxml2.so  

#---------------------------------#
#Building object filed (.o) files:
#---------------------------------#

$(OBJS):%.o :%.cpp
	@echo "CORPLIB compilation starts..."
	$(CXX) -c $(CPPFLAGS) $(addprefix -D,$(TARGET_DEFINITIONS)) $(addprefix -I,$(INCS)) -o $@ $<
	@echo "COPRPLIB ompilation completed"

#--------------------------------------#
#Building shared object (.so) for test
#--------------------------------------#
TEST_OBJS= $(TEST_SRCS:%.cpp=%.o)

.PHONY: depends 
depends: $(TEST_OBJS)
	@echo "Test linking starts ...!!!"
	$(CXX) -o  $(TEST_TARGET) $(TEST_OBJS) $(TARGET_LDFLAGS) $(TEST_SHARED_LIBS)
	@echo "Test linking completed"
	@echo "Please use make test to run test-case"

#------------------------------------------#
#Building object filed (.o) files for test
#------------------------------------------#

$(TEST_OBJS): %.o :%.cpp
	@echo "test compilation starts "
	$(CXX) -c $(TEST_CPPFLAGS) $(addprefix -D,$(TEST_DEFINITIONS)) $(addprefix -I,$(TEST_INCS)) -o $@ $<
	@echo "test compilation completed"


#.SILENT:TEST_SC
.PHONY:TEST_SC
TEST_SC:
		#@echo " TEST_SC --> $(LIB_NAME).so"
		@echo " TEST_SC --> $(SHARED_LIB)--->$(LIB_EXT)"
#--------------------------------#
# clean the libraries:
#--------------------------------#
.PHONY: clean
clean:
	@echo " clean starts..."
	$(RM) $(SHARED_LIB)
	$(RM) $(TEST_TARGET)
	$(RM) $(OBJS)
	$(RM) $(TEST_OBJS)
	$(RM) *.so 
	$(RM) *.o

#-----------------------------#
# Running test-case
#----------------------------#
.PHONY: test
test: depends
	@echo "running test case!!!"
	./$(TEST_TARGET)

# Need to be deleted  from here........
#-----------------------------------------------------------	

.PHONY: LIB_TEST
LIB_TEST:
		#@echo  -e "Promote (copy) libraries\nfrom: $(CURR_DIR)\nto: $(LIB_DESTINATION)"
		#@echo "-$(SHARED_LIB)"
		#@echo "Change symbolic links"
		#@echo -e "Promote (copy) headers\nfrom: $(CURR_DIR)\nto: $(INC_DESTINATION)"
		#@echo "$(DEPYLOYABLE_HEADERS)" 

			#$(CP)	$(SHARED_LIB)	$(LIB_DESTINATION);
			#$(CP)	$(DEPYLOYABLE_HEADERS)	$(INC_DESTINATION);
		 	#echo "$(shell ./linkLib.sh)"; 
			#$(PWD); 

#.SILENT:TEST_SC
#TEST_SC:
		@echo " TEST_SC --> $(LIB_NAME).so"
		#@echo " TEST_SC --> $(SHARED_LIB)--->$(LIB_EXT)"
		#$(CORPBUILD)/$(SH_FILE) sharedLibName $(SHARED_LIB) 
		$(CORPBUILD) sharedLibName $(SHARED_LIB) 
		#$(CORPBUILD)/$(SH_FILE) muLibPath $(LIB_DESTINATION) $(MU_LIB_DEST)
		#./test_common.sh muIncPath $(INC_DESTINATION) $(MU_INC_DEST)
		#./test_common.sh cpHdr_to_mu $(DEPYLOYABLE_HEADERS) $(INC_DESTINATION) $(MU_INC_DEST)
		#$(CORPBUILD)/$(SH_FILE) linkingLib_stg $(LIB_DESTINATION) $(SHARED_LIB) $(LIB_NAME).so
		#$(CORPBUILD)/$(SH_FILE) linkingLib_mu $(MU_LIB_DEST) $(SHARED_LIB) $(LIB_NAME).so
		#./test_common.sh cpHdr_to_stage $(DEPYLOYABLE_HEADERS) $(CURR_DIR) $(INC_DESTINATION)
		#./test_common.sh cpLib_to_stage $(SHARED_LIB) $(CURR_DIR) $(LIB_DESTINATION)
		#./test_common.sh cpLib_to_mu $(SHARED_LIB) $(LIB_DESTINATION) $(MU_LIB_DEST)
		#$(CORPBUILD)/$(SH_FILE) hdrFilePermission_stg $(DEPLOYABLE_HEADERS) $(INC_DESTINATION)
		#$(CORPBUILD)/$(SH_FILE) hdrFilePermission_stg $(DEPLOYABLE_HEADERS)

#-----------------------------------------------------------

# Delete upto here......

#------------------------------#
# Make install
#------------------------------#

.SILENT: install 
install: 
		$(CORPBUILD)/$(SH_FILE) stgLibPath $(LIB_DESTINATION)
		$(CORPBUILD)/$(SH_FILE) sharedLibName $(SHARED_LIB) 
		$(CORPBUILD)/$(SH_FILE) stgIncPath $(INC_DESTINATION)
		$(CORPBUILD)/$(SH_FILE) deployHeaderList $(DEPLOYABLE_HEADERS)
		$(CORPBUILD)/$(SH_FILE) cpHdr_to_stage $(DEPLOYABLE_HEADERS) $(CURR_DIR) $(INC_DESTINATION) 
		$(CORPBUILD)/$(SH_FILE) hdrFilePermission_stg $(DEPLOYABLE_HEADERS) $(INC_DESTINATION)
		$(CORPBUILD)/$(SH_FILE) cpLib_to_stage $(SHARED_LIB) $(CURR_DIR) $(LIB_DESTINATION)
		$(CORPBUILD)/$(SH_FILE) linkingLib_stg $(LIB_DESTINATION) $(SHARED_LIB) $(LIB_NAME).so

#------------------------------#
# Make stage_promote 
# -----------------------------#

.SILENT: stage_promote 
stage_promote: 
		$(CORPBUILD)/$(SH_FILE) muLibPath $(LIB_DESTINATION) $(MU_LIB_DEST)
		$(CORPBUILD)/$(SH_FILE) sharedLibName $(SHARED_LIB)
		$(CORPBUILD)/$(SH_FILE) muIncPath $(INC_DESTINATION) $(MU_INC_DEST)
		$(CORPBUILD)/$(SH_FILE) deployHeaderList $(DEPLOYABLE_HEADERS)
		$(CORPBUILD)/$(SH_FILE) cpHdr_to_mu $(DEPLOYABLE_HEADERS) $(INC_DESTINATION) $(MU_INC_DEST)
		$(CORPBUILD)/$(SH_FILE) hdrFilePermission_mu $(DEPLOYABLE_HEADERS) $(MU_INC_DEST)
		$(CORPBUILD)/$(SH_FILE) cpLib_to_mu $(SHARED_LIB) $(LIB_DESTINATION) $(MU_LIB_DEST)
		$(CORPBUILD)/$(SH_FILE) linkingLib_mu $(MU_LIB_DEST) $(SHARED_LIB) $(LIB_NAME).so








# the compiler: gcc for C program, define as g++ for C++
# compiler flags:
#   #  -g     - this flag adds debugging information to the executable file
#  -Wall  - this flag is used to turn on most compiler warnings
#    CFLAGS  = -g -Wall
#     
#   # The build target 

CC=g++
CFLAGS=-c -g3 -o2 

TARGET = libmtxml2.so.dev

#all: $(TARGET)
#	$(TARGET): $(TARGET).c
#	$(CC) $(CFLAGS) -o $(TARGET) $(TARGET).c


#clean:
#	$(RM) $(TARGET)

all:
	$(CC) -shared -o $(TARGET)  -pthread cmtxmlattr2w.o cmtxmlcdata2w.o cmtxmlcomment2w.o cmtxmldata.o cmtxmldata2.o cmtxmldata2w.o cmtxmldataimpl2w.o cmtxmldataimplw.o cmtxmldocument2w.o cmtxmlelement2w.o cmtxmlerrhandlerw.o cmtxmlimplutils2.o cmtxmlmsg.o cmtxmlmsg2.o cmtxmlmsg2w.o cmtxmlmsgheader.o cmtxmlmsgheaderimpl.o cmtxmlmsgimpl.o cmtxmlmsgimpl2.o cmtxmlnode2.o cmtxmlnode2w.o cmtxmlnodeimpl2.o cmtxmlpi2w.o cmtxmlutils2.o cmtxsl2.o cmtxsl2w.o cmtxslimpl2w.o cmtxmlmsgutil.o            -Wl,--enable-new-dtags -Wl,-rpath,/mu/mtsdk/corplib/gcc540/lib:/home/sysprog/libraries/build/gcc540-rhel7/libmtcrypto_static:/mu/mtsdk/corplib/gcc540/lib:/mu/sdk/xerces/3.2.3-gcc540-rhel7-64/lib:/mu/sdk/xalan/1.12-gcc540-rhel7-64/lib:/mu/dev/gcc/540/lib64 -L. -L/home/sysprog/libraries/stage/Linux/MU-RHEL70/gcc540/lib -L/mu/mtsdk/corplib/gcc540/lib -L/home/sysprog/libraries/build/gcc540-rhel7/libmtcrypto_static -L/mu/mtsdk/corplib/gcc540/lib -L/mu/sdk/xerces/3.2.3-gcc540-rhel7-64/lib -L/mu/sdk/xalan/1.12-gcc540-rhel7-64/lib -L/mu/dev/gcc/540/lib64 -lmtcrypto -lxerces-c -lxalan-c -lmtmessage

#OBJ: cmtxmlattr2w.o
#	/mu/bin/g++ -c  -g3 -O2 -fvisibility=hidden -fexceptions -shared -fpermissive -fPIC -pthread -D_REENTRANT -DNDEBUG -D_M_DLL -DMTXML2_LIBRARY_BUILD -I. -I/home/sysprog/libraries/stage/Linux/MU-RHEL70/gcc540/include -I/mu/mtsdk/corplib/gcc540/include -I/mu/mtsdk/corplib/gcc540/include -I/mu/sdk/xerces/3.2.3-gcc540-rhel7-64/include -I/mu/sdk/xalan/1.12-gcc540-rhel7-64/include -o cmtxmlattr2w.o cmtxmlattr2w.cpp

clean:
	$(RM) $(TARGET)
	$(RM) *.so 

















#==============================================================================
# File:          $HeadURL: http://svn/corp/DirSvc/MTGroups/trunk/MTGroups80/branches/x64/trunk/Makefile.lib_config $
# Revision:      $LastChangedRevision: 15216 $
# Modified By:   $LastChangedBy: ddlalum $
# Modified Date: $LastChangedDate: 2010-11-05 11:13:31 -0600 (Fri, 05 Nov 2010) $
#
#     This file is used with lbsmake to build and deploy the library.
#     "lbsmake test" will build either a MBCS or wide regression tester depending on whether
#     MTXML2W_TEST defined. Wide tests can be run as follows:
#
#       lbsmake test_clean; WIDE_TEST=1 lbsmake test
#
# Regression testing is implemented with cppunit.
#
#==============================================================================
 
LIBRARY_NAME          = mtgroups
LIBRARY_CONTACTS      = ww_layered_gm_l2@micron.com

DEFINITIONS   = _REENTRANT NDEBUG _M_DLL MTGROUPS_LIBRARY_BUILD
ifdef WIDE_TEST
    DEFINITIONS += MTGROUPSW_TEST 
endif
ifeq ($(DISK_BUILD), TRUE)      #DISK Build Settings
        SRC_REPOSITORY = DISK
		SRC_DIR         = source
		INC_DIRS    = include
	    SRC_FILES     = cmtgroup.cpp cmtgroupssockets.cpp cmtgroupssocketsw.cpp cmtgroupw.cpp \
		 				cmtldap.cpp cmtldapw.cpp cmtworker.cpp cmtworkerw.cpp \
		  				mtgroupscapi.cpp mtgroupscapiw.cpp mtgroupslibrary.cpp mtgroups.c
		TEST_SRC_DIR = source/UnitTests

else
ifeq ($(OS_MAJOR_VERSION), 7) #RHEL 7 host (GCC 5.4.0)
SRC_REPOSITORY = SVN
SRC_SVN_REPOSITORY_DIRECTORY = http://svn/corp/DirSvc/MTGroups/trunk/MTGroups141
TEST_SRC_SVN_REPOSITORY_DIRECTORY = http://svn/corp/DirSvc/MTGroups/trunk/MTGroups141
else
SRC_REPOSITORY = SVN
SRC_SVN_REPOSITORY_DIRECTORY = http://svn/corp/DirSvc/MTGroups/trunk/MTGroups100
TEST_SRC_SVN_REPOSITORY_DIRECTORY = http://svn/corp/DirSvc/MTGroups/trunk/MTGroups100
endif
SRC_FILES     = source/cmtgroup.cpp source/cmtgroupssockets.cpp source/cmtgroupssocketsw.cpp source/cmtgroupw.cpp \
		        source/cmtldap.cpp source/cmtldapw.cpp source/cmtworker.cpp source/cmtworkerw.cpp \
		        source/mtgroupscapi.cpp source/mtgroupscapiw.cpp source/mtgroupslibrary.cpp source/mtgroups.c
endif

DEPLOYABLE_HEADERS = include/cmtgroups.h include/mtgroups.h include/mtgroupscapi.h

NON_DEPLOYABLE_HEADERS =  include/cmtgroupssockets.h include/cmtldap.h include/mtgroupswmacros.h

CPPFLAGS = -g3 -O2 -fvisibility=hidden -fexceptions -Wno-deprecated-declarations

# Since it is unlikely that apps consuming this library will built with hidden symbols,
# remove this option for the binary created by "lbsmake test"
ifeq ($(WHICH),test)
	CPPFLAGS := $(filter-out -fvisibility=hidden,$(CPPFLAGS))
endif

STATIC    = FALSE
LIBRARIES = ldap mipc mtsecurity mtdatetime mtmessage mtmailpage

ifeq ($(OS), SunOS)
    DESTINATION  = MU-SUNOS58-GCC422
    INC_DIRS     = 
    LIB_DIRS     = 
endif

ifeq ($(OS), Linux)
	ifeq ($(OS_MAJOR_VERSION), 7) #RHEL 7 host (GCC 5.4.0)
    DESTINATION  =  MU-RHEL70-GCC540
    DEFINITIONS += LDAP_DEPRECATED
	else
    DESTINATION  =  MU-RHEL50-GCC422
    DEFINITIONS += LDAP_DEPRECATED
    INC_DIRS     = 
    LIB_DIRS     = 
	endif
endif

TEST_SRC_SVN_REPOSITORY_DIR_PATH = source/UnitTests
TEST_SRC_DIR = source/UnitTests
TEST_SRCS     = MTGroupsCppUnitTests.cpp CMTGroupsUnitTest.cpp CMTWorkerUnitTest.cpp \
		        MTGroupsCAPIUnitTest.cpp MTWorkerCAPIUnitTest.cpp
TEST_HDRS     = MTGroupsCppUnitTests.h
TEST_INC_DIRS = /mu/dev/cppunit/1.10.2-gcc443-rhel5-64/include
TEST_LIB_DIRS = /mu/dev/cppunit/1.10.2-gcc443-rhel5-64/lib
TEST_LIBS     = cppunit





















# Makefile

CXX = g++
CPPFLAGS = -I/usr/local/include
CXXFLAGS = -std=c++11
LDFLAGS = -L/usr/local/lib
LDLIBS = -lcppunit

SOURCES = myMath.cpp test_myMath.cpp
OBJECTS = $(SOURCES:.cpp=.o)
EXECUTABLE = myMathTests

all: $(SOURCES) $(EXECUTABLE)

$(EXECUTABLE): $(OBJECTS)
    $(CXX) $(LDFLAGS) $(OBJECTS) -o $@ $(LDLIBS)

.cpp.o:
    $(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $< -o $@

clean:
    rm -f $(EXECUTABLE) $(OBJECTS)

test: $(EXECUTABLE)
    ./$(EXECUTABLE)


CXX = g++
CPPFLAGS = -I/usr/local/include
CXXFLAGS = -std=c++11
LDFLAGS = -L/usr/local/lib
LDLIBS = -lcppunit

SOURCES = myMath.cpp test_myMath.cpp
OBJECTS = $(SOURCES:.cpp=.o)
EXECUTABLE = myMathTests

all: $(SOURCES) $(EXECUTABLE)

$(EXECUTABLE): $(OBJECTS)
	$(CXX) $(LDFLAGS) $(OBJECTS) -o $@ $(LDLIBS)

.cpp.o:
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $< -o $@

clean:
	rm -f $(EXECUTABLE) $(OBJECTS)

test: $(EXECUTABLE)
	./$(EXECUTABLE)





















